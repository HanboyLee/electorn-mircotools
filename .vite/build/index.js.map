{"version":3,"file":"index.js","sources":["../../src/services/baseService.ts","../../src/constants/ipc.ts","../../src/services/fileService.ts","../../node_modules/batch-cluster/dist/Array.js","../../node_modules/batch-cluster/dist/Object.js","../../node_modules/batch-cluster/dist/String.js","../../node_modules/batch-cluster/dist/Logger.js","../../node_modules/batch-cluster/dist/Platform.js","../../node_modules/batch-cluster/dist/BatchClusterOptions.js","../../node_modules/batch-cluster/dist/Async.js","../../node_modules/batch-cluster/dist/Deferred.js","../../node_modules/batch-cluster/dist/Error.js","../../node_modules/batch-cluster/dist/Parser.js","../../node_modules/batch-cluster/dist/Pids.js","../../node_modules/batch-cluster/dist/Stream.js","../../node_modules/batch-cluster/dist/Task.js","../../node_modules/batch-cluster/dist/Timeout.js","../../node_modules/batch-cluster/dist/BatchProcess.js","../../node_modules/batch-cluster/dist/Mean.js","../../node_modules/batch-cluster/dist/Rate.js","../../node_modules/batch-cluster/dist/BatchCluster.js","../../node_modules/exiftool-vendored/dist/Number.js","../../node_modules/exiftool-vendored/dist/Times.js","../../node_modules/exiftool-vendored/dist/String.js","../../node_modules/exiftool-vendored/dist/Array.js","../../node_modules/exiftool-vendored/dist/AsyncRetry.js","../../node_modules/exiftool-vendored/dist/IsWarning.js","../../node_modules/exiftool-vendored/dist/ExifToolTask.js","../../node_modules/exiftool-vendored/dist/Lazy.js","../../node_modules/exiftool-vendored/dist/IsWin32.js","../../node_modules/exiftool-vendored/dist/FilenameCharsetArgs.js","../../node_modules/exiftool-vendored/dist/BinaryExtractionTask.js","../../node_modules/exiftool-vendored/dist/BinaryToBufferTask.js","../../node_modules/exiftool-vendored/dist/Boolean.js","../../node_modules/exiftool-vendored/dist/CapturedAtTagNames.js","../../node_modules/exiftool-vendored/dist/DefaultExiftoolArgs.js","../../node_modules/exiftool-vendored/dist/DefaultMaxProcs.js","../../node_modules/exiftool-vendored/dist/Which.js","../../node_modules/exiftool-vendored/dist/ExiftoolPath.js","../../node_modules/@photostructure/tz-lookup/tz.js","../../node_modules/exiftool-vendored/dist/GeoTz.js","../../node_modules/exiftool-vendored/dist/VersionTask.js","../../node_modules/exiftool-vendored/dist/DefaultExifToolOptions.js","../../node_modules/exiftool-vendored/dist/DeleteAllTagsArgs.js","../../node_modules/exiftool-vendored/dist/ExifToolOptions.js","../../node_modules/exiftool-vendored/dist/Object.js","../../node_modules/exiftool-vendored/dist/Pick.js","../../node_modules/exiftool-vendored/dist/ErrorsAndWarnings.js","../../node_modules/exiftool-vendored/dist/ReadRawTask.js","../../node_modules/exiftool-vendored/dist/BinaryField.js","../../node_modules/luxon/build/node/luxon.js","../../node_modules/exiftool-vendored/dist/Maybe.js","../../node_modules/exiftool-vendored/dist/ExifTime.js","../../node_modules/exiftool-vendored/dist/Timezones.js","../../node_modules/exiftool-vendored/dist/TimeParsing.js","../../node_modules/exiftool-vendored/dist/ExifDateTime.js","../../node_modules/exiftool-vendored/dist/DateTime.js","../../node_modules/exiftool-vendored/dist/ExifDate.js","../../node_modules/exiftool-vendored/dist/CoordinateParser.js","../../node_modules/exiftool-vendored/dist/GPS.js","../../node_modules/exiftool-vendored/dist/OnlyZerosRE.js","../../node_modules/exiftool-vendored/dist/ReadTask.js","../../node_modules/exiftool-vendored/dist/RewriteAllTagsTask.js","../../node_modules/he/he.js","../../node_modules/exiftool-vendored/dist/Struct.js","../../node_modules/exiftool-vendored/dist/WriteTask.js","../../node_modules/exiftool-vendored/dist/GeolocationTags.js","../../node_modules/exiftool-vendored/dist/JSON.js","../../node_modules/exiftool-vendored/dist/ExifTool.js","../../src/services/metadataService.ts","../../src/main/index.ts"],"sourcesContent":["import { ipcMain } from 'electron';\nimport { ServiceHandler } from '@/types/services';\n\n// 服務註冊器基類\nexport abstract class BaseService {\n  protected abstract getHandlers(): ServiceHandler[];\n\n  // 註冊所有處理器\n  public registerHandlers(): void {\n    this.getHandlers().forEach(({ channel, handler }) => {\n      ipcMain.handle(channel, async (event, ...args) => {\n        try {\n          return await handler(...args);\n        } catch (error) {\n          console.error(`Error in channel ${channel}:`, error);\n          throw error;\n        }\n      });\n    });\n  }\n}\n","// 文件操作相關的 IPC 通道\nexport enum FileIPC {\n  READ = 'file:read',\n  WRITE = 'file:write',\n  EXISTS = 'file:exists',\n  SELECT_DIRECTORY = 'file:select-directory',\n  VALIDATE_IMAGE_DIRECTORY = 'file:validate-image-directory',\n}\n\n// Metadata 操作相關的 IPC 通道\nexport enum MetadataIPC {\n  METADATA_READ = 'metadata:read',\n  METADATA_WRITE = 'metadata:write',\n}\n\n// 導出所有 IPC 通道\nexport const IPC = {\n  ...FileIPC,\n  ...MetadataIPC,\n} as const;\n\n// 導出 IPC 通道的類型\nexport type IPCChannel = (typeof IPC)[keyof typeof IPC];\n","import { BaseService } from './baseService';\nimport { FileIPC } from '../constants/ipc';\nimport { dialog } from 'electron';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport { ServiceHandler } from '@/types/services';\n\nexport class FileService extends BaseService {\n  protected getHandlers(): ServiceHandler[] {\n    console.log('Getting FileService handlers...');\n    return [\n      {\n        channel: FileIPC.READ,\n        handler: this.readFile.bind(this),\n      },\n      {\n        channel: FileIPC.WRITE,\n        handler: this.writeFile.bind(this),\n      },\n      {\n        channel: FileIPC.EXISTS,\n        handler: this.exists.bind(this),\n      },\n      {\n        channel: FileIPC.SELECT_DIRECTORY,\n        handler: this.selectDirectory.bind(this),\n      },\n      {\n        channel: FileIPC.VALIDATE_IMAGE_DIRECTORY,\n        handler: this.validateImageDirectory.bind(this),\n      },\n    ];\n  }\n\n  private async readFile(filePath: string): Promise<string> {\n    console.log('Reading file113:', filePath);\n    try {\n      return await fs.readFile(filePath, 'utf-8');\n    } catch (error) {\n      throw new Error(`讀取文件失敗：${error.message}`);\n    }\n  }\n\n  private async writeFile(filePath: string, content: string): Promise<void> {\n    console.log('Writing file:', filePath);\n    try {\n      await fs.writeFile(filePath, content, 'utf-8');\n    } catch (error) {\n      throw new Error(`寫入文件失敗：${error.message}`);\n    }\n  }\n\n  private async exists(filePath: string): Promise<boolean> {\n    console.log('Checking if file exists:', filePath);\n    try {\n      await fs.access(filePath);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * 打開目錄選擇對話框\n   */\n  private async selectDirectory(): Promise<string | undefined> {\n    const result = await dialog.showOpenDialog({\n      properties: ['openDirectory'],\n    });\n\n    if (result.canceled) {\n      return undefined;\n    }\n\n    return result.filePaths[0];\n  }\n\n  /**\n   * 驗證目錄中的圖片文件\n   * @param directoryPath 目錄路徑\n   * @returns 圖片文件名列表\n   */\n  private async validateImageDirectory(directoryPath: string): Promise<string[]> {\n    try {\n      const files = await fs.readdir(directoryPath);\n      const supportedExtensions = new Set(['.jpg', '.jpeg', '.png']);\n\n      const imageFiles = files.filter(file => {\n        const ext = path.extname(file).toLowerCase();\n        return supportedExtensions.has(ext);\n      });\n\n      if (imageFiles.length === 0) {\n        throw new Error('所選目錄中沒有支持的圖片文件');\n      }\n\n      return imageFiles;\n    } catch (error) {\n      if (error.code === 'ENOENT') {\n        throw new Error('目錄不存在');\n      }\n      if (error.code === 'EACCES') {\n        throw new Error('沒有訪問目錄的權限');\n      }\n      throw error;\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.count = exports.filterInPlace = void 0;\n/**\n * Remove all elements from the given array that return false from the given\n * predicate `filter`.\n */\nfunction filterInPlace(arr, filter) {\n    const len = arr.length;\n    let j = 0;\n    // PERF: for-loop to avoid the additional closure from a forEach\n    for (let i = 0; i < len; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const ea = arr[i];\n        if (filter(ea)) {\n            if (i !== j)\n                arr[j] = ea;\n            j++;\n        }\n    }\n    arr.length = j;\n    return arr;\n}\nexports.filterInPlace = filterInPlace;\nfunction count(arr, predicate) {\n    let acc = 0;\n    for (let idx = 0; idx < arr.length; idx++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        if (predicate(arr[idx], idx))\n            acc++;\n    }\n    return acc;\n}\nexports.count = count;\n//# sourceMappingURL=Array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.omit = exports.fromEntries = exports.orElse = exports.isFunction = exports.map = void 0;\n/**\n * Only call and return the result of `f` if `obj` is defined (not null nor\n * undefined)\n */\nfunction map(obj, f) {\n    return obj != null ? f(obj) : undefined;\n}\nexports.map = map;\nfunction isFunction(obj) {\n    return typeof obj === \"function\";\n}\nexports.isFunction = isFunction;\nfunction orElse(obj, defaultValue) {\n    return obj != null\n        ? obj\n        : isFunction(defaultValue)\n            ? defaultValue()\n            : defaultValue;\n}\nexports.orElse = orElse;\nfunction fromEntries(arr) {\n    const o = {};\n    for (const [key, value] of arr) {\n        if (key != null) {\n            o[key] = value;\n        }\n    }\n    return o;\n}\nexports.fromEntries = fromEntries;\nfunction omit(t, ...keysToOmit) {\n    const result = { ...t };\n    for (const ea of keysToOmit) {\n        delete result[ea];\n    }\n    return result;\n}\nexports.omit = omit;\n//# sourceMappingURL=Object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toS = exports.ensureSuffix = exports.notBlank = exports.blank = void 0;\nconst Object_1 = require(\"./Object\");\nfunction blank(s) {\n    return s == null || String(s).trim().length === 0;\n}\nexports.blank = blank;\nfunction notBlank(s) {\n    return !blank(s);\n}\nexports.notBlank = notBlank;\nfunction ensureSuffix(s, suffix) {\n    return s.endsWith(suffix) ? s : s + suffix;\n}\nexports.ensureSuffix = ensureSuffix;\nfunction toS(s) {\n    return s == null ? \"\" : (0, Object_1.isFunction)(s.toString) ? s.toString() : String(s);\n}\nexports.toS = toS;\n//# sourceMappingURL=String.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Log = exports.logger = exports.setLogger = exports.NoLogger = exports.ConsoleLogger = exports.LogLevels = void 0;\nconst node_util_1 = __importDefault(require(\"node:util\"));\nconst Object_1 = require(\"./Object\");\nconst String_1 = require(\"./String\");\nexports.LogLevels = [\n    \"trace\",\n    \"debug\",\n    \"info\",\n    \"warn\",\n    \"error\",\n];\nconst _debuglog = node_util_1.default.debuglog(\"batch-cluster\");\nconst noop = () => undefined;\n/**\n * Default `Logger` implementation.\n *\n * - `debug` and `info` go to {@link util.debuglog}(\"batch-cluster\")`.\n *\n * - `warn` and `error` go to `console.warn` and `console.error`.\n *\n * @see https://nodejs.org/api/util.html#util_util_debuglog_section\n * @see https://nodejs.org/api/console.html\n */\nexports.ConsoleLogger = Object.freeze({\n    /**\n     * No-ops by default, as this is very low-level information.\n     */\n    trace: noop,\n    /**\n     * Delegates to `util.debuglog(\"batch-cluster\")`:\n     * <https://nodejs.org/api/util.html#util_util_debuglog_section>\n     */\n    debug: _debuglog,\n    /**\n     * Delegates to `util.debuglog(\"batch-cluster\")`:\n     * <https://nodejs.org/api/util.html#util_util_debuglog_section>\n     */\n    info: _debuglog,\n    /**\n     * Delegates to `console.warn`\n     */\n    warn: console.warn,\n    /**\n     * Delegates to `console.error`\n     */\n    error: console.error,\n});\n/**\n * `Logger` that disables all logging.\n */\nexports.NoLogger = Object.freeze({\n    trace: noop,\n    debug: noop,\n    info: noop,\n    warn: noop,\n    error: noop,\n});\nlet _logger = exports.NoLogger;\nfunction setLogger(l) {\n    if (exports.LogLevels.some((ea) => typeof l[ea] !== \"function\")) {\n        throw new Error(\"invalid logger, must implement \" + exports.LogLevels);\n    }\n    _logger = l;\n}\nexports.setLogger = setLogger;\nfunction logger() {\n    return _logger;\n}\nexports.logger = logger;\nexports.Log = {\n    withLevels: (delegate) => {\n        const timestamped = {};\n        exports.LogLevels.forEach((ea) => {\n            const prefix = (ea + \" \").substring(0, 5) + \" | \";\n            timestamped[ea] = (message, ...optionalParams) => {\n                if ((0, String_1.notBlank)(message)) {\n                    delegate[ea](prefix + message, ...optionalParams);\n                }\n            };\n        });\n        return timestamped;\n    },\n    withTimestamps: (delegate) => {\n        const timestamped = {};\n        exports.LogLevels.forEach((level) => (timestamped[level] = (message, ...optionalParams) => (0, Object_1.map)(message, (ea) => delegate[level](new Date().toISOString() + \" | \" + ea, ...optionalParams))));\n        return timestamped;\n    },\n    filterLevels: (l, minLogLevel) => {\n        const minLogLevelIndex = exports.LogLevels.indexOf(minLogLevel);\n        const filtered = {};\n        exports.LogLevels.forEach((ea, idx) => (filtered[ea] = idx < minLogLevelIndex ? noop : l[ea].bind(l)));\n        return filtered;\n    },\n};\n//# sourceMappingURL=Logger.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isLinux = exports.isMac = exports.isWin = void 0;\nconst node_os_1 = __importDefault(require(\"node:os\"));\nconst _platform = node_os_1.default.platform();\nexports.isWin = [\"win32\", \"cygwin\"].includes(_platform);\nexports.isMac = _platform === \"darwin\";\nexports.isLinux = _platform === \"linux\";\n//# sourceMappingURL=Platform.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyOptions = exports.BatchClusterOptions = exports.minuteMs = exports.secondMs = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst Platform_1 = require(\"./Platform\");\nconst String_1 = require(\"./String\");\nexports.secondMs = 1000;\nexports.minuteMs = 60 * exports.secondMs;\n/**\n * These parameter values have somewhat sensible defaults, but can be\n * overridden for a given BatchCluster.\n */\nclass BatchClusterOptions {\n    constructor() {\n        /**\n         * No more than `maxProcs` child processes will be run at a given time\n         * to serve pending tasks.\n         *\n         * Defaults to 1.\n         */\n        this.maxProcs = 1;\n        /**\n         * Child processes will be recycled when they reach this age.\n         *\n         * This value must not be less than `spawnTimeoutMillis` or\n         * `taskTimeoutMillis`.\n         *\n         * Defaults to 5 minutes. Set to 0 to disable.\n         */\n        this.maxProcAgeMillis = 5 * exports.minuteMs;\n        /**\n         * This is the minimum interval between calls to BatchCluster's #onIdle\n         * method, which runs general janitorial processes like child process\n         * management and task queue validation.\n         *\n         * Must be &gt; 0. Defaults to 10 seconds.\n         */\n        this.onIdleIntervalMillis = 10 * exports.secondMs;\n        /**\n         * If the initial `versionCommand` fails for new spawned processes more\n         * than this rate, end this BatchCluster and throw an error, because\n         * something is terribly wrong.\n         *\n         * If this backstop didn't exist, new (failing) child processes would be\n         * created indefinitely.\n         *\n         * Defaults to 10. Set to 0 to disable.\n         */\n        this.maxReasonableProcessFailuresPerMinute = 10;\n        /**\n         * Spawning new child processes and servicing a \"version\" task must not take\n         * longer than `spawnTimeoutMillis` before the process is considered failed,\n         * and need to be restarted. Be pessimistic here--windows can regularly take\n         * several seconds to spin up a process, thanks to antivirus shenanigans.\n         *\n         * Defaults to 15 seconds. Set to 0 to disable.\n         */\n        this.spawnTimeoutMillis = 15 * exports.secondMs;\n        /**\n         * If maxProcs &gt; 1, spawning new child processes to process tasks can slow\n         * down initial processing, and create unnecessary processes.\n         *\n         * Must be &gt;= 0ms. Defaults to 1.5 seconds.\n         */\n        this.minDelayBetweenSpawnMillis = 1.5 * exports.secondMs;\n        /**\n         * If commands take longer than this, presume the underlying process is dead\n         * and we should fail the task.\n         *\n         * This should be set to something on the order of seconds.\n         *\n         * Defaults to 10 seconds. Set to 0 to disable.\n         */\n        this.taskTimeoutMillis = 10 * exports.secondMs;\n        /**\n         * Processes will be recycled after processing `maxTasksPerProcess` tasks.\n         * Depending on the commands and platform, batch mode commands shouldn't\n         * exhibit unduly memory leaks for at least tens if not hundreds of tasks.\n         * Setting this to a low number (like less than 10) will impact performance\n         * markedly, due to OS process start/stop maintenance. Setting this to a very\n         * high number (> 1000) may result in more memory being consumed than\n         * necessary.\n         *\n         * Must be &gt;= 0. Defaults to 500\n         */\n        this.maxTasksPerProcess = 500;\n        /**\n         * When `this.end()` is called, or Node broadcasts the `beforeExit` event,\n         * this is the milliseconds spent waiting for currently running tasks to\n         * finish before sending kill signals to child processes.\n         *\n         * Setting this value to 0 means child processes will immediately receive a\n         * kill signal to shut down. Any pending requests may be interrupted. Must be\n         * &gt;= 0. Defaults to 500ms.\n         */\n        this.endGracefulWaitTimeMillis = 500;\n        /**\n         * When a task sees a \"pass\" or \"fail\" from either stdout or stderr, it needs\n         * to wait for the other stream to finish flushing to ensure the task's Parser\n         * sees the entire relevant stream contents. A larger number may be required\n         * for slower computers to prevent internal errors due to lack of stream\n         * coercion.\n         *\n         * Note that this puts a hard lower limit on task latency, so don't set this\n         * to a large number: no task will resolve faster than this value (in millis).\n         *\n         * If you set this value too low, tasks may be erroneously resolved or\n         * rejected (depending on which stream is handled first).\n         *\n         * Your system may support a smaller value: this is a pessimistic default. If\n         * this is set too low, you'll see `noTaskData` events.\n         *\n         * Setting this to 0 makes whatever flushes first--stdout and stderr--and will\n         * most likely result in internal errors (due to stream buffers not being able\n         * to be associated to tasks that were just settled)\n         */\n        // These values were found by trial and error using GitHub CI boxes, which\n        // should be the bottom of the barrel, performance-wise, of any computer.\n        this.streamFlushMillis = Platform_1.isMac ? 100 : Platform_1.isWin ? 200 : 30;\n        /**\n         * Should batch-cluster try to clean up after spawned processes that don't\n         * shut down?\n         *\n         * Only disable this if you have another means of PID cleanup.\n         *\n         * Defaults to `true`.\n         */\n        this.cleanupChildProcs = true;\n        /**\n         * If a child process is idle for more than this value (in milliseconds), shut\n         * it down to reduce system resource consumption.\n         *\n         * A value of ~10 seconds to a couple minutes would be reasonable. Set this to\n         * 0 to disable this feature.\n         */\n        this.maxIdleMsPerProcess = 0;\n        /**\n         * How many failed tasks should a process be allowed to process before it is\n         * recycled?\n         *\n         * Set this to 0 to disable this feature.\n         */\n        this.maxFailedTasksPerProcess = 2;\n        /**\n         * If `healthCheckCommand` is set, how frequently should we check for\n         * unhealthy child processes?\n         *\n         * Set this to 0 to disable this feature.\n         */\n        this.healthCheckIntervalMillis = 0;\n        /**\n         * Verify child processes are still running by checking the OS process table.\n         *\n         * Set this to 0 to disable this feature.\n         */\n        this.pidCheckIntervalMillis = 2 * exports.minuteMs;\n        /**\n         * A BatchCluster instance and associated BatchProcess instances will share\n         * this `Logger`. Defaults to the `Logger` instance provided to `setLogger()`.\n         */\n        this.logger = Logger_1.logger;\n    }\n}\nexports.BatchClusterOptions = BatchClusterOptions;\nfunction escapeRegExp(s) {\n    return (0, String_1.toS)(s).replace(/[-.,\\\\^$*+?()|[\\]{}]/g, \"\\\\$&\");\n}\nfunction toRe(s) {\n    return s instanceof RegExp\n        ? s\n        : new RegExp(\"(?:\\\\n|^)\" + escapeRegExp(s) + \"(?:\\\\r?\\\\n|$)\");\n}\nfunction verifyOptions(opts) {\n    const result = {\n        ...new BatchClusterOptions(),\n        ...opts,\n        passRE: toRe(opts.pass),\n        failRE: toRe(opts.fail),\n    };\n    const errors = [];\n    function notBlank(fieldName) {\n        const v = (0, String_1.toS)(result[fieldName]);\n        if ((0, String_1.blank)(v)) {\n            errors.push(fieldName + \" must not be blank\");\n        }\n    }\n    function gte(fieldName, value, why) {\n        const v = result[fieldName];\n        if (v < value) {\n            const msg = `${fieldName} must be greater than or equal to ${value}${(0, String_1.blank)(why) ? \"\" : \": \" + why}`;\n            errors.push(msg);\n        }\n    }\n    notBlank(\"versionCommand\");\n    notBlank(\"pass\");\n    notBlank(\"fail\");\n    gte(\"maxTasksPerProcess\", 1);\n    gte(\"maxProcs\", 1);\n    if (opts.maxProcAgeMillis != null &&\n        opts.maxProcAgeMillis > 0 &&\n        result.taskTimeoutMillis) {\n        gte(\"maxProcAgeMillis\", Math.max(result.spawnTimeoutMillis, result.taskTimeoutMillis), `the max value of spawnTimeoutMillis (${result.spawnTimeoutMillis}) and taskTimeoutMillis (${result.taskTimeoutMillis})`);\n    }\n    // 0 disables:\n    gte(\"minDelayBetweenSpawnMillis\", 0);\n    gte(\"onIdleIntervalMillis\", 0);\n    gte(\"endGracefulWaitTimeMillis\", 0);\n    gte(\"maxReasonableProcessFailuresPerMinute\", 0);\n    gte(\"streamFlushMillis\", 0);\n    if (errors.length > 0) {\n        throw new Error(\"BatchCluster was given invalid options: \" + errors.join(\"; \"));\n    }\n    return result;\n}\nexports.verifyOptions = verifyOptions;\n//# sourceMappingURL=BatchClusterOptions.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ratelimit = exports.until = exports.delay = void 0;\nconst node_timers_1 = __importDefault(require(\"node:timers\"));\nfunction delay(millis, unref = false) {\n    return new Promise((resolve) => {\n        const t = node_timers_1.default.setTimeout(() => resolve(), millis);\n        if (unref)\n            t.unref();\n    });\n}\nexports.delay = delay;\n/**\n * Run the given thunk until the promise is resolved to true, or the timeout\n * passes.\n */\nasync function until(f, timeoutMs, delayMs = 50) {\n    const timeoutAt = Date.now() + timeoutMs;\n    let count = 0;\n    while (Date.now() < timeoutAt) {\n        if (await f(count)) {\n            return true;\n        }\n        else {\n            count++;\n            await delay(delayMs);\n        }\n    }\n    return false;\n}\nexports.until = until;\n/**\n * @return a thunk that will call the underlying thunk at most every `minDelayMs`\n * milliseconds. The thunk will accept a boolean, that, when set, will force the\n * underlying thunk to be called (mostly useful for tests)\n */\nfunction ratelimit(f, minDelayMs) {\n    let next = 0;\n    return (force) => {\n        if (Date.now() > next || force === true) {\n            next = Date.now() + minDelayMs;\n            return f();\n        }\n        else {\n            return;\n        }\n    };\n}\nexports.ratelimit = ratelimit;\n//# sourceMappingURL=Async.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Deferred_resolve, _Deferred_reject, _Deferred_state, _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n */\nvar State;\n(function (State) {\n    State[State[\"pending\"] = 0] = \"pending\";\n    State[State[\"fulfilled\"] = 1] = \"fulfilled\";\n    State[State[\"rejected\"] = 2] = \"rejected\";\n})(State || (State = {}));\n/**\n * Enables a Promise to be resolved or rejected at a future time, outside of\n * the context of the Promise construction. Also exposes the `pending`,\n * `fulfilled`, or `rejected` state of the promise.\n */\nclass Deferred {\n    constructor() {\n        this[_a] = \"Deferred\";\n        _Deferred_resolve.set(this, void 0);\n        _Deferred_reject.set(this, void 0);\n        _Deferred_state.set(this, State.pending);\n        this.promise = new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _Deferred_resolve, resolve, \"f\");\n            __classPrivateFieldSet(this, _Deferred_reject, reject, \"f\");\n        });\n    }\n    /**\n     * @return `true` iff neither `resolve` nor `rejected` have been invoked\n     */\n    get pending() {\n        return __classPrivateFieldGet(this, _Deferred_state, \"f\") === State.pending;\n    }\n    /**\n     * @return `true` iff `resolve` has been invoked\n     */\n    get fulfilled() {\n        return __classPrivateFieldGet(this, _Deferred_state, \"f\") === State.fulfilled;\n    }\n    /**\n     * @return `true` iff `rejected` has been invoked\n     */\n    get rejected() {\n        return __classPrivateFieldGet(this, _Deferred_state, \"f\") === State.rejected;\n    }\n    /**\n     * @return `true` iff `resolve` or `rejected` have been invoked\n     */\n    get settled() {\n        return __classPrivateFieldGet(this, _Deferred_state, \"f\") !== State.pending;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    resolve(value) {\n        if (this.settled) {\n            return false;\n        }\n        else {\n            __classPrivateFieldSet(this, _Deferred_state, State.fulfilled, \"f\");\n            __classPrivateFieldGet(this, _Deferred_resolve, \"f\").call(this, value);\n            return true;\n        }\n    }\n    reject(reason) {\n        const wasSettled = this.settled;\n        // This isn't great: the wrapped Promise may be in a different state than\n        // #state: but the caller wanted to reject, so even if it already was\n        // resolved, let's try to respect that.\n        __classPrivateFieldSet(this, _Deferred_state, State.rejected, \"f\");\n        if (wasSettled) {\n            return false;\n        }\n        else {\n            __classPrivateFieldGet(this, _Deferred_reject, \"f\").call(this, reason);\n            return true;\n        }\n    }\n    observe(p) {\n        void observe(this, p);\n        return this;\n    }\n    observeQuietly(p) {\n        void observeQuietly(this, p);\n        return this;\n    }\n}\nexports.Deferred = Deferred;\n_Deferred_resolve = new WeakMap(), _Deferred_reject = new WeakMap(), _Deferred_state = new WeakMap(), _a = Symbol.toStringTag;\nasync function observe(d, p) {\n    try {\n        d.resolve(await p);\n    }\n    catch (err) {\n        d.reject(err);\n    }\n}\nasync function observeQuietly(d, p) {\n    try {\n        d.resolve(await p);\n    }\n    catch {\n        d.resolve(undefined);\n    }\n}\n//# sourceMappingURL=Deferred.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asError = exports.cleanError = exports.tryEach = void 0;\nconst String_1 = require(\"./String\");\n/**\n * When we wrap errors, an Error always prefixes the toString() and stack with\n * \"Error: \", so we can remove that prefix.\n */\nfunction tryEach(arr) {\n    for (const f of arr) {\n        try {\n            f();\n        }\n        catch (_) {\n            //\n        }\n    }\n}\nexports.tryEach = tryEach;\nfunction cleanError(s) {\n    return String(s)\n        .trim()\n        .replace(/^error: /i, \"\");\n}\nexports.cleanError = cleanError;\nfunction asError(err) {\n    return err instanceof Error\n        ? err\n        : new Error((0, String_1.blank)(err) ? \"(unknown)\" : (0, String_1.toS)(err));\n}\nexports.asError = asError;\n//# sourceMappingURL=Error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleParser = void 0;\nconst String_1 = require(\"./String\");\nconst SimpleParser = (stdout, stderr, passed) => {\n    if (!passed)\n        throw new Error(\"task failed\");\n    if ((0, String_1.notBlank)(stderr))\n        throw new Error(stderr);\n    return stdout;\n};\nexports.SimpleParser = SimpleParser;\n//# sourceMappingURL=Parser.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pids = exports.kill = exports.pidExists = void 0;\nconst node_child_process_1 = __importDefault(require(\"node:child_process\"));\nconst node_process_1 = __importDefault(require(\"node:process\"));\nconst Object_1 = require(\"./Object\");\nconst Platform_1 = require(\"./Platform\");\n/**\n * @param {number} pid process id. Required.\n * @returns boolean true if the given process id is in the local process\n * table. The PID may be paused or a zombie, though.\n */\nfunction pidExists(pid) {\n    if (pid == null || !isFinite(pid) || pid <= 0)\n        return false;\n    try {\n        // signal 0 can be used to test for the existence of a process\n        // see https://nodejs.org/dist/latest-v18.x/docs/api/process.html#processkillpid-signal\n        return node_process_1.default.kill(pid, 0);\n    }\n    catch (err) {\n        // We're expecting err.code to be either \"EPERM\" (if we don't have\n        // permission to send `pid` and message), or \"ESRCH\" if that pid doesn't\n        // exist. EPERM means it _does_ exist!\n        if ((err === null || err === void 0 ? void 0 : err.code) === \"EPERM\")\n            return true;\n        // failed to get priority--assume the pid is gone.\n        return false;\n    }\n}\nexports.pidExists = pidExists;\n/**\n * Send a signal to the given process id.\n *\n * @export\n * @param pid the process id. Required.\n * @param force if true, and the current user has\n * permissions to send the signal, the pid will be forced to shut down. Defaults to false.\n */\nfunction kill(pid, force = false) {\n    if (pid == null || !isFinite(pid) || pid <= 0)\n        return false;\n    try {\n        return node_process_1.default.kill(pid, force ? \"SIGKILL\" : undefined);\n    }\n    catch (err) {\n        if (!String(err).includes(\"ESRCH\"))\n            throw err;\n        return false;\n        // failed to get priority--assume the pid is gone.\n    }\n}\nexports.kill = kill;\nconst winRe = /^\".+?\",\"(\\d+)\"/;\nconst posixRe = /^\\s*(\\d+)/;\n/**\n * Only used by tests\n *\n * @returns {Promise<number[]>} all the Process IDs in the process table.\n */\nfunction pids() {\n    return new Promise((resolve, reject) => {\n        node_child_process_1.default.execFile(Platform_1.isWin ? \"tasklist\" : \"ps\", \n        // NoHeader, FOrmat CSV\n        Platform_1.isWin ? [\"/NH\", \"/FO\", \"CSV\"] : [\"-e\"], (error, stdout, stderr) => {\n            if (error != null) {\n                reject(error);\n            }\n            else if ((\"\" + stderr).trim().length > 0) {\n                reject(new Error(stderr));\n            }\n            else\n                resolve((\"\" + stdout)\n                    .trim()\n                    .split(/[\\n\\r]+/)\n                    .map((ea) => ea.match(Platform_1.isWin ? winRe : posixRe))\n                    .map((m) => (0, Object_1.map)(m === null || m === void 0 ? void 0 : m[0], parseInt))\n                    .filter((ea) => ea != null));\n        });\n    });\n}\nexports.pids = pids;\n//# sourceMappingURL=Pids.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.destroy = void 0;\nfunction destroy(stream) {\n    var _a;\n    try {\n        // .end() may result in an EPIPE when the child process exits. We don't\n        // care. We just want to make sure the stream is closed.\n        stream === null || stream === void 0 ? void 0 : stream.removeAllListeners(\"error\");\n        // It's fine to call .destroy() on a stream that's already destroyed.\n        (_a = stream === null || stream === void 0 ? void 0 : stream.destroy) === null || _a === void 0 ? void 0 : _a.call(stream);\n    }\n    catch {\n        // don't care\n    }\n}\nexports.destroy = destroy;\n//# sourceMappingURL=Stream.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Task_instances, _Task_opts, _Task_startedAt, _Task_parsing, _Task_settledAt, _Task_d, _Task_stdout, _Task_stderr, _Task_onSettle, _Task_resolve;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Task = void 0;\nconst Async_1 = require(\"./Async\");\nconst Deferred_1 = require(\"./Deferred\");\nlet _taskId = 1;\n/**\n * Tasks embody individual jobs given to the underlying child processes. Each\n * instance has a promise that will be resolved or rejected based on the\n * result of the task.\n */\nclass Task {\n    /**\n     * @param {string} command is the value written to stdin to perform the given\n     * task.\n     * @param {Parser<T>} parser is used to parse resulting data from the\n     * underlying process to a typed object.\n     */\n    constructor(command, parser) {\n        _Task_instances.add(this);\n        this.command = command;\n        this.parser = parser;\n        this.taskId = _taskId++;\n        _Task_opts.set(this, void 0);\n        _Task_startedAt.set(this, void 0);\n        _Task_parsing.set(this, false);\n        _Task_settledAt.set(this, void 0);\n        _Task_d.set(this, new Deferred_1.Deferred());\n        _Task_stdout.set(this, \"\");\n        _Task_stderr.set(this, \"\"\n        /**\n         * @param {string} command is the value written to stdin to perform the given\n         * task.\n         * @param {Parser<T>} parser is used to parse resulting data from the\n         * underlying process to a typed object.\n         */\n        );\n        // We can't use .finally here, because that creates a promise chain that, if\n        // rejected, results in an uncaught rejection.\n        __classPrivateFieldGet(this, _Task_d, \"f\").promise.then(() => __classPrivateFieldGet(this, _Task_instances, \"m\", _Task_onSettle).call(this), () => __classPrivateFieldGet(this, _Task_instances, \"m\", _Task_onSettle).call(this));\n    }\n    /**\n     * @return the resolution or rejection of this task.\n     */\n    get promise() {\n        return __classPrivateFieldGet(this, _Task_d, \"f\").promise;\n    }\n    get pending() {\n        return __classPrivateFieldGet(this, _Task_d, \"f\").pending;\n    }\n    get state() {\n        return __classPrivateFieldGet(this, _Task_d, \"f\").pending\n            ? \"pending\"\n            : __classPrivateFieldGet(this, _Task_d, \"f\").rejected\n                ? \"rejected\"\n                : \"resolved\";\n    }\n    onStart(opts) {\n        __classPrivateFieldSet(this, _Task_opts, opts, \"f\");\n        __classPrivateFieldSet(this, _Task_startedAt, Date.now(), \"f\");\n    }\n    get runtimeMs() {\n        var _a;\n        return __classPrivateFieldGet(this, _Task_startedAt, \"f\") == null\n            ? undefined\n            : ((_a = __classPrivateFieldGet(this, _Task_settledAt, \"f\")) !== null && _a !== void 0 ? _a : Date.now()) - __classPrivateFieldGet(this, _Task_startedAt, \"f\");\n    }\n    toString() {\n        return (this.constructor.name +\n            \"(\" +\n            this.command.replace(/\\s+/gm, \" \").slice(0, 80).trim() +\n            \")#\" +\n            this.taskId);\n    }\n    onStdout(buf) {\n        var _a, _b;\n        __classPrivateFieldSet(this, _Task_stdout, __classPrivateFieldGet(this, _Task_stdout, \"f\") + buf.toString(), \"f\");\n        const passRE = (_a = __classPrivateFieldGet(this, _Task_opts, \"f\")) === null || _a === void 0 ? void 0 : _a.passRE;\n        if (passRE != null && passRE.exec(__classPrivateFieldGet(this, _Task_stdout, \"f\")) != null) {\n            // remove the pass token from stdout:\n            __classPrivateFieldSet(this, _Task_stdout, __classPrivateFieldGet(this, _Task_stdout, \"f\").replace(passRE, \"\"), \"f\");\n            __classPrivateFieldGet(this, _Task_instances, \"m\", _Task_resolve).call(this, true);\n        }\n        else {\n            const failRE = (_b = __classPrivateFieldGet(this, _Task_opts, \"f\")) === null || _b === void 0 ? void 0 : _b.failRE;\n            if (failRE != null && failRE.exec(__classPrivateFieldGet(this, _Task_stdout, \"f\")) != null) {\n                // remove the fail token from stdout:\n                __classPrivateFieldSet(this, _Task_stdout, __classPrivateFieldGet(this, _Task_stdout, \"f\").replace(failRE, \"\"), \"f\");\n                __classPrivateFieldGet(this, _Task_instances, \"m\", _Task_resolve).call(this, false);\n            }\n        }\n    }\n    onStderr(buf) {\n        var _a;\n        __classPrivateFieldSet(this, _Task_stderr, __classPrivateFieldGet(this, _Task_stderr, \"f\") + buf.toString(), \"f\");\n        const failRE = (_a = __classPrivateFieldGet(this, _Task_opts, \"f\")) === null || _a === void 0 ? void 0 : _a.failRE;\n        if (failRE != null && failRE.exec(__classPrivateFieldGet(this, _Task_stderr, \"f\")) != null) {\n            // remove the fail token from stderr:\n            __classPrivateFieldSet(this, _Task_stderr, __classPrivateFieldGet(this, _Task_stderr, \"f\").replace(failRE, \"\"), \"f\");\n            __classPrivateFieldGet(this, _Task_instances, \"m\", _Task_resolve).call(this, false);\n        }\n    }\n    /**\n     * @return true if the wrapped promise was rejected\n     */\n    reject(error) {\n        return __classPrivateFieldGet(this, _Task_d, \"f\").reject(error);\n    }\n}\nexports.Task = Task;\n_Task_opts = new WeakMap(), _Task_startedAt = new WeakMap(), _Task_parsing = new WeakMap(), _Task_settledAt = new WeakMap(), _Task_d = new WeakMap(), _Task_stdout = new WeakMap(), _Task_stderr = new WeakMap(), _Task_instances = new WeakSet(), _Task_onSettle = function _Task_onSettle() {\n    var _a;\n    __classPrivateFieldSet(this, _Task_settledAt, (_a = __classPrivateFieldGet(this, _Task_settledAt, \"f\")) !== null && _a !== void 0 ? _a : Date.now(), \"f\");\n}, _Task_resolve = async function _Task_resolve(passed) {\n    var _a, _b, _c;\n    // fail always wins.\n    passed = !__classPrivateFieldGet(this, _Task_d, \"f\").rejected && passed;\n    // wait for stderr and stdout to flush:\n    const flushMs = (_b = (_a = __classPrivateFieldGet(this, _Task_opts, \"f\")) === null || _a === void 0 ? void 0 : _a.streamFlushMillis) !== null && _b !== void 0 ? _b : 0;\n    if (flushMs > 0) {\n        await (0, Async_1.delay)(flushMs);\n    }\n    // we're expecting this method may be called concurrently (if there are both\n    // pass and fail tokens found in stderr and stdout), but we only want to run\n    // this once, so\n    if (!this.pending || __classPrivateFieldGet(this, _Task_parsing, \"f\"))\n        return;\n    // this.#opts\n    // ?.logger()\n    // .trace(\"Task.#resolve()\", { command: this.command, state: this.state })\n    // Prevent concurrent parsing:\n    __classPrivateFieldSet(this, _Task_parsing, true, \"f\");\n    try {\n        const parseResult = await this.parser(__classPrivateFieldGet(this, _Task_stdout, \"f\"), __classPrivateFieldGet(this, _Task_stderr, \"f\"), passed);\n        if (__classPrivateFieldGet(this, _Task_d, \"f\").resolve(parseResult)) {\n        }\n        else {\n            (_c = __classPrivateFieldGet(this, _Task_opts, \"f\")) === null || _c === void 0 ? void 0 : _c.observer.emit(\"internalError\", new Error(this.toString() + \" ._resolved() more than once\"));\n        }\n    }\n    catch (error) {\n        this.reject(error);\n    }\n};\n//# sourceMappingURL=Task.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thenOrTimeout = exports.Timeout = void 0;\nconst node_timers_1 = __importDefault(require(\"node:timers\"));\nexports.Timeout = Symbol(\"timeout\");\nasync function thenOrTimeout(p, timeoutMs) {\n    // TODO: if timeoutMs is [1, 1000], it's probably a mistake. Should we do\n    // something else in that case?\n    return timeoutMs <= 1\n        ? p\n        : new Promise(async (resolve, reject) => {\n            let pending = true;\n            try {\n                const t = node_timers_1.default.setTimeout(() => {\n                    if (pending) {\n                        pending = false;\n                        resolve(exports.Timeout);\n                    }\n                }, timeoutMs);\n                const result = await p;\n                if (pending) {\n                    pending = false;\n                    clearTimeout(t);\n                    resolve(result);\n                }\n            }\n            catch (err) {\n                if (pending) {\n                    pending = false;\n                    reject(err);\n                }\n            }\n        });\n}\nexports.thenOrTimeout = thenOrTimeout;\n//# sourceMappingURL=Timeout.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BatchProcess_instances, _BatchProcess_lastHealthCheck, _BatchProcess_healthCheckFailures, _BatchProcess_logger, _BatchProcess_lastJobFinshedAt, _BatchProcess_lastJobFailed, _BatchProcess_starting, _BatchProcess_exited, _BatchProcess_whyNotHealthy, _BatchProcess_taskCount, _BatchProcess_currentTask, _BatchProcess_currentTaskTimeout, _BatchProcess_endPromise, _BatchProcess_execTask, _BatchProcess_end, _BatchProcess_awaitNotRunning, _BatchProcess_onTimeout, _BatchProcess_onError, _BatchProcess_onStderr, _BatchProcess_onStdout, _BatchProcess_clearCurrentTask;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchProcess = void 0;\nconst node_timers_1 = __importDefault(require(\"node:timers\"));\nconst Async_1 = require(\"./Async\");\nconst Deferred_1 = require(\"./Deferred\");\nconst Error_1 = require(\"./Error\");\nconst Object_1 = require(\"./Object\");\nconst Parser_1 = require(\"./Parser\");\nconst Pids_1 = require(\"./Pids\");\nconst Stream_1 = require(\"./Stream\");\nconst String_1 = require(\"./String\");\nconst Task_1 = require(\"./Task\");\nconst Timeout_1 = require(\"./Timeout\");\n/**\n * BatchProcess manages the care and feeding of a single child process.\n */\nclass BatchProcess {\n    /**\n     * @param onIdle to be called when internal state changes (like the current\n     * task is resolved, or the process exits)\n     */\n    constructor(proc, opts, onIdle) {\n        _BatchProcess_instances.add(this);\n        this.proc = proc;\n        this.opts = opts;\n        this.onIdle = onIdle;\n        this.start = Date.now();\n        _BatchProcess_lastHealthCheck.set(this, Date.now());\n        _BatchProcess_healthCheckFailures.set(this, 0);\n        _BatchProcess_logger.set(this, void 0);\n        _BatchProcess_lastJobFinshedAt.set(this, Date.now());\n        _BatchProcess_lastJobFailed.set(this, false\n        // Only set to true when `proc.pid` is no longer in the process table.\n        );\n        // Only set to true when `proc.pid` is no longer in the process table.\n        _BatchProcess_starting.set(this, true);\n        _BatchProcess_exited.set(this, false\n        // override for .whyNotHealthy()\n        );\n        // override for .whyNotHealthy()\n        _BatchProcess_whyNotHealthy.set(this, void 0);\n        this.failedTaskCount = 0;\n        _BatchProcess_taskCount.set(this, -1\n        /**\n         * Should be undefined if this instance is not currently processing a task.\n         */\n        ); // don't count the startupTask\n        /**\n         * Should be undefined if this instance is not currently processing a task.\n         */\n        _BatchProcess_currentTask.set(this, void 0);\n        _BatchProcess_currentTaskTimeout.set(this, void 0);\n        _BatchProcess_endPromise.set(this, void 0);\n        this.name = \"BatchProcess(\" + proc.pid + \")\";\n        __classPrivateFieldSet(this, _BatchProcess_logger, opts.logger, \"f\");\n        // don't let node count the child processes as a reason to stay alive\n        this.proc.unref();\n        if (proc.pid == null) {\n            throw new Error(\"BatchProcess.constructor: child process pid is null\");\n        }\n        this.pid = proc.pid;\n        this.proc.on(\"error\", (err) => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onError).call(this, \"proc.error\", err));\n        this.proc.on(\"close\", () => this.end(false, \"proc.close\"));\n        this.proc.on(\"exit\", () => this.end(false, \"proc.exit\"));\n        this.proc.on(\"disconnect\", () => this.end(false, \"proc.disconnect\"));\n        const stdin = this.proc.stdin;\n        if (stdin == null)\n            throw new Error(\"Given proc had no stdin\");\n        stdin.on(\"error\", (err) => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onError).call(this, \"stdin.error\", err));\n        const stdout = this.proc.stdout;\n        if (stdout == null)\n            throw new Error(\"Given proc had no stdout\");\n        stdout.on(\"error\", (err) => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onError).call(this, \"stdout.error\", err));\n        stdout.on(\"data\", (d) => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onStdout).call(this, d));\n        (0, Object_1.map)(this.proc.stderr, (stderr) => {\n            stderr.on(\"error\", (err) => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onError).call(this, \"stderr.error\", err));\n            stderr.on(\"data\", (err) => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onStderr).call(this, err));\n        });\n        const startupTask = new Task_1.Task(opts.versionCommand, Parser_1.SimpleParser);\n        this.startupTaskId = startupTask.taskId;\n        if (!this.execTask(startupTask)) {\n            this.opts.observer.emit(\"internalError\", new Error(this.name + \" startup task was not submitted\"));\n        }\n        // this needs to be at the end of the constructor, to ensure everything is\n        // set up on `this`\n        this.opts.observer.emit(\"childStart\", this);\n    }\n    get currentTask() {\n        return __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\");\n    }\n    get taskCount() {\n        return __classPrivateFieldGet(this, _BatchProcess_taskCount, \"f\");\n    }\n    get starting() {\n        return __classPrivateFieldGet(this, _BatchProcess_starting, \"f\");\n    }\n    /**\n     * @return true if `this.end()` has been requested (which may be due to the\n     * child process exiting)\n     */\n    get ending() {\n        return __classPrivateFieldGet(this, _BatchProcess_endPromise, \"f\") != null;\n    }\n    /**\n     * @return true if `this.end()` has completed running, which includes child\n     * process cleanup. Note that this may return `true` and the process table may\n     * still include the child pid. Call {@link BatchProcess#running()} for an authoritative\n     * (but expensive!) answer.\n     */\n    get ended() {\n        var _a;\n        return true === ((_a = __classPrivateFieldGet(this, _BatchProcess_endPromise, \"f\")) === null || _a === void 0 ? void 0 : _a.settled);\n    }\n    /**\n     * @return true if the child process has exited and is no longer in the\n     * process table. Note that this may be erroneously false if the process table\n     * hasn't been checked. Call {@link BatchProcess#running()} for an authoritative (but\n     * expensive!) answer.\n     */\n    get exited() {\n        return __classPrivateFieldGet(this, _BatchProcess_exited, \"f\");\n    }\n    /**\n     * @return a string describing why this process should be recycled, or null if\n     * the process passes all health checks. Note that this doesn't include if\n     * we're already busy: see {@link BatchProcess.whyNotReady} if you need to\n     * know if a process can handle a new task.\n     */\n    get whyNotHealthy() {\n        var _a, _b;\n        if (__classPrivateFieldGet(this, _BatchProcess_whyNotHealthy, \"f\") != null)\n            return __classPrivateFieldGet(this, _BatchProcess_whyNotHealthy, \"f\");\n        if (this.ended) {\n            return \"ended\";\n        }\n        else if (this.ending) {\n            return \"ending\";\n        }\n        else if (__classPrivateFieldGet(this, _BatchProcess_healthCheckFailures, \"f\") > 0) {\n            return \"unhealthy\";\n        }\n        else if (this.proc.stdin == null || this.proc.stdin.destroyed) {\n            return \"closed\";\n        }\n        else if (this.opts.maxTasksPerProcess > 0 &&\n            this.taskCount >= this.opts.maxTasksPerProcess) {\n            return \"worn\";\n        }\n        else if (this.opts.maxIdleMsPerProcess > 0 &&\n            this.idleMs > this.opts.maxIdleMsPerProcess) {\n            return \"idle\";\n        }\n        else if (this.opts.maxFailedTasksPerProcess > 0 &&\n            this.failedTaskCount >= this.opts.maxFailedTasksPerProcess) {\n            return \"broken\";\n        }\n        else if (this.opts.maxProcAgeMillis > 0 &&\n            this.start + this.opts.maxProcAgeMillis < Date.now()) {\n            return \"old\";\n        }\n        else if ((_b = (this.opts.taskTimeoutMillis > 0 && ((_a = __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\")) === null || _a === void 0 ? void 0 : _a.runtimeMs))) !== null && _b !== void 0 ? _b : 0 > this.opts.taskTimeoutMillis) {\n            return \"timeout\";\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * @return true if the process doesn't need to be recycled.\n     */\n    get healthy() {\n        return this.whyNotHealthy == null;\n    }\n    /**\n     * @return true iff no current task. Does not take into consideration if the\n     * process has ended or should be recycled: see {@link BatchProcess.ready}.\n     */\n    get idle() {\n        return __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\") == null;\n    }\n    /**\n     * @return a string describing why this process cannot currently handle a new\n     * task, or `undefined` if this process is idle and healthy.\n     */\n    get whyNotReady() {\n        return !this.idle ? \"busy\" : this.whyNotHealthy;\n    }\n    /**\n     * @return true iff this process is  both healthy and idle, and ready for a\n     * new task.\n     */\n    get ready() {\n        return this.whyNotReady == null;\n    }\n    get idleMs() {\n        return this.idle ? Date.now() - __classPrivateFieldGet(this, _BatchProcess_lastJobFinshedAt, \"f\") : -1;\n    }\n    /**\n     * @return true if the child process is in the process table\n     */\n    running() {\n        if (__classPrivateFieldGet(this, _BatchProcess_exited, \"f\"))\n            return false;\n        const alive = (0, Pids_1.pidExists)(this.pid);\n        if (!alive) {\n            __classPrivateFieldSet(this, _BatchProcess_exited, true, \"f\");\n            // once a PID leaves the process table, it's gone for good.\n            this.end(false, \"proc.exit\");\n        }\n        return alive;\n    }\n    notRunning() {\n        return !this.running();\n    }\n    maybeRunHealthcheck() {\n        const hcc = this.opts.healthCheckCommand;\n        // if there's no health check command, no-op.\n        if (hcc == null || (0, String_1.blank)(hcc))\n            return;\n        // if the prior health check failed, .ready will be false\n        if (!this.ready)\n            return;\n        if (__classPrivateFieldGet(this, _BatchProcess_lastJobFailed, \"f\") ||\n            (this.opts.healthCheckIntervalMillis > 0 &&\n                Date.now() - __classPrivateFieldGet(this, _BatchProcess_lastHealthCheck, \"f\") >\n                    this.opts.healthCheckIntervalMillis)) {\n            __classPrivateFieldSet(this, _BatchProcess_lastHealthCheck, Date.now(), \"f\");\n            const t = new Task_1.Task(hcc, Parser_1.SimpleParser);\n            t.promise\n                .catch((err) => {\n                var _a;\n                this.opts.observer.emit(\"healthCheckError\", err, this);\n                __classPrivateFieldSet(this, _BatchProcess_healthCheckFailures, (_a = __classPrivateFieldGet(this, _BatchProcess_healthCheckFailures, \"f\"), _a++, _a), \"f\");\n                // BatchCluster will see we're unhealthy and reap us later\n            })\n                .finally(() => {\n                __classPrivateFieldSet(this, _BatchProcess_lastHealthCheck, Date.now(), \"f\");\n            });\n            __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_execTask).call(this, t);\n            return t;\n        }\n        return;\n    }\n    // This must not be async, or new instances aren't started as busy (until the\n    // startup task is complete)\n    execTask(task) {\n        return this.ready ? __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_execTask).call(this, task) : false;\n    }\n    /**\n     * End this child process.\n     *\n     * @param gracefully Wait for any current task to be resolved or rejected\n     * before shutting down the child process.\n     * @param reason who called end() (used for logging)\n     * @return Promise that will be resolved when the process has completed.\n     * Subsequent calls to end() will ignore the parameters and return the first\n     * endPromise.\n     */\n    // NOT ASYNC! needs to change state immediately.\n    end(gracefully = true, reason) {\n        var _a, _b;\n        return (__classPrivateFieldSet(this, _BatchProcess_endPromise, (_a = __classPrivateFieldGet(this, _BatchProcess_endPromise, \"f\")) !== null && _a !== void 0 ? _a : new Deferred_1.Deferred().observe(__classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_end).call(this, gracefully, (__classPrivateFieldSet(this, _BatchProcess_whyNotHealthy, (_b = __classPrivateFieldGet(this, _BatchProcess_whyNotHealthy, \"f\")) !== null && _b !== void 0 ? _b : reason, \"f\")))), \"f\")).promise;\n    }\n}\nexports.BatchProcess = BatchProcess;\n_BatchProcess_lastHealthCheck = new WeakMap(), _BatchProcess_healthCheckFailures = new WeakMap(), _BatchProcess_logger = new WeakMap(), _BatchProcess_lastJobFinshedAt = new WeakMap(), _BatchProcess_lastJobFailed = new WeakMap(), _BatchProcess_starting = new WeakMap(), _BatchProcess_exited = new WeakMap(), _BatchProcess_whyNotHealthy = new WeakMap(), _BatchProcess_taskCount = new WeakMap(), _BatchProcess_currentTask = new WeakMap(), _BatchProcess_currentTaskTimeout = new WeakMap(), _BatchProcess_endPromise = new WeakMap(), _BatchProcess_instances = new WeakSet(), _BatchProcess_execTask = function _BatchProcess_execTask(task) {\n    var _a;\n    var _b;\n    if (this.ending)\n        return false;\n    __classPrivateFieldSet(this, _BatchProcess_taskCount, (_b = __classPrivateFieldGet(this, _BatchProcess_taskCount, \"f\"), _b++, _b), \"f\");\n    __classPrivateFieldSet(this, _BatchProcess_currentTask, task, \"f\");\n    const cmd = (0, String_1.ensureSuffix)(task.command, \"\\n\");\n    const isStartupTask = task.taskId === this.startupTaskId;\n    const taskTimeoutMs = isStartupTask\n        ? this.opts.spawnTimeoutMillis\n        : this.opts.taskTimeoutMillis;\n    if (taskTimeoutMs > 0) {\n        // add the stream flush millis to the taskTimeoutMs, because that time\n        // should not be counted against the task.\n        __classPrivateFieldSet(this, _BatchProcess_currentTaskTimeout, node_timers_1.default.setTimeout(() => __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onTimeout).call(this, task, taskTimeoutMs), taskTimeoutMs + this.opts.streamFlushMillis), \"f\");\n    }\n    // CAREFUL! If you add a .catch or .finally, the pipeline can emit unhandled\n    // rejections:\n    void task.promise.then(() => {\n        __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_clearCurrentTask).call(this, task);\n        // this.#logger().trace(\"task completed\", { task })\n        if (isStartupTask) {\n            // no need to emit taskResolved for startup tasks.\n            __classPrivateFieldSet(this, _BatchProcess_starting, false, \"f\");\n        }\n        else {\n            this.opts.observer.emit(\"taskResolved\", task, this);\n        }\n        // Call _after_ we've cleared the current task:\n        this.onIdle();\n    }, (error) => {\n        __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_clearCurrentTask).call(this, task);\n        // this.#logger().trace(\"task failed\", { task, err: error })\n        if (isStartupTask) {\n            this.opts.observer.emit(\"startError\", error);\n            this.end(false, \"startError\");\n        }\n        else {\n            this.opts.observer.emit(\"taskError\", error, task, this);\n        }\n        // Call _after_ we've cleared the current task:\n        this.onIdle();\n    });\n    try {\n        task.onStart(this.opts);\n        const stdin = (_a = this.proc) === null || _a === void 0 ? void 0 : _a.stdin;\n        if (stdin == null || stdin.destroyed) {\n            task.reject(new Error(\"proc.stdin unexpectedly closed\"));\n            return false;\n        }\n        else {\n            stdin.write(cmd, (err) => {\n                if (err != null) {\n                    task.reject(err);\n                }\n            });\n            return true;\n        }\n    }\n    catch (err) {\n        // child process went away. We should too.\n        this.end(false, \"stdin.error\");\n        return false;\n    }\n}, _BatchProcess_end = \n// NOTE: Must only be invoked by this.end(), and only expected to be invoked\n// once per instance.\nasync function _BatchProcess_end(gracefully, reason) {\n    var _a, _b, _c, _d;\n    const lastTask = __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\");\n    __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_clearCurrentTask).call(this);\n    // NOTE: We wait on all tasks (even startup tasks) so we can assert that\n    // BatchCluster is idle (and this proc is idle) when the end promise is\n    // resolved.\n    // NOTE: holy crap there are a lot of notes here.\n    // We don't need to wait for the startup task to complete, and we certainly\n    // don't need to fuss about ending when we're just getting started.\n    if (lastTask != null && lastTask.taskId !== this.startupTaskId) {\n        try {\n            // Let's wait for the process to complete and the streams to flush, as\n            // that may actually allow the task to complete successfully. Let's not\n            // wait forever, though.\n            await (0, Timeout_1.thenOrTimeout)(lastTask.promise, gracefully ? 2000 : 250);\n        }\n        catch {\n            //\n        }\n        if (lastTask.pending) {\n            lastTask.reject(new Error(`end() called before task completed (${JSON.stringify({\n                gracefully,\n                lastTask,\n            })})`));\n        }\n    }\n    // Ignore EPIPE on .end(): if the process immediately ends after the exit\n    // command, we'll get an EPIPE, so, shush error events *before* we tell the\n    // child process to exit. See https://github.com/nodejs/node/issues/26828\n    for (const ea of [\n        this.proc,\n        this.proc.stdin,\n        this.proc.stdout,\n        this.proc.stderr,\n    ]) {\n        ea === null || ea === void 0 ? void 0 : ea.removeAllListeners(\"error\");\n    }\n    if (true === ((_a = this.proc.stdin) === null || _a === void 0 ? void 0 : _a.writable)) {\n        const exitCmd = this.opts.exitCommand == null\n            ? null\n            : (0, String_1.ensureSuffix)(this.opts.exitCommand, \"\\n\");\n        try {\n            (_b = this.proc.stdin) === null || _b === void 0 ? void 0 : _b.end(exitCmd);\n        }\n        catch {\n            // don't care\n        }\n    }\n    // None of this *should* be necessary, but we're trying to be as hygienic as\n    // we can to avoid process zombification.\n    (0, Stream_1.destroy)(this.proc.stdin);\n    (0, Stream_1.destroy)(this.proc.stdout);\n    (0, Stream_1.destroy)(this.proc.stderr);\n    if (this.opts.cleanupChildProcs &&\n        gracefully &&\n        this.opts.endGracefulWaitTimeMillis > 0 &&\n        !__classPrivateFieldGet(this, _BatchProcess_exited, \"f\")) {\n        // Wait for the exit command to take effect:\n        await __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_awaitNotRunning).call(this, this.opts.endGracefulWaitTimeMillis / 2);\n        // If it's still running, send the pid a signal:\n        if (this.running() && this.proc.pid != null)\n            this.proc.kill();\n        // Wait for the signal handler to work:\n        await __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_awaitNotRunning).call(this, this.opts.endGracefulWaitTimeMillis / 2);\n    }\n    if (this.opts.cleanupChildProcs &&\n        this.proc.pid != null &&\n        this.running()) {\n        __classPrivateFieldGet(this, _BatchProcess_logger, \"f\").call(this).warn(this.name + \".end(): force-killing still-running child.\");\n        (0, Pids_1.kill)(this.proc.pid, true);\n    }\n    // disconnect may not be a function on proc!\n    (_d = (_c = this.proc).disconnect) === null || _d === void 0 ? void 0 : _d.call(_c);\n    this.opts.observer.emit(\"childEnd\", this, reason);\n}, _BatchProcess_awaitNotRunning = function _BatchProcess_awaitNotRunning(timeout) {\n    return (0, Async_1.until)(() => this.notRunning(), timeout);\n}, _BatchProcess_onTimeout = function _BatchProcess_onTimeout(task, timeoutMs) {\n    if (task.pending) {\n        this.opts.observer.emit(\"taskTimeout\", timeoutMs, task, this);\n        __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_onError).call(this, \"timeout\", new Error(\"waited \" + timeoutMs + \"ms\"), task);\n    }\n}, _BatchProcess_onError = function _BatchProcess_onError(reason, error, task) {\n    if (task == null) {\n        task = __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\");\n    }\n    const cleanedError = new Error(reason + \": \" + (0, Error_1.cleanError)(error.message));\n    if (error.stack != null) {\n        // Error stacks, if set, will not be redefined from a rethrow:\n        cleanedError.stack = (0, Error_1.cleanError)(error.stack);\n    }\n    __classPrivateFieldGet(this, _BatchProcess_logger, \"f\").call(this).warn(this.name + \".onError()\", {\n        reason,\n        task: (0, Object_1.map)(task, (t) => t.command),\n        error: cleanedError,\n    });\n    if (this.ending) {\n        // .#end is already disconnecting the error listeners, but in any event,\n        // we don't really care about errors after we've been told to shut down.\n        return;\n    }\n    // clear the task before ending so the onExit from end() doesn't retry the task:\n    __classPrivateFieldGet(this, _BatchProcess_instances, \"m\", _BatchProcess_clearCurrentTask).call(this);\n    void this.end(false, reason);\n    if (task != null && this.taskCount === 1) {\n        __classPrivateFieldGet(this, _BatchProcess_logger, \"f\").call(this).warn(this.name + \".onError(): startup task failed: \" + cleanedError);\n        this.opts.observer.emit(\"startError\", cleanedError);\n    }\n    if (task != null) {\n        if (task.pending) {\n            task.reject(cleanedError);\n        }\n        else {\n            this.opts.observer.emit(\"internalError\", new Error(`${this.name}.onError(${cleanedError}) cannot reject already-fulfilled task.`));\n        }\n    }\n}, _BatchProcess_onStderr = function _BatchProcess_onStderr(data) {\n    if ((0, String_1.blank)(data))\n        return;\n    __classPrivateFieldGet(this, _BatchProcess_logger, \"f\").call(this).warn(this.name + \".onStderr(): \" + data);\n    const task = __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\");\n    if (task != null && task.pending) {\n        task.onStderr(data);\n    }\n    else if (!this.ending) {\n        // If we're ending and there isn't a task, don't worry about it.\n        this.opts.observer.emit(\"noTaskData\", null, data, this);\n        void this.end(false, \"stderr\");\n    }\n}, _BatchProcess_onStdout = function _BatchProcess_onStdout(data) {\n    if (data == null)\n        return;\n    const task = __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\");\n    if (task != null && task.pending) {\n        this.opts.observer.emit(\"taskData\", data, task, this);\n        task.onStdout(data);\n    }\n    else if (this.ending) {\n        // don't care if we're already being shut down.\n    }\n    else if (!(0, String_1.blank)(data)) {\n        this.opts.observer.emit(\"noTaskData\", data, null, this);\n        void this.end(false, \"stdout.error\");\n    }\n}, _BatchProcess_clearCurrentTask = function _BatchProcess_clearCurrentTask(task) {\n    var _a;\n    __classPrivateFieldSet(this, _BatchProcess_lastJobFailed, (task === null || task === void 0 ? void 0 : task.state) === \"rejected\", \"f\");\n    if (task != null && task.taskId !== ((_a = __classPrivateFieldGet(this, _BatchProcess_currentTask, \"f\")) === null || _a === void 0 ? void 0 : _a.taskId))\n        return;\n    (0, Object_1.map)(__classPrivateFieldGet(this, _BatchProcess_currentTaskTimeout, \"f\"), (ea) => clearTimeout(ea));\n    __classPrivateFieldSet(this, _BatchProcess_currentTaskTimeout, undefined, \"f\");\n    __classPrivateFieldSet(this, _BatchProcess_currentTask, undefined, \"f\");\n    __classPrivateFieldSet(this, _BatchProcess_lastJobFinshedAt, Date.now(), \"f\");\n};\n//# sourceMappingURL=BatchProcess.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mean = void 0;\nclass Mean {\n    constructor(n = 0, sum = 0) {\n        this.sum = sum;\n        this._min = undefined;\n        this._max = undefined;\n        this._n = n;\n    }\n    push(x) {\n        this._n++;\n        this.sum += x;\n        this._min = this._min == null || this._min > x ? x : this._min;\n        this._max = this._max == null || this._max < x ? x : this._max;\n    }\n    get n() {\n        return this._n;\n    }\n    get min() {\n        return this._min;\n    }\n    get max() {\n        return this._max;\n    }\n    get mean() {\n        return this.sum / this.n;\n    }\n    clone() {\n        return new Mean(this.n, this.sum);\n    }\n}\nexports.Mean = Mean;\n//# sourceMappingURL=Mean.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Rate_instances, _Rate_start, _Rate_priorEventTimestamps, _Rate_lastEventTs, _Rate_eventCount, _Rate_vacuum;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rate = void 0;\nconst BatchClusterOptions_1 = require(\"./BatchClusterOptions\");\n// Implementation notes:\n// The prior implementation relied on a weighted average of milliseconds between\n// events, which didn't behave well when a series of events happend in the same\n// millisecond, and didn't correctly recover if events ceased completely (which\n// would be expected if this was an error or timeout rate).\n// Keeping each event time in an array makes these calculations more precise,\n// but suffers from more memory consumption when measuring high rates and using\n// a large periodMs.\nclass Rate {\n    /**\n     * @param periodMs the length of time to retain event timestamps for computing\n     * rate. Events older than this value will be discarded.\n     * @param warmupMs return `null` from {@link Rate#msPerEvent} if it's been less\n     * than `warmupMs` since construction or {@link Rate#clear}.\n     */\n    constructor(periodMs = BatchClusterOptions_1.minuteMs, warmupMs = BatchClusterOptions_1.secondMs) {\n        _Rate_instances.add(this);\n        this.periodMs = periodMs;\n        this.warmupMs = warmupMs;\n        _Rate_start.set(this, Date.now());\n        _Rate_priorEventTimestamps.set(this, []);\n        _Rate_lastEventTs.set(this, null);\n        _Rate_eventCount.set(this, 0\n        /**\n         * @param periodMs the length of time to retain event timestamps for computing\n         * rate. Events older than this value will be discarded.\n         * @param warmupMs return `null` from {@link Rate#msPerEvent} if it's been less\n         * than `warmupMs` since construction or {@link Rate#clear}.\n         */\n        );\n    }\n    onEvent() {\n        var _a;\n        __classPrivateFieldSet(this, _Rate_eventCount, (_a = __classPrivateFieldGet(this, _Rate_eventCount, \"f\"), _a++, _a), \"f\");\n        const now = Date.now();\n        __classPrivateFieldGet(this, _Rate_priorEventTimestamps, \"f\").push(now);\n        __classPrivateFieldSet(this, _Rate_lastEventTs, now, \"f\");\n    }\n    get eventCount() {\n        return __classPrivateFieldGet(this, _Rate_eventCount, \"f\");\n    }\n    get msSinceLastEvent() {\n        return __classPrivateFieldGet(this, _Rate_lastEventTs, \"f\") == null ? null : Date.now() - __classPrivateFieldGet(this, _Rate_lastEventTs, \"f\");\n    }\n    get msPerEvent() {\n        const msSinceStart = Date.now() - __classPrivateFieldGet(this, _Rate_start, \"f\");\n        if (__classPrivateFieldGet(this, _Rate_lastEventTs, \"f\") == null || msSinceStart < this.warmupMs)\n            return null;\n        __classPrivateFieldGet(this, _Rate_instances, \"m\", _Rate_vacuum).call(this);\n        const events = __classPrivateFieldGet(this, _Rate_priorEventTimestamps, \"f\").length;\n        return events === 0 ? null : Math.min(this.periodMs, msSinceStart) / events;\n    }\n    get eventsPerMs() {\n        const mpe = this.msPerEvent;\n        return mpe == null ? 0 : mpe < 1 ? 1 : 1 / mpe;\n    }\n    get eventsPerSecond() {\n        return this.eventsPerMs * BatchClusterOptions_1.secondMs;\n    }\n    get eventsPerMinute() {\n        return this.eventsPerMs * BatchClusterOptions_1.minuteMs;\n    }\n    clear() {\n        __classPrivateFieldSet(this, _Rate_start, Date.now(), \"f\");\n        __classPrivateFieldGet(this, _Rate_priorEventTimestamps, \"f\").length = 0;\n        __classPrivateFieldSet(this, _Rate_lastEventTs, null, \"f\");\n        __classPrivateFieldSet(this, _Rate_eventCount, 0, \"f\");\n        return this;\n    }\n}\nexports.Rate = Rate;\n_Rate_start = new WeakMap(), _Rate_priorEventTimestamps = new WeakMap(), _Rate_lastEventTs = new WeakMap(), _Rate_eventCount = new WeakMap(), _Rate_instances = new WeakSet(), _Rate_vacuum = function _Rate_vacuum() {\n    const expired = Date.now() - this.periodMs;\n    const firstValidIndex = __classPrivateFieldGet(this, _Rate_priorEventTimestamps, \"f\").findIndex((ea) => ea > expired);\n    if (firstValidIndex === -1)\n        __classPrivateFieldGet(this, _Rate_priorEventTimestamps, \"f\").length = 0;\n    else if (firstValidIndex > 0) {\n        __classPrivateFieldGet(this, _Rate_priorEventTimestamps, \"f\").splice(0, firstValidIndex);\n    }\n};\n//# sourceMappingURL=Rate.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BatchCluster_instances, _BatchCluster_tasksPerProc, _BatchCluster_logger, _BatchCluster_procs, _BatchCluster_onIdleRequested, _BatchCluster_nextSpawnTime, _BatchCluster_lastPidsCheckTime, _BatchCluster_tasks, _BatchCluster_onIdleInterval, _BatchCluster_startErrorRate, _BatchCluster_spawnedProcs, _BatchCluster_endPromise, _BatchCluster_internalErrorCount, _BatchCluster_childEndCounts, _BatchCluster_beforeExitListener, _BatchCluster_exitListener, _BatchCluster_onIdleLater, _BatchCluster_onIdle, _BatchCluster_maybeCheckPids, _BatchCluster_execNextTask, _BatchCluster_maxSpawnDelay, _BatchCluster_procsToSpawn, _BatchCluster_maybeSpawnProcs, _BatchCluster_spawnNewProc;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchCluster = exports.Task = exports.Rate = exports.pids = exports.pidExists = exports.kill = exports.SimpleParser = exports.Deferred = exports.BatchProcess = exports.BatchClusterOptions = void 0;\nconst node_events_1 = __importDefault(require(\"node:events\"));\nconst node_process_1 = __importDefault(require(\"node:process\"));\nconst node_timers_1 = __importDefault(require(\"node:timers\"));\nconst Array_1 = require(\"./Array\");\nconst BatchClusterOptions_1 = require(\"./BatchClusterOptions\");\nconst BatchProcess_1 = require(\"./BatchProcess\");\nconst Deferred_1 = require(\"./Deferred\");\nconst Error_1 = require(\"./Error\");\nconst Mean_1 = require(\"./Mean\");\nconst Object_1 = require(\"./Object\");\nconst Rate_1 = require(\"./Rate\");\nconst String_1 = require(\"./String\");\nconst Timeout_1 = require(\"./Timeout\");\nvar BatchClusterOptions_2 = require(\"./BatchClusterOptions\");\nObject.defineProperty(exports, \"BatchClusterOptions\", { enumerable: true, get: function () { return BatchClusterOptions_2.BatchClusterOptions; } });\nvar BatchProcess_2 = require(\"./BatchProcess\");\nObject.defineProperty(exports, \"BatchProcess\", { enumerable: true, get: function () { return BatchProcess_2.BatchProcess; } });\nvar Deferred_2 = require(\"./Deferred\");\nObject.defineProperty(exports, \"Deferred\", { enumerable: true, get: function () { return Deferred_2.Deferred; } });\n__exportStar(require(\"./Logger\"), exports);\nvar Parser_1 = require(\"./Parser\");\nObject.defineProperty(exports, \"SimpleParser\", { enumerable: true, get: function () { return Parser_1.SimpleParser; } });\nvar Pids_1 = require(\"./Pids\");\nObject.defineProperty(exports, \"kill\", { enumerable: true, get: function () { return Pids_1.kill; } });\nObject.defineProperty(exports, \"pidExists\", { enumerable: true, get: function () { return Pids_1.pidExists; } });\nObject.defineProperty(exports, \"pids\", { enumerable: true, get: function () { return Pids_1.pids; } });\nvar Rate_2 = require(\"./Rate\");\nObject.defineProperty(exports, \"Rate\", { enumerable: true, get: function () { return Rate_2.Rate; } });\nvar Task_1 = require(\"./Task\");\nObject.defineProperty(exports, \"Task\", { enumerable: true, get: function () { return Task_1.Task; } });\n/**\n * BatchCluster instances manage 0 or more homogeneous child processes, and\n * provide the main interface for enqueuing `Task`s via `enqueueTask`.\n *\n * Given the large number of configuration options, the constructor\n * receives a single options hash. The most important of these are the\n * `ChildProcessFactory`, which specifies the factory that creates\n * ChildProcess instances, and `BatchProcessOptions`, which specifies how\n * child tasks can be verified and shut down.\n */\nclass BatchCluster {\n    constructor(opts) {\n        _BatchCluster_instances.add(this);\n        _BatchCluster_tasksPerProc.set(this, new Mean_1.Mean());\n        _BatchCluster_logger.set(this, void 0);\n        _BatchCluster_procs.set(this, []);\n        _BatchCluster_onIdleRequested.set(this, false);\n        _BatchCluster_nextSpawnTime.set(this, 0);\n        _BatchCluster_lastPidsCheckTime.set(this, 0);\n        _BatchCluster_tasks.set(this, []);\n        _BatchCluster_onIdleInterval.set(this, void 0);\n        _BatchCluster_startErrorRate.set(this, new Rate_1.Rate());\n        _BatchCluster_spawnedProcs.set(this, 0);\n        _BatchCluster_endPromise.set(this, void 0);\n        _BatchCluster_internalErrorCount.set(this, 0);\n        _BatchCluster_childEndCounts.set(this, new Map());\n        this.emitter = new node_events_1.default.EventEmitter();\n        /**\n         * @see BatchClusterEvents\n         */\n        this.on = this.emitter.on.bind(this.emitter);\n        /**\n         * @see BatchClusterEvents\n         * @since v9.0.0\n         */\n        this.off = this.emitter.off.bind(this.emitter);\n        _BatchCluster_beforeExitListener.set(this, () => this.end(true));\n        _BatchCluster_exitListener.set(this, () => this.end(false));\n        _BatchCluster_onIdleLater.set(this, () => {\n            if (!__classPrivateFieldGet(this, _BatchCluster_onIdleRequested, \"f\")) {\n                __classPrivateFieldSet(this, _BatchCluster_onIdleRequested, true, \"f\");\n                node_timers_1.default.setTimeout(() => __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_onIdle).call(this), 1);\n            }\n        }\n        // NOT ASYNC: updates internal state:\n        );\n        this.options = (0, BatchClusterOptions_1.verifyOptions)({ ...opts, observer: this.emitter });\n        this.on(\"childEnd\", (bp, why) => {\n            var _a;\n            __classPrivateFieldGet(this, _BatchCluster_tasksPerProc, \"f\").push(bp.taskCount);\n            __classPrivateFieldGet(this, _BatchCluster_childEndCounts, \"f\").set(why, ((_a = __classPrivateFieldGet(this, _BatchCluster_childEndCounts, \"f\").get(why)) !== null && _a !== void 0 ? _a : 0) + 1);\n            __classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\").call(this);\n        });\n        this.on(\"internalError\", (error) => {\n            var _a;\n            __classPrivateFieldGet(this, _BatchCluster_logger, \"f\").call(this).error(\"BatchCluster: INTERNAL ERROR: \" + error);\n            __classPrivateFieldSet(this, _BatchCluster_internalErrorCount, (_a = __classPrivateFieldGet(this, _BatchCluster_internalErrorCount, \"f\"), _a++, _a), \"f\");\n        });\n        this.on(\"noTaskData\", (stdout, stderr, proc) => {\n            var _a;\n            __classPrivateFieldGet(this, _BatchCluster_logger, \"f\").call(this).warn(\"BatchCluster: child process emitted data with no current task. Consider setting streamFlushMillis to a higher value.\", {\n                streamFlushMillis: this.options.streamFlushMillis,\n                stdout: (0, String_1.toS)(stdout),\n                stderr: (0, String_1.toS)(stderr),\n                proc_pid: proc === null || proc === void 0 ? void 0 : proc.pid,\n            });\n            __classPrivateFieldSet(this, _BatchCluster_internalErrorCount, (_a = __classPrivateFieldGet(this, _BatchCluster_internalErrorCount, \"f\"), _a++, _a), \"f\");\n        });\n        this.on(\"startError\", (error) => {\n            __classPrivateFieldGet(this, _BatchCluster_logger, \"f\").call(this).warn(\"BatchCluster.onStartError(): \" + error);\n            __classPrivateFieldGet(this, _BatchCluster_startErrorRate, \"f\").onEvent();\n            if (this.options.maxReasonableProcessFailuresPerMinute > 0 &&\n                __classPrivateFieldGet(this, _BatchCluster_startErrorRate, \"f\").eventsPerMinute >\n                    this.options.maxReasonableProcessFailuresPerMinute) {\n                this.emitter.emit(\"fatalError\", new Error(error +\n                    \"(start errors/min: \" +\n                    __classPrivateFieldGet(this, _BatchCluster_startErrorRate, \"f\").eventsPerMinute.toFixed(2) +\n                    \")\"));\n                this.end();\n            }\n            else {\n                __classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\").call(this);\n            }\n        });\n        if (this.options.onIdleIntervalMillis > 0) {\n            __classPrivateFieldSet(this, _BatchCluster_onIdleInterval, node_timers_1.default.setInterval(() => __classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\").call(this), this.options.onIdleIntervalMillis), \"f\");\n            __classPrivateFieldGet(this, _BatchCluster_onIdleInterval, \"f\").unref(); // < don't prevent node from exiting\n        }\n        __classPrivateFieldSet(this, _BatchCluster_logger, this.options.logger, \"f\");\n        node_process_1.default.once(\"beforeExit\", __classPrivateFieldGet(this, _BatchCluster_beforeExitListener, \"f\"));\n        node_process_1.default.once(\"exit\", __classPrivateFieldGet(this, _BatchCluster_exitListener, \"f\"));\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _BatchCluster_endPromise, \"f\") != null;\n    }\n    /**\n     * Shut down this instance, and all child processes.\n     * @param gracefully should an attempt be made to finish in-flight tasks, or\n     * should we force-kill child PIDs.\n     */\n    // NOT ASYNC so state transition happens immediately\n    end(gracefully = true) {\n        __classPrivateFieldGet(this, _BatchCluster_logger, \"f\").call(this).info(\"BatchCluster.end()\", { gracefully });\n        if (__classPrivateFieldGet(this, _BatchCluster_endPromise, \"f\") == null) {\n            this.emitter.emit(\"beforeEnd\");\n            (0, Object_1.map)(__classPrivateFieldGet(this, _BatchCluster_onIdleInterval, \"f\"), node_timers_1.default.clearInterval);\n            __classPrivateFieldSet(this, _BatchCluster_onIdleInterval, undefined, \"f\");\n            node_process_1.default.removeListener(\"beforeExit\", __classPrivateFieldGet(this, _BatchCluster_beforeExitListener, \"f\"));\n            node_process_1.default.removeListener(\"exit\", __classPrivateFieldGet(this, _BatchCluster_exitListener, \"f\"));\n            __classPrivateFieldSet(this, _BatchCluster_endPromise, new Deferred_1.Deferred().observe(this.closeChildProcesses(gracefully).then(() => {\n                this.emitter.emit(\"end\");\n            })), \"f\");\n        }\n        return __classPrivateFieldGet(this, _BatchCluster_endPromise, \"f\");\n    }\n    /**\n     * Submits `task` for processing by a `BatchProcess` instance\n     *\n     * @return a Promise that is resolved or rejected once the task has been\n     * attempted on an idle BatchProcess\n     */\n    enqueueTask(task) {\n        if (this.ended) {\n            task.reject(new Error(\"BatchCluster has ended, cannot enqueue \" + task.command));\n        }\n        __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").push(task);\n        // Run #onIdle now (not later), to make sure the task gets enqueued asap if\n        // possible\n        __classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\").call(this);\n        // (BatchProcess will call our #onIdleLater when tasks settle or when they\n        // exit)\n        return task.promise;\n    }\n    /**\n     * @return true if all previously-enqueued tasks have settled\n     */\n    get isIdle() {\n        return this.pendingTaskCount === 0 && this.busyProcCount === 0;\n    }\n    /**\n     * @return the number of pending tasks\n     */\n    get pendingTaskCount() {\n        return __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").length;\n    }\n    /**\n     * @returns {number} the mean number of tasks completed by child processes\n     */\n    get meanTasksPerProc() {\n        return __classPrivateFieldGet(this, _BatchCluster_tasksPerProc, \"f\").mean;\n    }\n    /**\n     * @return the total number of child processes created by this instance\n     */\n    get spawnedProcCount() {\n        return __classPrivateFieldGet(this, _BatchCluster_spawnedProcs, \"f\");\n    }\n    /**\n     * @return the current number of spawned child processes. Some (or all) may be idle.\n     */\n    get procCount() {\n        return __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").length;\n    }\n    /**\n     * @return the current number of child processes currently servicing tasks\n     */\n    get busyProcCount() {\n        return (0, Array_1.count)(__classPrivateFieldGet(this, _BatchCluster_procs, \"f\"), \n        // don't count procs that are starting up as \"busy\":\n        (ea) => !ea.starting && !ea.ending && !ea.idle);\n    }\n    get startingProcCount() {\n        return (0, Array_1.count)(__classPrivateFieldGet(this, _BatchCluster_procs, \"f\"), \n        // don't count procs that are starting up as \"busy\":\n        (ea) => ea.starting && !ea.ending);\n    }\n    /**\n     * @return the current pending Tasks (mostly for testing)\n     */\n    get pendingTasks() {\n        return __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\");\n    }\n    /**\n     * @return the current running Tasks (mostly for testing)\n     */\n    get currentTasks() {\n        return __classPrivateFieldGet(this, _BatchCluster_procs, \"f\")\n            .map((ea) => ea.currentTask)\n            .filter((ea) => ea != null);\n    }\n    /**\n     * For integration tests:\n     */\n    get internalErrorCount() {\n        return __classPrivateFieldGet(this, _BatchCluster_internalErrorCount, \"f\");\n    }\n    /**\n     * Verify that each BatchProcess PID is actually alive.\n     *\n     * @return the spawned PIDs that are still in the process table.\n     */\n    pids() {\n        const arr = [];\n        for (const proc of [...__classPrivateFieldGet(this, _BatchCluster_procs, \"f\")]) {\n            if (proc != null && proc.running()) {\n                arr.push(proc.pid);\n            }\n        }\n        return arr;\n    }\n    /**\n     * For diagnostics. Contents may change.\n     */\n    stats() {\n        var _a;\n        const readyProcCount = (0, Array_1.count)(__classPrivateFieldGet(this, _BatchCluster_procs, \"f\"), (ea) => ea.ready);\n        return {\n            pendingTaskCount: __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").length,\n            currentProcCount: __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").length,\n            readyProcCount,\n            maxProcCount: this.options.maxProcs,\n            internalErrorCount: __classPrivateFieldGet(this, _BatchCluster_internalErrorCount, \"f\"),\n            startErrorRatePerMinute: __classPrivateFieldGet(this, _BatchCluster_startErrorRate, \"f\").eventsPerMinute,\n            msBeforeNextSpawn: Math.max(0, __classPrivateFieldGet(this, _BatchCluster_nextSpawnTime, \"f\") - Date.now()),\n            spawnedProcCount: this.spawnedProcCount,\n            childEndCounts: this.childEndCounts,\n            ending: __classPrivateFieldGet(this, _BatchCluster_endPromise, \"f\") != null,\n            ended: false === ((_a = __classPrivateFieldGet(this, _BatchCluster_endPromise, \"f\")) === null || _a === void 0 ? void 0 : _a.pending),\n        };\n    }\n    /**\n     * Get ended process counts (used for tests)\n     */\n    countEndedChildProcs(why) {\n        var _a;\n        return (_a = __classPrivateFieldGet(this, _BatchCluster_childEndCounts, \"f\").get(why)) !== null && _a !== void 0 ? _a : 0;\n    }\n    get childEndCounts() {\n        return (0, Object_1.fromEntries)([...__classPrivateFieldGet(this, _BatchCluster_childEndCounts, \"f\").entries()]);\n    }\n    /**\n     * Shut down any currently-running child processes. New child processes will\n     * be started automatically to handle new tasks.\n     */\n    async closeChildProcesses(gracefully = true) {\n        const procs = [...__classPrivateFieldGet(this, _BatchCluster_procs, \"f\")];\n        __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").length = 0;\n        await Promise.all(procs.map((proc) => proc\n            .end(gracefully, \"ending\")\n            .catch((err) => this.emitter.emit(\"endError\", (0, Error_1.asError)(err), proc))));\n    }\n    /**\n     * Reset the maximum number of active child processes to `maxProcs`. Note that\n     * this is handled gracefully: child processes are only reduced as tasks are\n     * completed.\n     */\n    setMaxProcs(maxProcs) {\n        this.options.maxProcs = maxProcs;\n        // we may now be able to handle an enqueued task. Vacuum pids and see:\n        __classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\").call(this);\n    }\n    /**\n     * Run maintenance on currently spawned child processes. This method is\n     * normally invoked automatically as tasks are enqueued and processed.\n     *\n     * Only public for tests.\n     */\n    // NOT ASYNC: updates internal state. only exported for tests.\n    vacuumProcs() {\n        __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_maybeCheckPids).call(this);\n        const endPromises = [];\n        let pidsToReap = Math.max(0, __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").length - this.options.maxProcs);\n        (0, Array_1.filterInPlace)(__classPrivateFieldGet(this, _BatchCluster_procs, \"f\"), (proc) => {\n            var _a;\n            // Only check `.idle` (not `.ready`) procs. We don't want to reap busy\n            // procs unless we're ending, and unhealthy procs (that we want to reap)\n            // won't be `.ready`.\n            if (proc.idle) {\n                // don't reap more than pidsToReap pids. We can't use #procs.length\n                // within filterInPlace because #procs.length only changes at iteration\n                // completion: the prior impl resulted in all idle pids getting reaped\n                // when maxProcs was reduced.\n                const why = (_a = proc.whyNotHealthy) !== null && _a !== void 0 ? _a : (--pidsToReap >= 0 ? \"tooMany\" : null);\n                if (why != null) {\n                    endPromises.push(proc.end(true, why));\n                    return false;\n                }\n                proc.maybeRunHealthcheck();\n            }\n            return true;\n        });\n        return Promise.all(endPromises);\n    }\n}\nexports.BatchCluster = BatchCluster;\n_BatchCluster_tasksPerProc = new WeakMap(), _BatchCluster_logger = new WeakMap(), _BatchCluster_procs = new WeakMap(), _BatchCluster_onIdleRequested = new WeakMap(), _BatchCluster_nextSpawnTime = new WeakMap(), _BatchCluster_lastPidsCheckTime = new WeakMap(), _BatchCluster_tasks = new WeakMap(), _BatchCluster_onIdleInterval = new WeakMap(), _BatchCluster_startErrorRate = new WeakMap(), _BatchCluster_spawnedProcs = new WeakMap(), _BatchCluster_endPromise = new WeakMap(), _BatchCluster_internalErrorCount = new WeakMap(), _BatchCluster_childEndCounts = new WeakMap(), _BatchCluster_beforeExitListener = new WeakMap(), _BatchCluster_exitListener = new WeakMap(), _BatchCluster_onIdleLater = new WeakMap(), _BatchCluster_instances = new WeakSet(), _BatchCluster_onIdle = function _BatchCluster_onIdle() {\n    __classPrivateFieldSet(this, _BatchCluster_onIdleRequested, false, \"f\");\n    this.vacuumProcs();\n    while (__classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_execNextTask).call(this)) {\n        //\n    }\n    __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_maybeSpawnProcs).call(this);\n}, _BatchCluster_maybeCheckPids = function _BatchCluster_maybeCheckPids() {\n    if (this.options.cleanupChildProcs &&\n        this.options.pidCheckIntervalMillis > 0 &&\n        __classPrivateFieldGet(this, _BatchCluster_lastPidsCheckTime, \"f\") + this.options.pidCheckIntervalMillis < Date.now()) {\n        __classPrivateFieldSet(this, _BatchCluster_lastPidsCheckTime, Date.now(), \"f\");\n        void this.pids();\n    }\n}, _BatchCluster_execNextTask = function _BatchCluster_execNextTask(retries = 1) {\n    if (__classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").length === 0 || this.ended || retries < 0)\n        return false;\n    const readyProc = __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").find((ea) => ea.ready);\n    // no procs are idle and healthy :(\n    if (readyProc == null) {\n        return false;\n    }\n    const task = __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").shift();\n    if (task == null) {\n        this.emitter.emit(\"internalError\", new Error(\"unexpected null task\"));\n        return false;\n    }\n    const submitted = readyProc.execTask(task);\n    if (!submitted) {\n        // This isn't an internal error: the proc may have needed to run a health\n        // check. Let's reschedule the task and try again:\n        __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").push(task);\n        // We don't want to return false here (it'll stop the onIdle loop) unless\n        // we actually can't submit the task:\n        return __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_execNextTask).call(this, retries--);\n    }\n    __classPrivateFieldGet(this, _BatchCluster_logger, \"f\").call(this).trace(\"BatchCluster.#execNextTask(): submitted task\", {\n        child_pid: readyProc.pid,\n        task,\n    });\n    return submitted;\n}, _BatchCluster_maxSpawnDelay = function _BatchCluster_maxSpawnDelay() {\n    // 10s delay is certainly long enough for .spawn() to return, even on a\n    // loaded windows machine.\n    return Math.max(10000, this.options.spawnTimeoutMillis);\n}, _BatchCluster_procsToSpawn = function _BatchCluster_procsToSpawn() {\n    const remainingCapacity = this.options.maxProcs - __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").length;\n    // take into account starting procs, so one task doesn't result in multiple\n    // processes being spawned:\n    const requestedCapacity = __classPrivateFieldGet(this, _BatchCluster_tasks, \"f\").length - this.startingProcCount;\n    const atLeast0 = Math.max(0, Math.min(remainingCapacity, requestedCapacity));\n    return this.options.minDelayBetweenSpawnMillis === 0\n        ? // we can spin up multiple processes in parallel.\n            atLeast0\n        : // Don't spin up more than 1:\n            Math.min(1, atLeast0);\n}, _BatchCluster_maybeSpawnProcs = async function _BatchCluster_maybeSpawnProcs() {\n    var _a;\n    let procsToSpawn = __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_procsToSpawn).call(this);\n    if (this.ended || __classPrivateFieldGet(this, _BatchCluster_nextSpawnTime, \"f\") > Date.now() || procsToSpawn === 0) {\n        return;\n    }\n    // prevent concurrent runs:\n    __classPrivateFieldSet(this, _BatchCluster_nextSpawnTime, Date.now() + __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_maxSpawnDelay).call(this), \"f\");\n    for (let i = 0; i < procsToSpawn; i++) {\n        if (this.ended) {\n            break;\n        }\n        // Kick the lock down the road:\n        __classPrivateFieldSet(this, _BatchCluster_nextSpawnTime, Date.now() + __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_maxSpawnDelay).call(this), \"f\");\n        __classPrivateFieldSet(this, _BatchCluster_spawnedProcs, (_a = __classPrivateFieldGet(this, _BatchCluster_spawnedProcs, \"f\"), _a++, _a), \"f\");\n        try {\n            const proc = __classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_spawnNewProc).call(this);\n            const result = await (0, Timeout_1.thenOrTimeout)(proc, this.options.spawnTimeoutMillis);\n            if (result === Timeout_1.Timeout) {\n                void proc\n                    .then((bp) => {\n                    void bp.end(false, \"startError\");\n                    this.emitter.emit(\"startError\", (0, Error_1.asError)(\"Failed to spawn process in \" +\n                        this.options.spawnTimeoutMillis +\n                        \"ms\"), bp);\n                })\n                    .catch((err) => {\n                    // this should only happen if the processFactory throws a\n                    // rejection:\n                    this.emitter.emit(\"startError\", (0, Error_1.asError)(err));\n                });\n            }\n            else {\n                __classPrivateFieldGet(this, _BatchCluster_logger, \"f\").call(this).debug(\"BatchCluster.#maybeSpawnProcs() started healthy child process\", { pid: result.pid });\n            }\n            // tasks may have been popped off or setMaxProcs may have reduced\n            // maxProcs. Do this at the end so the for loop ends properly.\n            procsToSpawn = Math.min(__classPrivateFieldGet(this, _BatchCluster_instances, \"m\", _BatchCluster_procsToSpawn).call(this), procsToSpawn);\n        }\n        catch (err) {\n            this.emitter.emit(\"startError\", (0, Error_1.asError)(err));\n        }\n    }\n    // YAY WE MADE IT.\n    // Only let more children get spawned after minDelay:\n    const delay = Math.max(100, this.options.minDelayBetweenSpawnMillis);\n    __classPrivateFieldSet(this, _BatchCluster_nextSpawnTime, Date.now() + delay, \"f\");\n    // And schedule #onIdle for that time:\n    node_timers_1.default.setTimeout(__classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\"), delay).unref();\n}, _BatchCluster_spawnNewProc = \n// must only be called by this.#maybeSpawnProcs()\nasync function _BatchCluster_spawnNewProc() {\n    // no matter how long it takes to spawn, always push the result into #procs\n    // so we don't leak child processes:\n    const proc = await this.options.processFactory();\n    const result = new BatchProcess_1.BatchProcess(proc, this.options, __classPrivateFieldGet(this, _BatchCluster_onIdleLater, \"f\"));\n    __classPrivateFieldGet(this, _BatchCluster_procs, \"f\").push(result);\n    return result;\n};\n//# sourceMappingURL=BatchCluster.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNumber = isNumber;\nexports.toFloat = toFloat;\nexports.toInt = toInt;\nexports.roundToDecimalPlaces = roundToDecimalPlaces;\nfunction isNumber(n) {\n    return typeof n === \"number\" && isFinite(n);\n}\nfunction toFloat(n) {\n    if (n == null)\n        return;\n    if (isNumber(n))\n        return n;\n    try {\n        return parseFloat(String(n).trim());\n    }\n    catch {\n        return undefined;\n    }\n}\nfunction toInt(n) {\n    if (n == null)\n        return;\n    if (isNumber(n)) {\n        // we don't round here, because parsing floats also doesn't round.\n        return Math.floor(n);\n    }\n    try {\n        return parseInt(String(n).trim());\n    }\n    catch {\n        return undefined;\n    }\n}\n/**\n * Rounds a number to a specified number of decimal places.\n *\n * @param value - The number to round\n * @param precision - The number of decimal places to retain\n * @returns The rounded number with specified precision\n *\n * @example\n * roundToDecimalPlaces(3.14159, 2) // Returns 3.14\n * roundToDecimalPlaces(123.456789, 3) // Returns 123.457\n * roundToDecimalPlaces(0.0001234, 4) // Returns 0.0001\n */\nfunction roundToDecimalPlaces(value, precision) {\n    // Handle edge cases\n    if (!isNumber(value))\n        throw new Error(\"Value must be a number\");\n    if (precision < 0)\n        throw new Error(\"Precision must be non-negative\");\n    if (value === 0)\n        return 0;\n    const multiplier = Math.pow(10, precision);\n    return Math.abs(value) < Number.EPSILON\n        ? 0\n        : Math.round(value * multiplier) / multiplier;\n}\n//# sourceMappingURL=Number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.times = times;\n/**\n * Generates an array by running a function n times\n * @param n The number of times to run the function\n * @param fn The function to generate each element\n * @returns An array containing the results\n */\nfunction times(n, f) {\n    return Array.from({ length: n }, (_, i) => f(i));\n}\n//# sourceMappingURL=Times.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isString = isString;\nexports.blank = blank;\nexports.notBlank = notBlank;\nexports.notBlankString = notBlankString;\nexports.toNotBlank = toNotBlank;\nexports.compactBlanks = compactBlanks;\nexports.toS = toS;\nexports.leftPad = leftPad;\nexports.pad2 = pad2;\nexports.pad3 = pad3;\nexports.stripPrefix = stripPrefix;\nexports.stripSuffix = stripSuffix;\nexports.splitLines = splitLines;\nconst Number_1 = require(\"./Number\");\nconst Times_1 = require(\"./Times\");\nfunction isString(o) {\n    return typeof o === \"string\";\n}\nconst spaces = (0, Times_1.times)(10, (i) => (0, Times_1.times)(i, () => \" \").join(\"\"));\nconst zeroes = (0, Times_1.times)(10, (i) => (0, Times_1.times)(i, () => \"0\").join(\"\"));\nfunction blank(s) {\n    return s == null || String(s).trim().length === 0;\n}\nfunction notBlank(s) {\n    return !blank(s);\n}\n/**\n * @return true iff `s` is a string with at least one non-whitespace character.\n */\nfunction notBlankString(s) {\n    return isString(s) && s.trim().length > 0;\n}\nfunction toNotBlank(s) {\n    if (s == null)\n        return;\n    s = String(s).trim();\n    return s.length === 0 ? undefined : s;\n}\nfunction compactBlanks(arr) {\n    return arr.filter(notBlank);\n}\nfunction padding(padChar, count) {\n    if (count <= 0)\n        return \"\";\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return (padChar === \"0\" ? zeroes : spaces)[Math.floor(count)];\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction toS(s) {\n    return s == null ? \"\" : String(s);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction leftPad(i, minLen, padChar) {\n    if (i == null || ((0, Number_1.isNumber)(i) && isNaN(i)))\n        i = 0;\n    const s = String(i);\n    if ((0, Number_1.isNumber)(i) && i < 0 && padChar === \"0\") {\n        // avoid \"000-1\":\n        return \"-\" + padding(padChar, minLen - s.length) + Math.abs(i);\n    }\n    else {\n        return padding(padChar, minLen - s.length) + s;\n    }\n}\nfunction pad2(...numbers) {\n    return numbers.map((i) => leftPad(i, 2, \"0\"));\n}\nfunction pad3(...numbers) {\n    return numbers.map((i) => leftPad(i, 3, \"0\"));\n}\n/**\n * NOT FOR GENERAL USE, as this is latin-case-insensitive\n */\nfunction stripPrefix(s, prefix) {\n    return toS(s).toLowerCase().startsWith(prefix.toLowerCase())\n        ? s.slice(prefix.length)\n        : s;\n}\nfunction stripSuffix(s, suffix) {\n    const str = toS(s);\n    return str.endsWith(suffix) ? str.slice(0, -suffix.length) : str;\n}\n/**\n * @return `arr` with all empty strings removed and all non-empty strings trimmed.\n */\nfunction splitLines(...arr) {\n    return arr\n        .join(\"\\n\")\n        .split(/\\r?\\n/)\n        .map((ea) => ea.trim())\n        .filter((ea) => ea.length > 0);\n}\n//# sourceMappingURL=String.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIterable = isIterable;\nexports.ifArr = ifArr;\nexports.toA = toA;\nexports.compact = compact;\nexports.filterInPlace = filterInPlace;\nexports.uniq = uniq;\nexports.shallowArrayEql = shallowArrayEql;\nexports.sortBy = sortBy;\nexports.leastBy = leastBy;\nconst String_1 = require(\"./String\");\nfunction isIterable(obj) {\n    return (obj != null &&\n        typeof obj !== \"string\" &&\n        typeof obj[Symbol.iterator] === \"function\");\n}\nfunction ifArr(arr) {\n    return Array.isArray(arr) ? arr : undefined;\n}\nfunction toA(arr) {\n    return Array.isArray(arr) // < strings are not arrays\n        ? arr\n        : arr == null\n            ? []\n            : (0, String_1.isString)(arr) // < don't rely on isIterable rejecting Strings\n                ? [arr]\n                : isIterable(arr)\n                    ? Array.from(arr)\n                    : [arr];\n}\nfunction compact(array) {\n    return array.filter((elem) => elem != null);\n}\n/**\n * Remove all elements from the given array that return false from the given\n * predicate `filter`.\n */\nfunction filterInPlace(arr, filter) {\n    let j = 0;\n    arr.forEach((ea, i) => {\n        if (filter(ea)) {\n            if (i !== j)\n                arr[j] = ea;\n            j++;\n        }\n    });\n    arr.length = j;\n    return arr;\n}\nfunction uniq(arr) {\n    return arr.reduce((acc, ea) => {\n        if (acc.indexOf(ea) === -1)\n            acc.push(ea);\n        return acc;\n    }, []);\n}\n// terrible implementation only for internal use\nfunction shallowArrayEql(a, b) {\n    return (a != null &&\n        b != null &&\n        a.length === b.length &&\n        a.every((ea, idx) => ea === b[idx]));\n}\n/**\n * Returns a copy of arr, stable sorted by the given constraint. Note that false\n * < true, and that `f` may return an array for sort priorities, or undefined if\n * the item should be skipped from the returned result.\n *\n * Note: localeSort() thinks lower case should come before upper case (!!)\n */\nfunction sortBy(arr, f) {\n    return (toA(arr).filter((ea) => ea != null)\n        .map((item) => ({\n        item,\n        cmp: f(item),\n    }))\n        .filter((ea) => ea.cmp != null)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        .sort((a, b) => cmp(a.cmp, b.cmp))\n        .map((ea) => ea.item));\n}\nfunction cmp(a, b) {\n    // undefined == undefined:\n    if (a == null && b == null)\n        return 0;\n    // undefined should be < defined. We can't use typeof here because typeof null\n    // is \"object\" and typeof undefined = \"undefined\".\n    if (a == null)\n        return -1;\n    if (b == null)\n        return 1;\n    const aType = typeof a;\n    const bType = typeof b;\n    if ((aType === \"string\" || aType === \"symbol\") &&\n        (bType === \"string\" || bType === \"symbol\")) {\n        // in German, ä sorts before z, in Swedish, ä sorts after z\n        return String(a).localeCompare(String(b));\n    }\n    return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction leastBy(haystack, f) {\n    let min;\n    let result;\n    for (const ea of haystack) {\n        const val = f(ea);\n        if (val != null && (min == null || val < min)) {\n            min = val;\n            result = ea;\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=Array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryOnReject = retryOnReject;\nfunction retryOnReject(f, maxRetries) {\n    let retries = 0;\n    const g = async () => {\n        try {\n            return await f();\n        }\n        catch (err) {\n            if (retries < maxRetries) {\n                retries++;\n                return g();\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    return g();\n}\n//# sourceMappingURL=AsyncRetry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWarning = isWarning;\nconst String_1 = require(\"./String\");\n// This is quite lax by design: it's up to the user to check .warnings!\nconst WarningRE = /\\bwarning: |\\bnothing to (?:write|do)\\b/i;\n/**\n * This is the default implementation of IgnorableError, and ignores null,\n * undefined, errors without a message, warnings about duplicate tags, and\n * ICC_Profile deletions.\n */\nfunction isWarning(err) {\n    if (err == null)\n        return true;\n    const msg = (err instanceof Error ? err.message : (0, String_1.toS)(err)).trim();\n    return (0, String_1.blank)(msg) || WarningRE.test(msg);\n}\n//# sourceMappingURL=IsWarning.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExifToolTask = void 0;\nconst bc = __importStar(require(\"batch-cluster\"));\nconst IsWarning_1 = require(\"./IsWarning\");\nconst String_1 = require(\"./String\");\nconst BadPerlInstallationRE = /Can't locate \\S+ in @INC/i;\nclass ExifToolTask extends bc.Task {\n    args;\n    options;\n    static renderCommand(args, options) {\n        const result = args.filter((ea) => !(0, String_1.blank)(ea));\n        if (options?.ignoreMinorErrors === true) {\n            result.push(\"-ignoreMinorErrors\");\n        }\n        result.push(\"-execute\");\n        return result.join(\"\\n\") + \"\\n\";\n    }\n    errors = [];\n    warnings = [];\n    constructor(args, options) {\n        super(ExifToolTask.renderCommand(args, options), (stdout, stderr, passed) => this.#parser(stdout, stderr, passed));\n        this.args = args;\n        this.options = options;\n    }\n    onStderr(buf) {\n        if (BadPerlInstallationRE.test(buf.toString())) {\n            // This isn't an error we can recover from: there's a Perl module that\n            // needs to be installed. See\n            // https://github.com/photostructure/exiftool-vendored.js/issues/168 for\n            // details.\n            throw new Error(buf.toString());\n        }\n        super.onStderr(buf);\n    }\n    #parser(stdout, stderr, passed) {\n        let error;\n        if ((0, String_1.notBlank)(stderr) || !passed) {\n            for (const line of (0, String_1.splitLines)(stderr ?? \"\")) {\n                if ((0, IsWarning_1.isWarning)(line)) {\n                    this.warnings.push(line);\n                }\n                else if (/error|warning/i.test(line)) {\n                    this.errors.push(line);\n                    // new Error() will add a \"Error: \" prefix:\n                    error ??= new Error(line.replace(/^error: /i, \"\"));\n                }\n            }\n        }\n        return this.parse(stdout, error);\n    }\n}\nexports.ExifToolTask = ExifToolTask;\n//# sourceMappingURL=ExifToolTask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lazy = lazy;\nfunction lazy(thunk) {\n    let invoked = false;\n    let result;\n    let error;\n    return () => {\n        if (!invoked) {\n            try {\n                invoked = true;\n                result = thunk();\n            }\n            catch (e) {\n                error = e;\n                throw e;\n            }\n        }\n        if (error != null)\n            throw error;\n        return result;\n    };\n}\n//# sourceMappingURL=Lazy.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWin32 = void 0;\nconst _os = __importStar(require(\"node:os\"));\nconst Lazy_1 = require(\"./Lazy\");\nexports.isWin32 = (0, Lazy_1.lazy)(() => _os.platform() === \"win32\");\n//# sourceMappingURL=IsWin32.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utf8FilenameCharsetArgs = void 0;\nconst IsWin32_1 = require(\"./IsWin32\");\n/**\n * Tells ExifTool to handle UTF-8-encoded filenames on Windows.\n *\n * Without this setting, non-latin filename characters on Windows won't be\n * encoded correctly, and the file will be erroneously reported as not\n * existing.\n *\n * This setting isn't necessary on non-Windows platforms, nor on Windows\n * machines that have been configured to use UTF-8, but it doesn't hurt\n * anything to include this option.\n *\n * @see https://github.com/photostructure/exiftool-vendored.js/issues/124\n * @see https://exiftool.org/exiftool_pod.html#WINDOWS-UNICODE-FILE-NAMES\n * @see https://exiftool.org/faq.html#Q10\n */\nexports.Utf8FilenameCharsetArgs = (0, IsWin32_1.isWin32)()\n    ? [\"-charset\", \"filename=utf8\"]\n    : [];\n//# sourceMappingURL=FilenameCharsetArgs.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryExtractionTask = void 0;\nconst node_path_1 = __importDefault(require(\"node:path\"));\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nconst FilenameCharsetArgs_1 = require(\"./FilenameCharsetArgs\");\nconst String_1 = require(\"./String\");\nconst StdoutRe = /\\b(\\d+) output files? created/i;\n/**\n * Task that returns an error string (to prevent retries), or undefined if\n * everything seems to have worked.\n */\nclass BinaryExtractionTask extends ExifToolTask_1.ExifToolTask {\n    constructor(args, options) {\n        super(args, options);\n    }\n    static for(tagname, imgSrc, imgDest, options) {\n        const args = [\n            ...FilenameCharsetArgs_1.Utf8FilenameCharsetArgs,\n            \"-b\",\n            \"-\" + tagname,\n            \"-w\",\n            // The %0f prevents shell escaping. See\n            // https://exiftool.org/exiftool_pod.html#w-EXT-or-FMT--textOut\n            \"%0f\" + node_path_1.default.resolve(imgDest),\n            node_path_1.default.resolve(imgSrc),\n        ];\n        return new BinaryExtractionTask(args, options);\n    }\n    parse(stdout, err) {\n        const s = (0, String_1.toS)(stdout).trim();\n        const m = StdoutRe.exec(s);\n        if (err != null) {\n            throw err;\n        }\n        else if (m == null) {\n            throw new Error(\"Missing expected status message (got \" + stdout + \")\");\n        }\n        else if (m[1] === \"1\") {\n            return;\n        }\n        else {\n            // Don't retry: the binary payload is missing, and retrying won't fix that.\n            return s;\n        }\n    }\n}\nexports.BinaryExtractionTask = BinaryExtractionTask;\n//# sourceMappingURL=BinaryExtractionTask.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryToBufferTask = void 0;\nconst node_path_1 = __importDefault(require(\"node:path\"));\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nconst FilenameCharsetArgs_1 = require(\"./FilenameCharsetArgs\");\nconst String_1 = require(\"./String\");\n/**\n * Task that returns an error string (to prevent retries), or undefined if\n * everything seems to have worked.\n */\nclass BinaryToBufferTask extends ExifToolTask_1.ExifToolTask {\n    tagname;\n    constructor(tagname, args, options) {\n        super(args, options);\n        this.tagname = tagname;\n    }\n    static for(tagname, imgSrc, options) {\n        // NOTE TO FUTURE ME: we don't need to escape these arguments, because\n        // ExifTool separates them via newlines.\n        const args = [...FilenameCharsetArgs_1.Utf8FilenameCharsetArgs, \"-json\", \"-b\", \"-\" + tagname];\n        args.push(node_path_1.default.resolve(imgSrc));\n        return new BinaryToBufferTask(tagname, args, options);\n    }\n    parse(data, err) {\n        try {\n            const obj = JSON.parse(data)?.[0];\n            // did they get the casing right?\n            {\n                const result = decode(obj[this.tagname]);\n                if (result != null)\n                    return result;\n            } // hmm, incorrect casing. Check the other keys.\n            for (const k of Object.keys(obj)) {\n                if (k.toLowerCase() === this.tagname.toLowerCase()) {\n                    const result = decode(obj[k]);\n                    if (result != null)\n                        return result;\n                }\n            }\n        }\n        catch (caught) {\n            err ??= (0, String_1.notBlank)(data)\n                ? new Error(data)\n                : caught instanceof Error\n                    ? caught\n                    : new Error(String(caught));\n        }\n        return err ?? new Error(this.tagname + \" not found\");\n    }\n}\nexports.BinaryToBufferTask = BinaryToBufferTask;\nconst B64Prefix = \"base64:\";\nfunction decode(data) {\n    return data == null || !data.startsWith(B64Prefix)\n        ? undefined\n        : Buffer.from(data.substring(B64Prefix.length), \"base64\");\n}\n//# sourceMappingURL=BinaryToBufferTask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBoolean = toBoolean;\nconst Truthy = [\"true\", \"yes\", \"1\", \"on\"];\nconst Falsy = [\"false\", \"no\", \"0\", \"off\"];\nfunction toBoolean(value) {\n    if (value == null)\n        return undefined;\n    if (typeof value === \"boolean\")\n        return value;\n    const s = String(value).trim().toLowerCase();\n    return Truthy.includes(s) ? true : Falsy.includes(s) ? false : undefined;\n}\n//# sourceMappingURL=Boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CapturedAtTagNames = void 0;\nexports.CapturedAtTagNames = [\n    \"SubSecDateTimeOriginal\",\n    \"SubSecCreateDate\",\n    \"SubSecMediaCreateDate\",\n    \"DateTimeOriginal\",\n    \"CreateDate\",\n    \"MediaCreateDate\",\n    \"CreationDate\", // < Found in some transcoded Apple movies\n    \"DateTimeCreated\",\n    \"TimeCreated\", // < may not have the date\n];\n//# sourceMappingURL=CapturedAtTagNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultExiftoolArgs = void 0;\n// -stay_open True -@ -\nexports.DefaultExiftoolArgs = [\"-stay_open\", \"True\", \"-@\", \"-\"];\n//# sourceMappingURL=DefaultExiftoolArgs.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMaxProcs = void 0;\nconst _os = __importStar(require(\"node:os\"));\nexports.DefaultMaxProcs = Math.max(1, Math.floor(_os.cpus().length / 4));\n//# sourceMappingURL=DefaultMaxProcs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.which = which;\nconst node_fs_1 = require(\"node:fs\");\nconst promises_1 = require(\"node:fs/promises\");\nconst node_path_1 = require(\"node:path\");\nconst node_process_1 = require(\"node:process\");\nconst IsWin32_1 = require(\"./IsWin32\");\nconst String_1 = require(\"./String\");\nasync function which(binaryOrPath) {\n    if ((0, node_path_1.isAbsolute)(binaryOrPath) && (await canRX(binaryOrPath))) {\n        return binaryOrPath;\n    }\n    const base = (0, node_path_1.basename)(binaryOrPath);\n    for (const dir of (0, String_1.toS)(node_process_1.env.PATH).split(node_path_1.delimiter)) {\n        const fullPath = (0, node_path_1.join)(dir, base);\n        if (await canRX(fullPath)) {\n            return fullPath;\n        }\n    }\n    return;\n}\nasync function canRX(fullpath) {\n    if ((0, IsWin32_1.isWin32)())\n        return (0, node_fs_1.existsSync)(fullpath);\n    try {\n        await (0, promises_1.access)(fullpath, node_fs_1.constants.R_OK | node_fs_1.constants.X_OK);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n//# sourceMappingURL=Which.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exiftoolPath = exiftoolPath;\nconst _fs = __importStar(require(\"node:fs\"));\nconst _path = __importStar(require(\"node:path\"));\nconst IsWin32_1 = require(\"./IsWin32\");\nconst Which_1 = require(\"./Which\");\nfunction vendorPackage() {\n    return \"exiftool-vendored.\" + ((0, IsWin32_1.isWin32)() ? \"exe\" : \"pl\");\n}\nfunction tryRequire({ prefix = \"\", logger, } = {}) {\n    const id = prefix + vendorPackage();\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        return require(id);\n    }\n    catch (error) {\n        logger?.warn(id + \"not found: \", error);\n        return;\n    }\n}\n/**\n * This implementation relies on the fact that both `exiftool-vendored.pl` and\n * `exiftool-vendored.exe` both export the path to their respective exiftool\n * binary.\n *\n * When running in node, this method should suffice.\n *\n * When running in Electron, all bets are off, due to ASAR packaging and other\n * nonsense. As perl can't run from within an ASAR archive, `electron-builder`\n * must be configured to `asarUnpack`\n * \"**&#47;node_modules/exiftool-vendored.{pl,exe}/\". See\n * <https://www.electron.build/generated/platformspecificbuildoptions#configuration-asarUnpack>\n * for details.\n *\n * If you're using `electron-forge`, add something like the following to your\n * ForgeConfig.packagerConfig.extraResource array: `fs.join(\".\", \"node_modules\",\n * \"exiftool-vendored.\" + (isWin ? \"exe\" : \"pl\"))` but then you must specify a\n * custom exiftoolPath in your options hash, as subprocesses that use\n * ELECTRON_RUN_AS_NODE will no longer have process.resourcesPath set.\n *\n * If none of the above work for your use case, you can provide your own\n * `exiftoolPath` implementation to your instance of ExifTool\n *\n * @return the path to the exiftool binary, preferring the vendored version in\n * node_modules.\n */\nasync function exiftoolPath(logger) {\n    const path = tryRequire({ prefix: \"\", logger });\n    // This s/app.asar/app.asar.unpacked/ path switch adds support for Electron\n    // apps whose modules are ASAR-packed (like by electron-builder).\n    const asarUnpackedPath = path\n        ?.split(_path.sep)\n        .map((ea) => (ea === \"app.asar\" ? \"app.asar.unpacked\" : ea))\n        .join(_path.sep);\n    // NOTE: we must check for the fixedPath FIRST, because Electron's ASAR\n    // shenanigans will make existsSync return true for asar-packed resources\n    if (asarUnpackedPath != null && _fs.existsSync(asarUnpackedPath)) {\n        return asarUnpackedPath;\n    }\n    if (path != null && _fs.existsSync(path)) {\n        return path;\n    }\n    logger?.warn(\"Failed to find exiftool via \" + vendorPackage());\n    // process.resourcesPath is set by electron-forge:\n    const electronResourcePath = process.resourcesPath;\n    if (electronResourcePath != null) {\n        const forgePath = _path.join(electronResourcePath, vendorPackage(), \"bin\", \"exiftool\" + ((0, IsWin32_1.isWin32)() ? \".exe\" : \"\"));\n        if (_fs.existsSync(forgePath)) {\n            return forgePath;\n        }\n        else {\n            logger?.warn(\"Failed to find exiftool in electron forge resources path: \" + forgePath);\n        }\n    }\n    // Last ditch: is there a globally installed exiftool in the PATH?\n    const fromPath = await (0, Which_1.which)(\"exiftool\");\n    if (fromPath != null) {\n        return fromPath;\n    }\n    throw new Error(`Failed to find ExifTool installation: set exiftoolPath explicitly.`);\n}\n//# sourceMappingURL=ExiftoolPath.js.map","function tzlookup(Y,W){varfrica/Abidjan\",\"Africa/Accra\",\"Africa/Addis_Ababa\",\"Africa/Algiers\",\"Africa/Asmara\",\"Africa/Bamako\",\"Africa/Bangui\",\"Africa/Banjul\",\"Africa/Bissau\",\"Africa/Blantyre\",\"Africa/Brazzaville\",\"Africa/Bujumbura\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/Conakry\",\"Africa/Dakar\",\"Africa/Dar_es_Salaam\",\"Africa/Djibouti\",\"Africa/Douala\",\"Africa/El_Aaiun\",\"Africa/Freetown\",\"Africa/Gaborone\",\"Africa/Harare\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Kampala\",\"Africa/Khartoum\",\"Africa/Kigali\",\"Africa/Kinshasa\",\"Africa/Lagos\",\"Africa/Libreville\",\"Africa/Lome\",\"Africa/Luanda\",\"Africa/Lubumbashi\",\"Africa/Lusaka\",\"Africa/Malabo\",\"Africa/Maputo\",\"Africa/Maseru\",\"Africa/Mbabane\",\"Africa/Mogadishu\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Niamey\",\"Africa/Nouakchott\",\"Africa/Ouagadougou\",\"Africa/Porto-Novo\",\"Africa/Sao_Tome\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Anguilla\",\"America/Antigua\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Aruba\",\"America/Asuncion\",\"America/Atikokan\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Cayenne\",\"America/Cayman\",\"America/Chicago\",\"America/Chihuahua\",\"America/Ciudad_Juarez\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Dominica\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Fort_Nelson\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Guadeloupe\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/Kralendijk\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Lower_Princes\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Marigot\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Menominee\",\"America/Merida\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Montserrat\",\"America/Nassau\",\"America/New_York\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/New_Salem\",\"America/Nuuk\",\"America/Ojinaga\",\"America/Panama\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Rio_Branco\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Sitka\",\"America/St_Barthelemy\",\"America/St_Johns\",\"America/St_Kitts\",\"America/St_Lucia\",\"America/St_Thomas\",\"America/St_Vincent\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Tijuana\",\"America/Toronto\",\"America/Tortola\",\"America/Vancouver\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/McMurdo\",\"Antarctica/Rothera\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Arctic/Longyearbyen\",\"Asia/Aden\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Bahrain\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Chita\",\"Asia/Colombo\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kathmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Kuwait\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Muscat\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Phnom_Penh\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Riyadh\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ulaanbaatar\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vientiane\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faroe\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/St_Helena\",\"Atlantic/Stanley\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/Perth\",\"Australia/Sydney\",\"Etc/GMT\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/UTC\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Bratislava\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Busingen\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Guernsey\",\"Europe/Helsinki\",\"Europe/Isle_of_Man\",\"Europe/Istanbul\",\"Europe/Jersey\",\"Europe/Kaliningrad\",\"Europe/Kirov\",\"Europe/Kyiv\",\"Europe/Lisbon\",\"Europe/Ljubljana\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Mariehamn\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Podgorica\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/San_Marino\",\"Europe/Sarajevo\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Skopje\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Ulyanovsk\",\"Europe/Vaduz\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zagreb\",\"Europe/Zurich\",\"Indian/Antananarivo\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Comoro\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Mayotte\",\"Indian/Reunion\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Kanton\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Midway\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Saipan\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Wake\",\"Pacific/Wallis\"];if(W=+W,!(-90<=(Y=+Y)&&Y<=90&&-180<=W&&W<=180))throw new RangeError(\"invalid coordinates\");if(90<=Y)return\"Etc/GMT\";for(var V=-1,S=48*(180+W)/360.00000000000006,U=24*(90-Y)/180.00000000000003,Z=0|S,$=0|U,K=96*$+2*Z,K=56*X.charCodeAt(K)+X.charCodeAt(K+1)-1995;K+T.length<3136;)K=56*X.charCodeAt(K=8*(V=V+K+1)+4*($=0|(U=2*(U-$)%2))+2*(Z=0|(S=2*(S-Z)%2))+2304)+X.charCodeAt(K+1)-1995;return T[K+T.length-3136]}\"undefined\"!=typeof module&&(module.exports=tzlookup);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.geoTz = geoTz;\nconst tz_lookup_1 = __importDefault(require(\"@photostructure/tz-lookup\"));\n/**\n * @throws if the given latitude and longitude are invalid.\n */\nfunction geoTz(lat, lon) {\n    return (0, tz_lookup_1.default)(lat, lon);\n}\n//# sourceMappingURL=GeoTz.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VersionTask = void 0;\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nclass VersionTask extends ExifToolTask_1.ExifToolTask {\n    static versionRegex = /^\\d{1,3}\\.\\d{1,3}(?:\\.\\d{1,3})?$/;\n    constructor(options) {\n        super([\"-ver\"], options);\n    }\n    parse(input) {\n        const value = input.trim();\n        if (VersionTask.versionRegex.test(value)) {\n            return value;\n        }\n        else {\n            throw new Error(`Unexpected version ${value}`);\n        }\n    }\n}\nexports.VersionTask = VersionTask;\n//# sourceMappingURL=VersionTask.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultExifToolOptions = exports.ConsoleLogger = void 0;\nexports.defaultAdjustTimeZoneIfDaylightSavings = defaultAdjustTimeZoneIfDaylightSavings;\nconst bc = __importStar(require(\"batch-cluster\"));\nconst node_util_1 = require(\"node:util\");\nconst Boolean_1 = require(\"./Boolean\");\nconst CapturedAtTagNames_1 = require(\"./CapturedAtTagNames\");\nconst DefaultExiftoolArgs_1 = require(\"./DefaultExiftoolArgs\");\nconst DefaultMaxProcs_1 = require(\"./DefaultMaxProcs\");\nconst ExiftoolPath_1 = require(\"./ExiftoolPath\");\nconst GeoTz_1 = require(\"./GeoTz\");\nconst IsWin32_1 = require(\"./IsWin32\");\nconst VersionTask_1 = require(\"./VersionTask\");\nconst _debuglog = (0, node_util_1.debuglog)(\"exiftool-vendored\");\nfunction noop() { }\nexports.ConsoleLogger = {\n    trace: noop,\n    debug: _debuglog,\n    info: _debuglog,\n    warn: console.warn,\n    error: console.error,\n};\nfunction logger() {\n    return (0, node_util_1.debuglog)(\"exiftool-vendored\").enabled ? exports.ConsoleLogger : bc.NoLogger;\n}\n/**\n * Default values for `ExifToolOptions`, except for `processFactory` (which is\n * created by the ExifTool constructor)\n */\nexports.DefaultExifToolOptions = Object.freeze({\n    ...new bc.BatchClusterOptions(),\n    maxProcs: DefaultMaxProcs_1.DefaultMaxProcs,\n    maxTasksPerProcess: 500,\n    spawnTimeoutMillis: 30000,\n    streamFlushMillis: 10,\n    // see https://github.com/photostructure/exiftool-vendored.js/issues/34 :\n    taskTimeoutMillis: 20000,\n    onIdleIntervalMillis: 2000,\n    taskRetries: 1,\n    exiftoolPath: ExiftoolPath_1.exiftoolPath,\n    exiftoolArgs: DefaultExiftoolArgs_1.DefaultExiftoolArgs,\n    exiftoolEnv: {},\n    checkPerl: !(0, IsWin32_1.isWin32)(),\n    pass: \"{ready}\",\n    fail: \"{ready}\",\n    exitCommand: \"-stay_open\\nFalse\\n\",\n    versionCommand: new VersionTask_1.VersionTask().command,\n    healthCheckIntervalMillis: 30000,\n    healthCheckCommand: \"-ver\\n-execute\\n\",\n    backfillTimezones: true,\n    defaultVideosToUTC: true,\n    geoTz: GeoTz_1.geoTz,\n    geolocation: false,\n    ignoreZeroZeroLatLon: true,\n    ignoreMinorErrors: true,\n    imageHashType: false,\n    includeImageDataMD5: undefined,\n    inferTimezoneFromDatestamps: false, // to retain prior behavior\n    inferTimezoneFromDatestampTags: [...CapturedAtTagNames_1.CapturedAtTagNames],\n    inferTimezoneFromTimeStamp: false, // to retain prior behavior\n    logger,\n    numericTags: [\n        \"*Duration*\",\n        \"GPSAltitude\",\n        \"Orientation\",\n        // NOT Rotation! Rotation can be encoded as degrees rotated clockwise, or a\n        // EXIF-Orientation string (!!). If we ask ExifTool for numeric rotations of HEICs,\n        // we get \"3\" (when it means \"Rotate 90 CW\"):\n        // $ exiftool -j -Rotation -Orientation IMG_6947.HEIC\n        // [{\n        //   \"Rotation\": \"Rotate 90 CW\",\n        //   \"Orientation\": \"Rotate 90 CW\"\n        // }]\n        // $ exiftool -j -Rotation# -Orientation# IMG_6947.HEIC\n        // [{\n        //   \"Rotation\": 3,   // < WTH is this? 3 means 180º (!?)\n        //   \"Orientation\": 6 // < expected\n        // }]\n    ],\n    useMWG: false,\n    struct: 1,\n    readArgs: [\"-fast\"],\n    writeArgs: [],\n    adjustTimeZoneIfDaylightSavings: defaultAdjustTimeZoneIfDaylightSavings,\n    preferTimezoneInferenceFromGps: false, // to retain prior behavior\n});\n/**\n * @see https://github.com/photostructure/exiftool-vendored.js/issues/215\n */\nfunction defaultAdjustTimeZoneIfDaylightSavings(t) {\n    // `DaylightSavings` may be \"Yes\" or `true`:\n    return true === (0, Boolean_1.toBoolean)(t.DaylightSavings) &&\n        // Daggum Nikon likes \"FS-Nikon\", \"Nikon\", \"NIKON\", and \"NIKON CORPORATION\"\n        /\\bnikon\\b/i.test(String(t.Make))\n        ? 60\n        : undefined;\n}\n//# sourceMappingURL=DefaultExifToolOptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteAllTagsArgs = void 0;\nexports.DeleteAllTagsArgs = [\"-all=\"];\n//# sourceMappingURL=DeleteAllTagsArgs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleDeprecatedOptions = handleDeprecatedOptions;\nfunction handleDeprecatedOptions(options) {\n    if (options.imageHashType == null && options.includeImageDataMD5 != null) {\n        options.imageHashType = options.includeImageDataMD5 ? \"MD5\" : false;\n    }\n    return options;\n}\n//# sourceMappingURL=ExifToolOptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = isObject;\nexports.keys = keys;\nexports.isFunction = isFunction;\nexports.fromEntries = fromEntries;\nexports.omit = omit;\nexports.keysOf = keysOf;\nfunction isObject(obj) {\n    return typeof obj === \"object\" && obj !== null;\n}\nfunction keys(o) {\n    return o == null\n        ? []\n        : Object.keys(o).filter((ea) => ({}).propertyIsEnumerable.call(o, ea));\n}\nfunction isFunction(obj) {\n    return typeof obj === \"function\";\n}\nfunction fromEntries(arr, obj) {\n    if (arr == null || arr.length === 0)\n        return obj;\n    // don't use Object.create(null), json stringify will break!\n    for (const ea of arr.filter((ea) => ea != null)) {\n        if (ea != null && Array.isArray(ea)) {\n            const [k, v] = ea;\n            // allow NULL fields:\n            if (k != null && v !== undefined) {\n                if (typeof obj !== \"object\")\n                    obj = {};\n                obj[k] = v;\n            }\n        }\n    }\n    return obj;\n}\nfunction omit(t, ...keysToOmit) {\n    if (t == null)\n        return {};\n    const result = { ...t };\n    for (const ea of keysToOmit) {\n        delete result[ea];\n    }\n    return result;\n}\n/**\n * Provides a type-safe exhaustive array of keys for a given interface.\n *\n * Unfortunately, `satisfies (keyof T)[]` doesn't ensure all keys are present,\n * and doesn't guard against duplicates. This function does.\n *\n * @param t - The interface to extract keys from. This is a Record of keys to\n * `true`, which ensures the returned key array is unique.\n */\nfunction keysOf(t) {\n    return Object.keys(t);\n}\n//# sourceMappingURL=Object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pick = pick;\nfunction pick(obj, ...keyNames) {\n    if (obj == null)\n        return obj;\n    const result = {};\n    for (const key of keyNames) {\n        const v = obj[key];\n        if (v !== undefined)\n            result[key] = obj[key];\n    }\n    return result;\n}\n//# sourceMappingURL=Pick.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorsAndWarnings = errorsAndWarnings;\nconst Array_1 = require(\"./Array\");\nconst String_1 = require(\"./String\");\nfunction errorsAndWarnings(task, t) {\n    return {\n        errors: (0, Array_1.uniq)((0, String_1.compactBlanks)([t?.Error, ...task.errors])),\n        warnings: (0, Array_1.uniq)((0, String_1.compactBlanks)([t?.Warning, ...task.warnings])),\n    };\n}\n//# sourceMappingURL=ErrorsAndWarnings.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadRawTask = void 0;\nconst batch_cluster_1 = require(\"batch-cluster\");\nconst _path = __importStar(require(\"node:path\"));\nconst ErrorsAndWarnings_1 = require(\"./ErrorsAndWarnings\");\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nconst FilenameCharsetArgs_1 = require(\"./FilenameCharsetArgs\");\nclass ReadRawTask extends ExifToolTask_1.ExifToolTask {\n    sourceFile;\n    args;\n    static for(filename, exiftoolArgs = [], options) {\n        const args = [...FilenameCharsetArgs_1.Utf8FilenameCharsetArgs, ...exiftoolArgs];\n        if (!args.includes(\"-json\"))\n            args.push(\"-json\");\n        const sourceFile = _path.resolve(filename);\n        args.push(sourceFile);\n        return new ReadRawTask(sourceFile, args, options);\n    }\n    constructor(sourceFile, args, options) {\n        super(args, options);\n        this.sourceFile = sourceFile;\n        this.args = args;\n    }\n    toString() {\n        return \"ReadRawTask\" + this.sourceFile + \")\";\n    }\n    parse(data, err) {\n        try {\n            const tags = JSON.parse(data)[0];\n            const { errors, warnings } = (0, ErrorsAndWarnings_1.errorsAndWarnings)(this, tags);\n            tags.errors = errors;\n            tags.warnings = warnings;\n            return tags;\n        }\n        catch (jsonError) {\n            (0, batch_cluster_1.logger)().error(\"ExifTool.ReadRawTask(): Invalid JSON\", { data });\n            throw err ?? jsonError;\n        }\n    }\n}\nexports.ReadRawTask = ReadRawTask;\n//# sourceMappingURL=ReadRawTask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryField = void 0;\nconst Number_1 = require(\"./Number\");\n// \"(Binary data 2506078 bytes, use -b option to extract)\"\nconst BinaryFieldRE = \n// 1000000000 bytes is 1 GB. The largest binary field I've seen is ~5 MB (7\n// chars): 10 chars is absurdly large, and is just to avoid the\n// `js/polynomial-redos` eslint rule.\n/Binary(?: data)? (\\d{1,10}) bytes/i;\nclass BinaryField {\n    bytes;\n    rawValue;\n    constructor(bytes, rawValue) {\n        this.bytes = bytes;\n        this.rawValue = rawValue;\n    }\n    toJSON() {\n        return {\n            _ctor: \"BinaryField\",\n            bytes: this.bytes,\n            rawValue: this.rawValue,\n        };\n    }\n    static fromJSON(json) {\n        return new BinaryField(json.bytes, json.rawValue);\n    }\n    static fromRawValue(rawValue) {\n        const m = rawValue.match(BinaryFieldRE);\n        if (m != null) {\n            const bytes = (0, Number_1.toInt)(m[1]);\n            if (bytes != null) {\n                return new BinaryField(bytes, rawValue);\n            }\n        }\n        return;\n    }\n}\nexports.BinaryField = BinaryField;\n//# sourceMappingURL=BinaryField.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nclass InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nclass InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nclass InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nclass ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nclass InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nclass InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nclass ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n\n/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\nconst DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n\n};\nconst DATE_MED = {\n  year: n,\n  month: s,\n  day: n\n};\nconst DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s\n};\nconst DATE_FULL = {\n  year: n,\n  month: l,\n  day: n\n};\nconst DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l\n};\nconst TIME_SIMPLE = {\n  hour: n,\n  minute: n\n};\nconst TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n\n};\nconst TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s\n};\nconst TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l\n};\nconst TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hourCycle: \"h23\"\n};\nconst TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\"\n};\nconst TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: s\n};\nconst TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: l\n};\nconst DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n\n};\nconst DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n\n};\nconst DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n\n};\nconst DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n\n};\nconst DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n\n};\nconst DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s\n};\nconst DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s\n};\nconst DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l\n};\nconst DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l\n};\n\n/**\n * @interface\n */\nclass Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The IANA name of this zone.\n   * Defaults to `name` if not overwritten by a subclass.\n   * @abstract\n   * @type {string}\n   */\n  get ianaName() {\n    return this.name;\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get isUniversal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n\nlet singleton$1 = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nclass SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton$1 === null) {\n      singleton$1 = new SystemZone();\n    }\n    return singleton$1;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, {\n    format,\n    locale\n  }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      era: \"short\"\n    });\n  }\n  return dtfCache[zone];\n}\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  era: 3,\n  hour: 4,\n  minute: 5,\n  second: 6\n};\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+) (AD|BC),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fadOrBc, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fadOrBc, fHour, fMinute, fSecond];\n}\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date);\n  const filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const {\n      type,\n      value\n    } = formatted[i];\n    const pos = typeToPos[type];\n    if (type === \"era\") {\n      filled[pos] = value;\n    } else if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nclass IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @deprecated For backward compatibility, this forwards to isValidZone, better use `isValidZone()` directly instead.\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return this.isValidZone(s);\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    if (!zone) {\n      return false;\n    }\n    try {\n      new Intl.DateTimeFormat(\"en-US\", {\n        timeZone: zone\n      }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /**\n   * The type of zone. `iana` for all instances of `IANAZone`.\n   * @override\n   * @type {string}\n   */\n  get type() {\n    return \"iana\";\n  }\n\n  /**\n   * The name of this zone (i.e. the IANA zone name).\n   * @override\n   * @type {string}\n   */\n  get name() {\n    return this.zoneName;\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year:\n   * Always returns false for all IANA zones.\n   * @override\n   * @type {boolean}\n   */\n  get isUniversal() {\n    return false;\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @override\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, {\n    format,\n    locale\n  }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @override\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @override\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    const date = new Date(ts);\n    if (isNaN(date)) return NaN;\n    const dtf = makeDTF(this.name);\n    let [year, month, day, adOrBc, hour, minute, second] = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date);\n    if (adOrBc === \"BC\") {\n      year = -Math.abs(year) + 1;\n    }\n\n    // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n    const adjustedHour = hour === 24 ? 0 : hour;\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0\n    });\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @override\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @override\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.valid;\n  }\n}\n\n// todo - remap caching\n\nlet intlLFCache = {};\nfunction getCachedLF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const {\n    base,\n    ...cacheKeyOpts\n  } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\nlet weekInfoCache = {};\nfunction getCachedWeekInfo(locString) {\n  let data = weekInfoCache[locString];\n  if (!data) {\n    const locale = new Intl.Locale(locString);\n    // browsers currently implement this as a property, but spec says it should be a getter function\n    data = \"getWeekInfo\" in locale ? locale.getWeekInfo() : locale.weekInfo;\n    weekInfoCache[locString] = data;\n  }\n  return data;\n}\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  // private subtags and unicode subtags have ordering requirements,\n  // and we're not properly parsing this, so just strip out the\n  // private ones if they exist.\n  const xIndex = localeStr.indexOf(\"-x-\");\n  if (xIndex !== -1) {\n    localeStr = localeStr.substring(0, xIndex);\n  }\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    let selectedStr;\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n      selectedStr = localeStr;\n    } catch (e) {\n      const smaller = localeStr.substring(0, uIndex);\n      options = getCachedDTF(smaller).resolvedOptions();\n      selectedStr = smaller;\n    }\n    const {\n      numberingSystem,\n      calendar\n    } = options;\n    return [selectedStr, numberingSystem, calendar];\n  }\n}\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    if (!localeStr.includes(\"-u-\")) {\n      localeStr += \"-u\";\n    }\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2009, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\nfunction listStuff(loc, length, englishFn, intlFn) {\n  const mode = loc.listingMode();\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return loc.numberingSystem === \"latn\" || !loc.locale || loc.locale.startsWith(\"en\") || new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\";\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n    const {\n      padTo,\n      floor,\n      ...otherOpts\n    } = opts;\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      const intlOpts = {\n        useGrouping: false,\n        ...opts\n      };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n    this.originalZone = undefined;\n    let z = undefined;\n    if (this.opts.timeZone) {\n      // Don't apply any workarounds if a timeZone is explicitly provided in opts\n      this.dt = dt;\n    } else if (dt.zone.type === \"fixed\") {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata so\n        // we manually apply the offset and substitute the zone as needed.\n        z = \"UTC\";\n        this.dt = dt.offset === 0 ? dt : dt.setZone(\"UTC\").plus({\n          minutes: dt.offset\n        });\n        this.originalZone = dt.zone;\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else if (dt.zone.type === \"iana\") {\n      this.dt = dt;\n      z = dt.zone.name;\n    } else {\n      // Custom zones can have any offset / offsetName so we just manually\n      // apply the offset and substitute the zone as needed.\n      z = \"UTC\";\n      this.dt = dt.setZone(\"UTC\").plus({\n        minutes: dt.offset\n      });\n      this.originalZone = dt.zone;\n    }\n    const intlOpts = {\n      ...this.opts\n    };\n    intlOpts.timeZone = intlOpts.timeZone || z;\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n  format() {\n    if (this.originalZone) {\n      // If we have to substitute in the actual zone name, we have to use\n      // formatToParts so that the timezone can be replaced.\n      return this.formatToParts().map(({\n        value\n      }) => value).join(\"\");\n    }\n    return this.dtf.format(this.dt.toJSDate());\n  }\n  formatToParts() {\n    const parts = this.dtf.formatToParts(this.dt.toJSDate());\n    if (this.originalZone) {\n      return parts.map(part => {\n        if (part.type === \"timeZoneName\") {\n          const offsetName = this.originalZone.offsetName(this.dt.ts, {\n            locale: this.dt.locale,\n            format: this.opts.timeZoneName\n          });\n          return {\n            ...part,\n            value: offsetName\n          };\n        } else {\n          return part;\n        }\n      });\n    }\n    return parts;\n  }\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = {\n      style: \"long\",\n      ...opts\n    };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\nconst fallbackWeekSettings = {\n  firstDay: 1,\n  minimalDays: 4,\n  weekend: [6, 7]\n};\n\n/**\n * @private\n */\n\nclass Locale {\n  static fromOpts(opts) {\n    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.weekSettings, opts.defaultToEN);\n  }\n  static create(locale, numberingSystem, outputCalendar, weekSettings, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human-readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    const weekSettingsR = validateWeekSettings(weekSettings) || Settings.defaultWeekSettings;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, weekSettingsR, specifiedLocale);\n  }\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n  static fromObject({\n    locale,\n    numberingSystem,\n    outputCalendar,\n    weekSettings\n  } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar, weekSettings);\n  }\n  constructor(locale, numbering, outputCalendar, weekSettings, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.weekSettings = weekSettings;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n    this.weekdaysCache = {\n      format: {},\n      standalone: {}\n    };\n    this.monthsCache = {\n      format: {},\n      standalone: {}\n    };\n    this.meridiemCache = null;\n    this.eraCache = {};\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n    return this.fastNumbersCached;\n  }\n  listingMode() {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === \"latn\") && (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, validateWeekSettings(alts.weekSettings) || this.weekSettings, alts.defaultToEN || false);\n    }\n  }\n  redefaultToEN(alts = {}) {\n    return this.clone({\n      ...alts,\n      defaultToEN: true\n    });\n  }\n  redefaultToSystem(alts = {}) {\n    return this.clone({\n      ...alts,\n      defaultToEN: false\n    });\n  }\n  months(length, format = false) {\n    return listStuff(this, length, months, () => {\n      const intl = format ? {\n          month: length,\n          day: \"numeric\"\n        } : {\n          month: length\n        },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths(dt => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n  weekdays(length, format = false) {\n    return listStuff(this, length, weekdays, () => {\n      const intl = format ? {\n          weekday: length,\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\"\n        } : {\n          weekday: length\n        },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays(dt => this.extract(dt, intl, \"weekday\"));\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n  meridiems() {\n    return listStuff(this, undefined, () => meridiems, () => {\n      // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n      // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n      if (!this.meridiemCache) {\n        const intl = {\n          hour: \"numeric\",\n          hourCycle: \"h12\"\n        };\n        this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(dt => this.extract(dt, intl, \"dayperiod\"));\n      }\n      return this.meridiemCache;\n    });\n  }\n  eras(length) {\n    return listStuff(this, length, eras, () => {\n      const intl = {\n        era: length\n      };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(dt => this.extract(dt, intl, \"era\"));\n      }\n      return this.eraCache[length];\n    });\n  }\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find(m => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n  listFormatter(opts = {}) {\n    return getCachedLF(this.intl, opts);\n  }\n  isEnglish() {\n    return this.locale === \"en\" || this.locale.toLowerCase() === \"en-us\" || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\");\n  }\n  getWeekSettings() {\n    if (this.weekSettings) {\n      return this.weekSettings;\n    } else if (!hasLocaleWeekInfo()) {\n      return fallbackWeekSettings;\n    } else {\n      return getCachedWeekInfo(this.locale);\n    }\n  }\n  getStartOfWeek() {\n    return this.getWeekSettings().firstDay;\n  }\n  getMinDaysInFirstWeek() {\n    return this.getWeekSettings().minimalDays;\n  }\n  getWeekendDays() {\n    return this.getWeekSettings().weekend;\n  }\n  equals(other) {\n    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;\n  }\n  toString() {\n    return `Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`;\n  }\n}\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nclass FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /**\n   * The type of zone. `fixed` for all instances of `FixedOffsetZone`.\n   * @override\n   * @type {string}\n   */\n  get type() {\n    return \"fixed\";\n  }\n\n  /**\n   * The name of this zone.\n   * All fixed zones' names always start with \"UTC\" (plus optional offset)\n   * @override\n   * @type {string}\n   */\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  /**\n   * The IANA name of this zone, i.e. `Etc/UTC` or `Etc/GMT+/-nn`\n   *\n   * @override\n   * @type {string}\n   */\n  get ianaName() {\n    if (this.fixed === 0) {\n      return \"Etc/UTC\";\n    } else {\n      return `Etc/GMT${formatOffset(-this.fixed, \"narrow\")}`;\n    }\n  }\n\n  /**\n   * Returns the offset's common name at the specified timestamp.\n   *\n   * For fixed offset zones this equals to the zone name.\n   * @override\n   */\n  offsetName() {\n    return this.name;\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @override\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year:\n   * Always returns true for all fixed offset zones.\n   * @override\n   * @type {boolean}\n   */\n  get isUniversal() {\n    return true;\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   *\n   * For fixed offset zones, this is constant and does not depend on a timestamp.\n   * @override\n   * @return {number}\n   */\n  offset() {\n    return this.fixed;\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone (i.e. also fixed and same offset)\n   * @override\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /**\n   * Return whether this Zone is valid:\n   * All fixed offset zones are valid.\n   * @override\n   * @type {boolean}\n   */\n  get isValid() {\n    return true;\n  }\n}\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nclass InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n\n/**\n * @private\n */\nfunction normalizeZone(input, defaultZone) {\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"default\") return defaultZone;else if (lowered === \"local\" || lowered === \"system\") return SystemZone.instance;else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;else return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && \"offset\" in input && typeof input.offset === \"function\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n\nconst numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[〇|一|二|三|四|五|六|七|八|九]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\"\n};\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881]\n};\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\nfunction parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\n// cache of {numberingSystem: {append: regex}}\nlet digitRegexCache = {};\nfunction resetDigitRegexCache() {\n  digitRegexCache = {};\n}\nfunction digitRegex({\n  numberingSystem\n}, append = \"\") {\n  const ns = numberingSystem || \"latn\";\n  if (!digitRegexCache[ns]) {\n    digitRegexCache[ns] = {};\n  }\n  if (!digitRegexCache[ns][append]) {\n    digitRegexCache[ns][append] = new RegExp(`${numberingSystems[ns]}${append}`);\n  }\n  return digitRegexCache[ns][append];\n}\n\nlet now = () => Date.now(),\n  defaultZone = \"system\",\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  twoDigitCutoffYear = 60,\n  throwOnInvalid,\n  defaultWeekSettings = null;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nclass Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * Use the value \"system\" to reset this value to the system's time zone.\n   * @type {string}\n   */\n  static set defaultZone(zone) {\n    defaultZone = zone;\n  }\n\n  /**\n   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.\n   * The default value is the system's time zone (the one set on the machine that runs this code).\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return normalizeZone(defaultZone, SystemZone.instance);\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * @typedef {Object} WeekSettings\n   * @property {number} firstDay\n   * @property {number} minimalDays\n   * @property {number[]} weekend\n   */\n\n  /**\n   * @return {WeekSettings|null}\n   */\n  static get defaultWeekSettings() {\n    return defaultWeekSettings;\n  }\n\n  /**\n   * Allows overriding the default locale week settings, i.e. the start of the week, the weekend and\n   * how many days are required in the first week of a year.\n   * Does not affect existing instances.\n   *\n   * @param {WeekSettings|null} weekSettings\n   */\n  static set defaultWeekSettings(weekSettings) {\n    defaultWeekSettings = validateWeekSettings(weekSettings);\n  }\n\n  /**\n   * Get the cutoff year for whether a 2-digit year string is interpreted in the current or previous century. Numbers higher than the cutoff will be considered to mean 19xx and numbers lower or equal to the cutoff will be considered 20xx.\n   * @type {number}\n   */\n  static get twoDigitCutoffYear() {\n    return twoDigitCutoffYear;\n  }\n\n  /**\n   * Set the cutoff year for whether a 2-digit year string is interpreted in the current or previous century. Numbers higher than the cutoff will be considered to mean 19xx and numbers lower or equal to the cutoff will be considered 20xx.\n   * @type {number}\n   * @example Settings.twoDigitCutoffYear = 0 // all 'yy' are interpreted as 20th century\n   * @example Settings.twoDigitCutoffYear = 99 // all 'yy' are interpreted as 21st century\n   * @example Settings.twoDigitCutoffYear = 50 // '49' -> 2049; '50' -> 1950\n   * @example Settings.twoDigitCutoffYear = 1950 // interpreted as 50\n   * @example Settings.twoDigitCutoffYear = 2050 // ALSO interpreted as 50\n   */\n  static set twoDigitCutoffYear(cutoffYear) {\n    twoDigitCutoffYear = cutoffYear % 100;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n    DateTime.resetCache();\n    resetDigitRegexCache();\n  }\n}\n\nclass Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\"unit out of range\", `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`);\n}\nfunction dayOfWeek(year, month, day) {\n  const d = new Date(Date.UTC(year, month - 1, day));\n  if (year < 100 && year >= 0) {\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n  const js = d.getUTCDay();\n  return js === 0 ? 7 : js;\n}\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex(i => i < ordinal),\n    day = ordinal - table[month0];\n  return {\n    month: month0 + 1,\n    day\n  };\n}\nfunction isoWeekdayToLocal(isoWeekday, startOfWeek) {\n  return (isoWeekday - startOfWeek + 7) % 7 + 1;\n}\n\n/**\n * @private\n */\n\nfunction gregorianToWeek(gregObj, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const {\n      year,\n      month,\n      day\n    } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = isoWeekdayToLocal(dayOfWeek(year, month, day), startOfWeek);\n  let weekNumber = Math.floor((ordinal - weekday + 14 - minDaysInFirstWeek) / 7),\n    weekYear;\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear, minDaysInFirstWeek, startOfWeek);\n  } else if (weekNumber > weeksInWeekYear(year, minDaysInFirstWeek, startOfWeek)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n  return {\n    weekYear,\n    weekNumber,\n    weekday,\n    ...timeObject(gregObj)\n  };\n}\nfunction weekToGregorian(weekData, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const {\n      weekYear,\n      weekNumber,\n      weekday\n    } = weekData,\n    weekdayOfJan4 = isoWeekdayToLocal(dayOfWeek(weekYear, 1, minDaysInFirstWeek), startOfWeek),\n    yearInDays = daysInYear(weekYear);\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 7 + minDaysInFirstWeek,\n    year;\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n  const {\n    month,\n    day\n  } = uncomputeOrdinal(year, ordinal);\n  return {\n    year,\n    month,\n    day,\n    ...timeObject(weekData)\n  };\n}\nfunction gregorianToOrdinal(gregData) {\n  const {\n    year,\n    month,\n    day\n  } = gregData;\n  const ordinal = computeOrdinal(year, month, day);\n  return {\n    year,\n    ordinal,\n    ...timeObject(gregData)\n  };\n}\nfunction ordinalToGregorian(ordinalData) {\n  const {\n    year,\n    ordinal\n  } = ordinalData;\n  const {\n    month,\n    day\n  } = uncomputeOrdinal(year, ordinal);\n  return {\n    year,\n    month,\n    day,\n    ...timeObject(ordinalData)\n  };\n}\n\n/**\n * Check if local week units like localWeekday are used in obj.\n * If so, validates that they are not mixed with ISO week units and then copies them to the normal week unit properties.\n * Modifies obj in-place!\n * @param obj the object values\n */\nfunction usesLocalWeekValues(obj, loc) {\n  const hasLocaleWeekData = !isUndefined(obj.localWeekday) || !isUndefined(obj.localWeekNumber) || !isUndefined(obj.localWeekYear);\n  if (hasLocaleWeekData) {\n    const hasIsoWeekData = !isUndefined(obj.weekday) || !isUndefined(obj.weekNumber) || !isUndefined(obj.weekYear);\n    if (hasIsoWeekData) {\n      throw new ConflictingSpecificationError(\"Cannot mix locale-based week fields with ISO-based week fields\");\n    }\n    if (!isUndefined(obj.localWeekday)) obj.weekday = obj.localWeekday;\n    if (!isUndefined(obj.localWeekNumber)) obj.weekNumber = obj.localWeekNumber;\n    if (!isUndefined(obj.localWeekYear)) obj.weekYear = obj.localWeekYear;\n    delete obj.localWeekday;\n    delete obj.localWeekNumber;\n    delete obj.localWeekYear;\n    return {\n      minDaysInFirstWeek: loc.getMinDaysInFirstWeek(),\n      startOfWeek: loc.getStartOfWeek()\n    };\n  } else {\n    return {\n      minDaysInFirstWeek: 4,\n      startOfWeek: 1\n    };\n  }\n}\nfunction hasInvalidWeekData(obj, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear, minDaysInFirstWeek, startOfWeek)),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.weekNumber);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\nfunction hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\nfunction hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\nfunction hasInvalidTimeData(obj) {\n  const {\n    hour,\n    minute,\n    second,\n    millisecond\n  } = obj;\n  const validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0,\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n\n/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\n/**\n * @private\n */\n\n// TYPES\n\nfunction isUndefined(o) {\n  return typeof o === \"undefined\";\n}\nfunction isNumber(o) {\n  return typeof o === \"number\";\n}\nfunction isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\nfunction isString(o) {\n  return typeof o === \"string\";\n}\nfunction isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nfunction hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\nfunction hasLocaleWeekInfo() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.Locale && (\"weekInfo\" in Intl.Locale.prototype || \"getWeekInfo\" in Intl.Locale.prototype);\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nfunction maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\nfunction bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\nfunction pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nfunction validateWeekSettings(settings) {\n  if (settings == null) {\n    return null;\n  } else if (typeof settings !== \"object\") {\n    throw new InvalidArgumentError(\"Week settings must be an object\");\n  } else {\n    if (!integerBetween(settings.firstDay, 1, 7) || !integerBetween(settings.minimalDays, 1, 7) || !Array.isArray(settings.weekend) || settings.weekend.some(v => !integerBetween(v, 1, 7))) {\n      throw new InvalidArgumentError(\"Invalid week settings\");\n    }\n    return {\n      firstDay: settings.firstDay,\n      minimalDays: settings.minimalDays,\n      weekend: Array.from(settings.weekend)\n    };\n  }\n}\n\n// NUMBERS AND STRINGS\n\nfunction integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nfunction floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\nfunction padStart(input, n = 2) {\n  const isNeg = input < 0;\n  let padded;\n  if (isNeg) {\n    padded = \"-\" + (\"\" + -input).padStart(n, \"0\");\n  } else {\n    padded = (\"\" + input).padStart(n, \"0\");\n  }\n  return padded;\n}\nfunction parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\nfunction parseFloating(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseFloat(string);\n  }\n}\nfunction parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\nfunction roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nfunction isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\nfunction daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// convert a calendar object to a local timestamp (epoch, but with the offset baked in)\nfunction objToLocalTS(obj) {\n  let d = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond);\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    // set the month and day again, this is necessary because year 2000 is a leap year, but year 100 is not\n    // so if obj.year is in 99, but obj.day makes it roll over into year 100,\n    // the calculations done by Date.UTC are using year 2000 - which is incorrect\n    d.setUTCFullYear(obj.year, obj.month - 1, obj.day);\n  }\n  return +d;\n}\n\n// adapted from moment.js: https://github.com/moment/moment/blob/000ac1800e620f770f4eb31b5ae908f6167b0ab2/src/lib/units/week-calendar-utils.js\nfunction firstWeekOffset(year, minDaysInFirstWeek, startOfWeek) {\n  const fwdlw = isoWeekdayToLocal(dayOfWeek(year, 1, minDaysInFirstWeek), startOfWeek);\n  return -fwdlw + minDaysInFirstWeek - 1;\n}\nfunction weeksInWeekYear(weekYear, minDaysInFirstWeek = 4, startOfWeek = 1) {\n  const weekOffset = firstWeekOffset(weekYear, minDaysInFirstWeek, startOfWeek);\n  const weekOffsetNext = firstWeekOffset(weekYear + 1, minDaysInFirstWeek, startOfWeek);\n  return (daysInYear(weekYear) - weekOffset + weekOffsetNext) / 7;\n}\nfunction untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > Settings.twoDigitCutoffYear ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nfunction parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hourCycle: \"h23\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n  const modified = {\n    timeZoneName: offsetFormat,\n    ...intlOpts\n  };\n  const parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find(m => m.type.toLowerCase() === \"timezonename\");\n  return parsed ? parsed.value : null;\n}\n\n// signedOffset('-5', '30') -> -330\nfunction signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nfunction asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue)) throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\nfunction normalizeObject(obj, normalizer) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\n/**\n * Returns the offset's value as a string\n * @param {number} ts - Epoch milliseconds for which to get the offset\n * @param {string} format - What style of offset to return.\n *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n * @return {string}\n */\nfunction formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\nfunction timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n\n/**\n * @private\n */\n\nconst monthsLong = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst monthsShort = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\nfunction months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\nconst weekdaysLong = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\nconst weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\nconst weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\nfunction weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\nconst meridiems = [\"AM\", \"PM\"];\nconst erasLong = [\"Before Christ\", \"Anno Domini\"];\nconst erasShort = [\"BC\", \"AD\"];\nconst erasNarrow = [\"B\", \"A\"];\nfunction eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\nfunction meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\nfunction weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\nfunction monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\nfunction eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\nfunction formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"]\n  };\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\nconst macroTokenToFormatOpts = {\n  D: DATE_SHORT,\n  DD: DATE_MED,\n  DDD: DATE_FULL,\n  DDDD: DATE_HUGE,\n  t: TIME_SIMPLE,\n  tt: TIME_WITH_SECONDS,\n  ttt: TIME_WITH_SHORT_OFFSET,\n  tttt: TIME_WITH_LONG_OFFSET,\n  T: TIME_24_SIMPLE,\n  TT: TIME_24_WITH_SECONDS,\n  TTT: TIME_24_WITH_SHORT_OFFSET,\n  TTTT: TIME_24_WITH_LONG_OFFSET,\n  f: DATETIME_SHORT,\n  ff: DATETIME_MED,\n  fff: DATETIME_FULL,\n  ffff: DATETIME_HUGE,\n  F: DATETIME_SHORT_WITH_SECONDS,\n  FF: DATETIME_MED_WITH_SECONDS,\n  FFF: DATETIME_FULL_WITH_SECONDS,\n  FFFF: DATETIME_HUGE_WITH_SECONDS\n};\n\n/**\n * @private\n */\n\nclass Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n  static parseFormat(fmt) {\n    // white-space is always considered a literal in user-provided formats\n    // the \" \" token has a special meaning (see unitForToken)\n\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({\n            literal: bracketed || /^\\s+$/.test(currentFull),\n            val: currentFull\n          });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({\n            literal: /^\\s+$/.test(currentFull),\n            val: currentFull\n          });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n    if (currentFull.length > 0) {\n      splits.push({\n        literal: bracketed || /^\\s+$/.test(currentFull),\n        val: currentFull\n      });\n    }\n    return splits;\n  }\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, {\n      ...this.opts,\n      ...opts\n    });\n    return df.format();\n  }\n  dtFormatter(dt, opts = {}) {\n    return this.loc.dtFormatter(dt, {\n      ...this.opts,\n      ...opts\n    });\n  }\n  formatDateTime(dt, opts) {\n    return this.dtFormatter(dt, opts).format();\n  }\n  formatDateTimeParts(dt, opts) {\n    return this.dtFormatter(dt, opts).formatToParts();\n  }\n  formatInterval(interval, opts) {\n    const df = this.dtFormatter(interval.start, opts);\n    return df.dtf.formatRange(interval.start.toJSDate(), interval.end.toJSDate());\n  }\n  resolvedOptions(dt, opts) {\n    return this.dtFormatter(dt, opts).resolvedOptions();\n  }\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n    const opts = {\n      ...this.opts\n    };\n    if (p > 0) {\n      opts.padTo = p;\n    }\n    return this.loc.numberFormatter(opts).format(n);\n  }\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = opts => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () => knownEnglish ? meridiemForDateTime(dt) : string({\n        hour: \"numeric\",\n        hourCycle: \"h12\"\n      }, \"dayperiod\"),\n      month = (length, standalone) => knownEnglish ? monthForDateTime(dt, length) : string(standalone ? {\n        month: length\n      } : {\n        month: length,\n        day: \"numeric\"\n      }, \"month\"),\n      weekday = (length, standalone) => knownEnglish ? weekdayForDateTime(dt, length) : string(standalone ? {\n        weekday: length\n      } : {\n        weekday: length,\n        month: \"long\",\n        day: \"numeric\"\n      }, \"weekday\"),\n      maybeMacro = token => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = length => knownEnglish ? eraForDateTime(dt, length) : string({\n        era: length\n      }, \"era\"),\n      tokenToString = token => {\n        // Where possible: https://cldr.unicode.org/translation/date-time/date-time-symbols\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({\n              format: \"narrow\",\n              allowZ: this.opts.allowZ\n            });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({\n              format: \"short\",\n              allowZ: this.opts.allowZ\n            });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({\n              format: \"techie\",\n              allowZ: this.opts.allowZ\n            });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, {\n              format: \"short\",\n              locale: this.loc.locale\n            });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, {\n              format: \"long\",\n              locale: this.loc.locale\n            });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({\n              day: \"numeric\"\n            }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({\n              day: \"2-digit\"\n            }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter ? string({\n              month: \"numeric\",\n              day: \"numeric\"\n            }, \"month\") : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter ? string({\n              month: \"2-digit\",\n              day: \"numeric\"\n            }, \"month\") : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter ? string({\n              month: \"numeric\"\n            }, \"month\") : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter ? string({\n              month: \"2-digit\"\n            }, \"month\") : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter ? string({\n              year: \"2-digit\"\n            }, \"year\") : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"n\":\n            return this.num(dt.localWeekNumber);\n          case \"nn\":\n            return this.num(dt.localWeekNumber, 2);\n          case \"ii\":\n            return this.num(dt.localWeekYear.toString().slice(-2), 2);\n          case \"iiii\":\n            return this.num(dt.localWeekYear, 4);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = token => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"w\":\n            return \"week\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = lildur => token => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce((found, {\n        literal,\n        val\n      }) => literal ? found : found.concat(val), []),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter(t => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nconst ianaRegex = /[A-Za-z_+-]{1,256}(?::?\\/[A-Za-z0-9_+-]{1,256}(?:\\/[A-Za-z0-9_+-]{1,256})?)?/;\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\nfunction combineExtractors(...extractors) {\n  return m => extractors.reduce(([mergedVals, mergedZone, cursor], ex) => {\n    const [val, zone, next] = ex(m, cursor);\n    return [{\n      ...mergedVals,\n      ...val\n    }, zone || mergedZone, next];\n  }, [{}, null, 1]).slice(0, 2);\n}\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/;\nconst isoExtendedZone = `(?:${offsetRegex.source}?(?:\\\\[(${ianaRegex.source})\\\\])?)?`;\nconst isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/;\nconst isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);\nconst isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`);\nconst isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/;\nconst isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/;\nconst isoOrdinalRegex = /(\\d{4})-?(\\d{3})/;\nconst extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\");\nconst extractISOOrdinalData = simpleParse(\"year\", \"ordinal\");\nconst sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/; // dumbed-down version of the ISO one\nconst sqlTimeRegex = RegExp(`${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`);\nconst sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1)\n  };\n  return [item, null, cursor + 3];\n}\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3])\n  };\n  return [item, null, cursor + 4];\n}\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration = /^-?P(?:(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)Y)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)W)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)D)?(?:T(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)H)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,20}))?S)?)?)$/;\nfunction extractISODuration(match) {\n  const [s, yearStr, monthStr, weekStr, dayStr, hourStr, minuteStr, secondStr, millisecondsStr] = match;\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n  const maybeNegate = (num, force = false) => num !== undefined && (force || num && hasNegativePrefix) ? -num : num;\n  return [{\n    years: maybeNegate(parseFloating(yearStr)),\n    months: maybeNegate(parseFloating(monthStr)),\n    weeks: maybeNegate(parseFloating(weekStr)),\n    days: maybeNegate(parseFloating(dayStr)),\n    hours: maybeNegate(parseFloating(hourStr)),\n    minutes: maybeNegate(parseFloating(minuteStr)),\n    seconds: maybeNegate(parseFloating(secondStr), secondStr === \"-0\"),\n    milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)\n  }];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr)\n  };\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\nfunction extractRFC2822(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr, obsOffset, milOffset, offHourStr, offMinuteStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n  return [result, new FixedOffsetZone(offset)];\n}\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s.replace(/\\([^()]*\\)|[\\n\\t]/g, \" \").replace(/(\\s\\s+)/g, \" \").trim();\n}\n\n// http date\n\nconst rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 = /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\nconst extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);\nconst extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset, extractIANAZone);\nconst extractISOOrdinalDateAndTime = combineExtractors(extractISOOrdinalData, extractISOTime, extractISOOffset, extractIANAZone);\nconst extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);\n\n/*\n * @private\n */\n\nfunction parseISODate(s) {\n  return parse(s, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);\n}\nfunction parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\nfunction parseHTTPDate(s) {\n  return parse(s, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);\n}\nfunction parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\nfunction parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);\nfunction parseSQL(s) {\n  return parse(s, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);\n}\n\nconst INVALID$2 = \"Invalid Duration\";\n\n// unit conversion constants\nconst lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000\n    },\n    hours: {\n      minutes: 60,\n      seconds: 60 * 60,\n      milliseconds: 60 * 60 * 1000\n    },\n    minutes: {\n      seconds: 60,\n      milliseconds: 60 * 1000\n    },\n    seconds: {\n      milliseconds: 1000\n    }\n  },\n  casualMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000\n    },\n    ...lowOrderMatrix\n  },\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: daysInYearAccurate * 24 / 4,\n      minutes: daysInYearAccurate * 24 * 60 / 4,\n      seconds: daysInYearAccurate * 24 * 60 * 60 / 4,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000 / 4\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000\n    },\n    ...lowOrderMatrix\n  };\n\n// units ordered by size\nconst orderedUnits$1 = [\"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\"];\nconst reverseUnits = orderedUnits$1.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone$1(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : {\n      ...dur.values,\n      ...(alts.values || {})\n    },\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,\n    matrix: alts.matrix || dur.matrix\n  };\n  return new Duration(conf);\n}\nfunction durationToMillis(matrix, vals) {\n  var _vals$milliseconds;\n  let sum = (_vals$milliseconds = vals.milliseconds) != null ? _vals$milliseconds : 0;\n  for (const unit of reverseUnits.slice(1)) {\n    if (vals[unit]) {\n      sum += vals[unit] * matrix[unit][\"milliseconds\"];\n    }\n  }\n  return sum;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  // the logic below assumes the overall value of the duration is positive\n  // if this is not the case, factor is used to make it so\n  const factor = durationToMillis(matrix, vals) < 0 ? -1 : 1;\n  orderedUnits$1.reduceRight((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        const previousVal = vals[previous] * factor;\n        const conv = matrix[current][previous];\n\n        // if (previousVal < 0):\n        // lower order unit is negative (e.g. { years: 2, days: -2 })\n        // normalize this by reducing the higher order unit by the appropriate amount\n        // and increasing the lower order unit\n        // this can never make the higher order unit negative, because this function only operates\n        // on positive durations, so the amount of time represented by the lower order unit cannot\n        // be larger than the higher order unit\n        // else:\n        // lower order unit is positive (e.g. { years: 2, days: 450 } or { years: -2, days: 450 })\n        // in this case we attempt to convert as much as possible from the lower order unit into\n        // the higher order one\n        //\n        // Math.floor takes care of both of these cases, rounding away from 0\n        // if previousVal < 0 it makes the absolute value larger\n        // if previousVal >= it makes the absolute value smaller\n        const rollUp = Math.floor(previousVal / conv);\n        vals[current] += rollUp * factor;\n        vals[previous] -= rollUp * conv * factor;\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n\n  // try to convert any decimals into smaller units if possible\n  // for example for { years: 2.5, days: 0, seconds: 0 } we want to get { years: 2, days: 182, hours: 12 }\n  orderedUnits$1.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        const fraction = vals[previous] % 1;\n        vals[previous] -= fraction;\n        vals[current] += fraction * matrix[previous][current];\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n// Remove all properties with a value of 0 from an object\nfunction removeZeroes(vals) {\n  const newVals = {};\n  for (const [key, value] of Object.entries(vals)) {\n    if (value !== 0) {\n      newVals[key] = value;\n    }\n  }\n  return newVals;\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.\n * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.\n * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nclass Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    let matrix = accurate ? accurateMatrix : casualMatrix;\n    if (config.matrix) {\n      matrix = config.matrix;\n    }\n\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = matrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject({\n      milliseconds: count\n    }, opts);\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {Object} [opts=[]] - options for creating this Duration\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the custom conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj, opts = {}) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(`Duration.fromObject: argument expected to be an object, got ${obj === null ? \"null\" : typeof obj}`);\n    }\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit),\n      loc: Locale.fromObject(opts),\n      conversionAccuracy: opts.conversionAccuracy,\n      matrix: opts.matrix\n    });\n  }\n\n  /**\n   * Create a Duration from DurationLike.\n   *\n   * @param {Object | number | Duration} durationLike\n   * One of:\n   * - object with keys like 'years' and 'hours'.\n   * - number representing milliseconds\n   * - Duration instance\n   * @return {Duration}\n   */\n  static fromDurationLike(durationLike) {\n    if (isNumber(durationLike)) {\n      return Duration.fromMillis(durationLike);\n    } else if (Duration.isDuration(durationLike)) {\n      return durationLike;\n    } else if (typeof durationLike === \"object\") {\n      return Duration.fromObject(durationLike);\n    } else {\n      throw new InvalidArgumentError(`Unknown duration argument ${durationLike} of type ${typeof durationLike}`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the preset conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({\n        invalid\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\"\n    }[unit ? unit.toLowerCase() : unit];\n    if (!normalized) throw new InvalidUnitError(unit);\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return o && o.isLuxonDuration || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `w` for weeks\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * Tokens can be escaped by wrapping with single quotes.\n   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = {\n      ...opts,\n      floor: opts.round !== false && opts.floor !== false\n    };\n    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID$2;\n  }\n\n  /**\n   * Returns a string representation of a Duration with all units included.\n   * To modify its behavior, use `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\n   * @param {Object} opts - Formatting options. Accepts the same keys as the options parameter of the native `Intl.NumberFormat` constructor, as well as `listStyle`.\n   * @param {string} [opts.listStyle='narrow'] - How to format the merged list. Corresponds to the `style` property of the options parameter of the native `Intl.ListFormat` constructor.\n   * @example\n   * ```js\n   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })\n   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'\n   * dur.toHuman({ listStyle: \"long\" }) //=> '1 day, 5 hours, and 6 minutes'\n   * dur.toHuman({ unitDisplay: \"short\" }) //=> '1 day, 5 hr, 6 min'\n   * ```\n   */\n  toHuman(opts = {}) {\n    if (!this.isValid) return INVALID$2;\n    const l = orderedUnits$1.map(unit => {\n      const val = this.values[unit];\n      if (isUndefined(val)) {\n        return null;\n      }\n      return this.loc.numberFormatter({\n        style: \"unit\",\n        unitDisplay: \"long\",\n        ...opts,\n        unit: unit.slice(0, -1)\n      }).format(val);\n    }).filter(n => n);\n    return this.loc.listFormatter({\n      type: \"conjunction\",\n      style: opts.listStyle || \"narrow\",\n      ...opts\n    }).format(l);\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject() {\n    if (!this.isValid) return {};\n    return {\n      ...this.values\n    };\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n    opts = {\n      suppressMilliseconds: false,\n      suppressSeconds: false,\n      includePrefix: false,\n      format: \"extended\",\n      ...opts,\n      includeOffset: false\n    };\n    const dateTime = DateTime.fromMillis(millis, {\n      zone: \"UTC\"\n    });\n    return dateTime.toISOTime(opts);\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a string representation of this Duration appropriate for the REPL.\n   * @return {string}\n   */\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    if (this.isValid) {\n      return `Duration { values: ${JSON.stringify(this.values)} }`;\n    } else {\n      return `Duration { Invalid, reason: ${this.invalidReason} }`;\n    }\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    if (!this.isValid) return NaN;\n    return durationToMillis(this.matrix, this.values);\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration),\n      result = {};\n    for (const k of orderedUnits$1) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n    return clone$1(this, {\n      values: result\n    }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === \"hours\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone$1(this, {\n      values: result\n    }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n    const mixed = {\n      ...this.values,\n      ...normalizeObject(values, Duration.normalizeUnit)\n    };\n    return clone$1(this, {\n      values: mixed\n    });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({\n    locale,\n    numberingSystem,\n    conversionAccuracy,\n    matrix\n  } = {}) {\n    const loc = this.loc.clone({\n      locale,\n      numberingSystem\n    });\n    const opts = {\n      loc,\n      matrix,\n      conversionAccuracy\n    };\n    return clone$1(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * Assuming the overall value of the Duration is positive, this means:\n   * - excessive values for lower-order units are converted to higher-order units (if possible, see first and second example)\n   * - negative lower-order units are converted to higher order units (there must be such a higher order unit, otherwise\n   *   the overall value would be negative, see third example)\n   * - fractional values for higher-order units are converted to lower-order units (if possible, see fourth example)\n   *\n   * If the overall value is negative, the result of this method is equivalent to `this.negate().normalize().negate()`.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ days: 5000 }).normalize().toObject() //=> { days: 5000 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @example Duration.fromObject({ years: 2.5, days: 0, hours: 0 }).normalize().toObject() //=> { years: 2, days: 182, hours: 12 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone$1(this, {\n      values: vals\n    }, true);\n  }\n\n  /**\n   * Rescale units to its largest representation\n   * @example Duration.fromObject({ milliseconds: 90000 }).rescale().toObject() //=> { minutes: 1, seconds: 30 }\n   * @return {Duration}\n   */\n  rescale() {\n    if (!this.isValid) return this;\n    const vals = removeZeroes(this.normalize().shiftToAll().toObject());\n    return clone$1(this, {\n      values: vals\n    }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n    if (units.length === 0) {\n      return this;\n    }\n    units = units.map(u => Duration.normalizeUnit(u));\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n    for (const k of orderedUnits$1) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        // only keep the integer part for now in the hopes of putting any decimal part\n        // into a smaller unit later\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = (own * 1000 - i * 1000) / 1000;\n\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n    normalizeValues(this.matrix, built);\n    return clone$1(this, {\n      values: built\n    }, true);\n  }\n\n  /**\n   * Shift this Duration to all available units.\n   * Same as shiftTo(\"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\")\n   * @return {Duration}\n   */\n  shiftToAll() {\n    if (!this.isValid) return this;\n    return this.shiftTo(\"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\");\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = this.values[k] === 0 ? 0 : -this.values[k];\n    }\n    return clone$1(this, {\n      values: negated\n    }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n    for (const u of orderedUnits$1) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nconst INVALID$1 = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\"end before start\", `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`);\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link Interval.fromDateTimes}, {@link Interval.after}, {@link Interval.before}, or {@link Interval.fromISO}.\n * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval.merge}, {@link Interval.xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.\n * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}\n * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toLocaleString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.\n */\nclass Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({\n        invalid\n      });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n    const validateError = validateStartEnd(builtStart, builtEnd);\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return o && o.isLuxonInterval || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; this operation will always use the locale of the start DateTime\n   * @return {number}\n   */\n  count(unit = \"milliseconds\", opts) {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit, opts);\n    let end;\n    if (opts != null && opts.useLocaleWeeks) {\n      end = this.end.reconfigure({\n        locale: start.locale\n      });\n    } else {\n      end = this.end;\n    }\n    end = end.startOf(unit, opts);\n    return Math.floor(end.diff(start, unit).get(unit)) + (end.valueOf() !== this.end.valueOf());\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({\n    start,\n    end\n  } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...DateTime} dateTimes - the unit of time to count.\n   * @return {Array}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes.map(friendlyDateTime).filter(d => this.contains(d)).sort((a, b) => a.toMillis() - b.toMillis()),\n      results = [];\n    let {\n        s\n      } = this,\n      i = 0;\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {Array}\n   */\n  splitBy(duration) {\n    const dur = Duration.fromDurationLike(duration);\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n    let {\n        s\n      } = this,\n      idx = 1,\n      next;\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits(x => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {Array}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Returns true if this Interval fully contains the specified Interval, specifically if the intersect (of this Interval and the other Interval) is equal to the other Interval; false otherwise.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals.sort((a, b) => a.s - b.s).reduce(([sofar, current], item) => {\n      if (!current) {\n        return [sofar, item];\n      } else if (current.overlaps(item) || current.abutsStart(item)) {\n        return [sofar, current.union(item)];\n      } else {\n        return [sofar.concat([current]), item];\n      }\n    }, [[], null]);\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map(i => [{\n        time: i.s,\n        type: \"s\"\n      }, {\n        time: i.e,\n        type: \"e\"\n      }]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n        start = null;\n      }\n    }\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {Array}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals)).map(i => this.intersection(i)).filter(i => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID$1;\n    return `[${this.s.toISO()} – ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for the REPL.\n   * @return {string}\n   */\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    if (this.isValid) {\n      return `Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`;\n    } else {\n      return `Interval { Invalid, reason: ${this.invalidReason} }`;\n    }\n  }\n\n  /**\n   * Returns a localized string representing this Interval. Accepts the same options as the\n   * Intl.DateTimeFormat constructor and any presets defined by Luxon, such as\n   * {@link DateTime.DATE_FULL} or {@link DateTime.TIME_SIMPLE}. The exact behavior of this method\n   * is browser-specific, but in general it will return an appropriate representation of the\n   * Interval in the assigned locale. Defaults to the system's locale if no locale has been\n   * specified.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {Object} [formatOpts=DateTime.DATE_SHORT] - Either a DateTime preset or\n   * Intl.DateTimeFormat constructor options.\n   * @param {Object} opts - Options to override the configuration of the start DateTime.\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(); //=> 11/7/2022 – 11/8/2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL); //=> November 7 – 8, 2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL, { locale: 'fr-FR' }); //=> 7–8 novembre 2022\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString(DateTime.TIME_SIMPLE); //=> 6:00 – 8:00 PM\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> Mon, Nov 07, 6:00 – 8:00 p\n   * @return {string}\n   */\n  toLocaleString(formatOpts = DATE_SHORT, opts = {}) {\n    return this.isValid ? Formatter.create(this.s.loc.clone(opts), formatOpts).formatInterval(this) : INVALID$1;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID$1;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID$1;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID$1;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format\n   * string. **You may not want this.** See {@link Interval#toLocaleString} for a more flexible\n   * formatting tool.\n   * @param {string} dateFormat - The format string. This string formats the start and end time.\n   * See {@link DateTime#toFormat} for details.\n   * @param {Object} opts - Options.\n   * @param {string} [opts.separator =  ' – '] - A separator to place between the start and end\n   * representations.\n   * @return {string}\n   */\n  toFormat(dateFormat, {\n    separator = \" – \"\n  } = {}) {\n    if (!this.isValid) return INVALID$1;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nclass Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now().setZone(zone).set({\n      month: 12\n    });\n    return !zone.isUniversal && proto.offset !== proto.set({\n      month: 6\n    }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone#isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Get the weekday on which the week starts according to the given locale.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @returns {number} the start of the week, 1 for Monday through 7 for Sunday\n   */\n  static getStartOfWeek({\n    locale = null,\n    locObj = null\n  } = {}) {\n    return (locObj || Locale.create(locale)).getStartOfWeek();\n  }\n\n  /**\n   * Get the minimum number of days necessary in a week before it is considered part of the next year according\n   * to the given locale.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @returns {number}\n   */\n  static getMinimumDaysInFirstWeek({\n    locale = null,\n    locObj = null\n  } = {}) {\n    return (locObj || Locale.create(locale)).getMinDaysInFirstWeek();\n  }\n\n  /**\n   * Get the weekdays, which are considered the weekend according to the given locale\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @returns {number[]} an array of weekdays, 1 for Monday through 7 for Sunday\n   */\n  static getWeekendWeekdays({\n    locale = null,\n    locObj = null\n  } = {}) {\n    // copy the array, because we cache it internally\n    return (locObj || Locale.create(locale)).getWeekendDays().slice();\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'\n   * @return {Array}\n   */\n  static months(length = \"long\", {\n    locale = null,\n    numberingSystem = null,\n    locObj = null,\n    outputCalendar = \"gregory\"\n  } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link Info#months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {Array}\n   */\n  static monthsFormat(length = \"long\", {\n    locale = null,\n    numberingSystem = null,\n    locObj = null,\n    outputCalendar = \"gregory\"\n  } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'\n   * @return {Array}\n   */\n  static weekdays(length = \"long\", {\n    locale = null,\n    numberingSystem = null,\n    locObj = null\n  } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link Info#weekdays}\n   * @param {string} [length='long'] - the length of the month representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {Array}\n   */\n  static weekdaysFormat(length = \"long\", {\n    locale = null,\n    numberingSystem = null,\n    locObj = null\n  } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]\n   * @return {Array}\n   */\n  static meridiems({\n    locale = null\n  } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]\n   * @return {Array}\n   */\n  static eras(length = \"short\", {\n    locale = null\n  } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `relative`: whether this environment supports relative time formatting\n   * * `localeWeek`: whether this environment supports different weekdays for the start of the week based on the locale\n   * @example Info.features() //=> { relative: false, localeWeek: true }\n   * @return {Object}\n   */\n  static features() {\n    return {\n      relative: hasRelative(),\n      localeWeek: hasLocaleWeekInfo()\n    };\n  }\n}\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = dt => dt.toUTC(0, {\n      keepLocalTime: true\n    }).startOf(\"day\").valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [[\"years\", (a, b) => b.year - a.year], [\"quarters\", (a, b) => b.quarter - a.quarter + (b.year - a.year) * 4], [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12], [\"weeks\", (a, b) => {\n    const days = dayDiff(a, b);\n    return (days - days % 7) / 7;\n  }], [\"days\", dayDiff]];\n  const results = {};\n  const earlier = cursor;\n  let lowestOrder, highWater;\n\n  /* This loop tries to diff using larger units first.\n     If we overshoot, we backtrack and try the next smaller unit.\n     \"cursor\" starts out at the earlier timestamp and moves closer and closer to \"later\"\n     as we use smaller and smaller units.\n     highWater keeps track of where we would be if we added one more of the smallest unit,\n     this is used later to potentially convert any difference smaller than the smallest higher order unit\n     into a fraction of that smallest higher order unit\n  */\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n      results[unit] = differ(cursor, later);\n      highWater = earlier.plus(results);\n      if (highWater > later) {\n        // we overshot the end point, backtrack cursor by 1\n        results[unit]--;\n        cursor = earlier.plus(results);\n\n        // if we are still overshooting now, we need to backtrack again\n        // this happens in certain situations when diffing times in different zones,\n        // because this calculation ignores time zones\n        if (cursor > later) {\n          // keep the \"overshot by 1\" around as highWater\n          highWater = cursor;\n          // backtrack cursor by 1\n          results[unit]--;\n          cursor = earlier.plus(results);\n        }\n      } else {\n        cursor = highWater;\n      }\n    }\n  }\n  return [cursor, results, highWater, lowestOrder];\n}\nfunction diff (earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n  const remainingMillis = later - cursor;\n  const lowerOrderUnits = units.filter(u => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0);\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({\n        [lowestOrder]: 1\n      });\n    }\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n  const duration = Duration.fromObject(results, opts);\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts).shiftTo(...lowerOrderUnits).plus(duration);\n  } else {\n    return duration;\n  }\n}\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\nfunction intUnit(regex, post = i => i) {\n  return {\n    regex,\n    deser: ([s]) => post(parseDigits(s))\n  };\n}\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\nfunction stripInsensitivities(s) {\n  return s.replace(/\\./g, \"\") // ignore dots that were made optional\n  .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n  .toLowerCase();\n}\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) => strings.findIndex(i => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex\n    };\n  }\n}\nfunction offset(regex, groups) {\n  return {\n    regex,\n    deser: ([, h, m]) => signedOffset(h, m),\n    groups\n  };\n}\nfunction simple(regex) {\n  return {\n    regex,\n    deser: ([s]) => s\n  };\n}\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * @param token\n * @param {Locale} loc\n */\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = t => ({\n      regex: RegExp(escapeToken(t.val)),\n      deser: ([s]) => s,\n      literal: true\n    }),\n    unitate = t => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\"), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\"), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        // this special-case \"token\" represents a place where a macro-token expanded into a white-space literal\n        // in this case we accept any non-newline white-space\n        case \" \":\n          return simple(/[^\\S\\n\\r]/);\n        default:\n          return literal(t);\n      }\n    };\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP\n  };\n  unit.token = token;\n  return unit;\n}\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\"\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\"\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\"\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\"\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour12: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\"\n  },\n  hour24: {\n    numeric: \"H\",\n    \"2-digit\": \"HH\"\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\"\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\"\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\"\n  }\n};\nfunction tokenForPart(part, formatOpts, resolvedOpts) {\n  const {\n    type,\n    value\n  } = part;\n  if (type === \"literal\") {\n    const isSpace = /^\\s+$/.test(value);\n    return {\n      literal: !isSpace,\n      val: isSpace ? \" \" : value\n    };\n  }\n  const style = formatOpts[type];\n\n  // The user might have explicitly specified hour12 or hourCycle\n  // if so, respect their decision\n  // if not, refer back to the resolvedOpts, which are based on the locale\n  let actualType = type;\n  if (type === \"hour\") {\n    if (formatOpts.hour12 != null) {\n      actualType = formatOpts.hour12 ? \"hour12\" : \"hour24\";\n    } else if (formatOpts.hourCycle != null) {\n      if (formatOpts.hourCycle === \"h11\" || formatOpts.hourCycle === \"h12\") {\n        actualType = \"hour12\";\n      } else {\n        actualType = \"hour24\";\n      }\n    } else {\n      // tokens only differentiate between 24 hours or not,\n      // so we do not need to check hourCycle here, which is less supported anyways\n      actualType = resolvedOpts.hour12 ? \"hour12\" : \"hour24\";\n    }\n  }\n  let val = partTypeStyleToTokenVal[actualType];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n  if (val) {\n    return {\n      literal: false,\n      val\n    };\n  }\n  return undefined;\n}\nfunction buildRegex(units) {\n  const re = units.map(u => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\nfunction dateTimeFromMatches(matches) {\n  const toField = token => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n    return r;\n  }, {});\n  return [vals, zone, specificOffset];\n}\nlet dummyDateTimeCache = null;\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n  return dummyDateTimeCache;\n}\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n  return tokens;\n}\nfunction expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map(t => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nclass TokenParser {\n  constructor(locale, format) {\n    this.locale = locale;\n    this.format = format;\n    this.tokens = expandMacroTokens(Formatter.parseFormat(format), locale);\n    this.units = this.tokens.map(t => unitForToken(t, locale));\n    this.disqualifyingUnit = this.units.find(t => t.invalidReason);\n    if (!this.disqualifyingUnit) {\n      const [regexString, handlers] = buildRegex(this.units);\n      this.regex = RegExp(regexString, \"i\");\n      this.handlers = handlers;\n    }\n  }\n  explainFromTokens(input) {\n    if (!this.isValid) {\n      return {\n        input,\n        tokens: this.tokens,\n        invalidReason: this.invalidReason\n      };\n    } else {\n      const [rawMatches, matches] = match(input, this.regex, this.handlers),\n        [result, zone, specificOffset] = matches ? dateTimeFromMatches(matches) : [null, null, undefined];\n      if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n        throw new ConflictingSpecificationError(\"Can't include meridiem when specifying 24-hour format\");\n      }\n      return {\n        input,\n        tokens: this.tokens,\n        regex: this.regex,\n        rawMatches,\n        matches,\n        result,\n        zone,\n        specificOffset\n      };\n    }\n  }\n  get isValid() {\n    return !this.disqualifyingUnit;\n  }\n  get invalidReason() {\n    return this.disqualifyingUnit ? this.disqualifyingUnit.invalidReason : null;\n  }\n}\nfunction explainFromTokens(locale, input, format) {\n  const parser = new TokenParser(locale, format);\n  return parser.explainFromTokens(input);\n}\nfunction parseFromTokens(locale, input, format) {\n  const {\n    result,\n    zone,\n    specificOffset,\n    invalidReason\n  } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\nfunction formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n  const formatter = Formatter.create(locale, formatOpts);\n  const df = formatter.dtFormatter(getDummyDateTime());\n  const parts = df.formatToParts();\n  const resolvedOpts = df.resolvedOptions();\n  return parts.map(p => tokenForPart(p, formatOpts, resolvedOpts));\n}\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\n/**\n * @param {DateTime} dt\n */\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n/**\n * @param {DateTime} dt\n */\nfunction possiblyCachedLocalWeekData(dt) {\n  if (dt.localWeekData === null) {\n    dt.localWeekData = gregorianToWeek(dt.c, dt.loc.getMinDaysInFirstWeek(), dt.loc.getStartOfWeek());\n  }\n  return dt.localWeekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid\n  };\n  return new DateTime({\n    ...current,\n    ...alts,\n    old: current\n  });\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n  const d = new Date(ts);\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds()\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = {\n      ...inst.c,\n      year,\n      month,\n      day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7\n    },\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n  return {\n    ts,\n    o\n  };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {\n  const {\n    setZone,\n    zone\n  } = opts;\n  if (parsed && Object.keys(parsed).length !== 0 || parsedZone) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(parsed, {\n        ...opts,\n        zone: interpretationZone,\n        specificOffset\n      });\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`));\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid ? Formatter.create(Locale.create(\"en-US\"), {\n    allowZ,\n    forceSimple: true\n  }).formatDateTimeFromString(dt, format) : null;\n}\nfunction toISODate(o, extended) {\n  const longFormat = o.c.year > 9999 || o.c.year < 0;\n  let c = \"\";\n  if (longFormat && o.c.year >= 0) c += \"+\";\n  c += padStart(o.c.year, longFormat ? 6 : 4);\n  if (extended) {\n    c += \"-\";\n    c += padStart(o.c.month);\n    c += \"-\";\n    c += padStart(o.c.day);\n  } else {\n    c += padStart(o.c.month);\n    c += padStart(o.c.day);\n  }\n  return c;\n}\nfunction toISOTime(o, extended, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone) {\n  let c = padStart(o.c.hour);\n  if (extended) {\n    c += \":\";\n    c += padStart(o.c.minute);\n    if (o.c.millisecond !== 0 || o.c.second !== 0 || !suppressSeconds) {\n      c += \":\";\n    }\n  } else {\n    c += padStart(o.c.minute);\n  }\n  if (o.c.millisecond !== 0 || o.c.second !== 0 || !suppressSeconds) {\n    c += padStart(o.c.second);\n    if (o.c.millisecond !== 0 || !suppressMilliseconds) {\n      c += \".\";\n      c += padStart(o.c.millisecond, 3);\n    }\n  }\n  if (includeOffset) {\n    if (o.isOffsetFixed && o.offset === 0 && !extendedZone) {\n      c += \"Z\";\n    } else if (o.o < 0) {\n      c += \"-\";\n      c += padStart(Math.trunc(-o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(-o.o % 60));\n    } else {\n      c += \"+\";\n      c += padStart(Math.trunc(o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(o.o % 60));\n    }\n  }\n  if (extendedZone) {\n    c += \"[\" + o.zone.ianaName + \"]\";\n  }\n  return c;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\"weekYear\", \"weekNumber\", \"weekday\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\"\n  }[unit.toLowerCase()];\n  if (!normalized) throw new InvalidUnitError(unit);\n  return normalized;\n}\nfunction normalizeUnitWithLocalWeeks(unit) {\n  switch (unit.toLowerCase()) {\n    case \"localweekday\":\n    case \"localweekdays\":\n      return \"localWeekday\";\n    case \"localweeknumber\":\n    case \"localweeknumbers\":\n      return \"localWeekNumber\";\n    case \"localweekyear\":\n    case \"localweekyears\":\n      return \"localWeekYear\";\n    default:\n      return normalizeUnit(unit);\n  }\n}\n\n// cache offsets for zones based on the current timestamp when this function is\n// first called. When we are handling a datetime from components like (year,\n// month, day, hour) in a time zone, we need a guess about what the timezone\n// offset is so that we can convert into a UTC timestamp. One way is to find the\n// offset of now in the zone. The actual date may have a different offset (for\n// example, if we handle a date in June while we're in December in a zone that\n// observes DST), but we can check and adjust that.\n//\n// When handling many dates, calculating the offset for now every time is\n// expensive. It's just a guess, so we can cache the offset to use even if we\n// are right on a time change boundary (we'll just correct in the other\n// direction). Using a timestamp from first read is a slight optimization for\n// handling dates close to the current date, since those dates will usually be\n// in the same offset (we could set the timestamp statically, instead). We use a\n// single timestamp for all zones to make things a bit more predictable.\n//\n// This is safe for quickDT (used by local() and utc()) because we don't fill in\n// higher-order units from tsNow (as we do in fromObject, this requires that\n// offset is calculated from tsNow).\nfunction guessOffsetForZone(zone) {\n  if (!zoneOffsetGuessCache[zone]) {\n    if (zoneOffsetTs === undefined) {\n      zoneOffsetTs = Settings.now();\n    }\n    zoneOffsetGuessCache[zone] = zone.offset(zoneOffsetTs);\n  }\n  return zoneOffsetGuessCache[zone];\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, opts) {\n  const zone = normalizeZone(opts.zone, Settings.defaultZone);\n  if (!zone.isValid) {\n    return DateTime.invalid(unsupportedZone(zone));\n  }\n  const loc = Locale.fromObject(opts);\n  let ts, o;\n\n  // assume we have the higher-order units\n  if (!isUndefined(obj.year)) {\n    for (const u of orderedUnits) {\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n    const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n    const offsetProvis = guessOffsetForZone(zone);\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n  } else {\n    ts = Settings.now();\n  }\n  return new DateTime({\n    ts,\n    zone,\n    loc,\n    o\n  });\n}\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = unit => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\nfunction lastOpts(argList) {\n  let opts = {},\n    args;\n  if (argList.length > 0 && typeof argList[argList.length - 1] === \"object\") {\n    opts = argList[argList.length - 1];\n    args = Array.from(argList).slice(0, argList.length - 1);\n  } else {\n    args = Array.from(argList);\n  }\n  return [opts, args];\n}\n\n/**\n * Timestamp to use for cached zone offset guesses (exposed for test)\n */\nlet zoneOffsetTs;\n/**\n * Cache for zone offset guesses (exposed for test).\n *\n * This optimizes quickDT via guessOffsetForZone to avoid repeated calls of\n * zone.offset().\n */\nlet zoneOffsetGuessCache = {};\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime.local}, {@link DateTime.utc}, and (most flexibly) {@link DateTime.fromObject}. To create one from a standard string format, use {@link DateTime.fromISO}, {@link DateTime.fromHTTP}, and {@link DateTime.fromRFC2822}. To create one from a custom string format, use {@link DateTime.fromFormat}. To create one from a native JS date, use {@link DateTime.fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},\n * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.\n * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nclass DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n    let invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) || (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        // If an offset has been passed and we have not been called from\n        // clone(), we can trust it and avoid the offset calculation.\n        const ot = isNumber(config.o) && !config.old ? config.o : zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.localWeekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                                  //~> now\n   * @example DateTime.local({ zone: \"America/New_York\" })      //~> now, in US east coast time\n   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12, { locale: \"fr\" })     //~> 2017-03-12T00:00:00, with a French locale\n   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, { zone: \"utc\" })   //~> 2017-03-12T05:00:00, in UTC\n   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    return quickDT({\n      year,\n      month,\n      day,\n      hour,\n      minute,\n      second,\n      millisecond\n    }, opts);\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @param {string} [options.weekSettings] - the week settings to set on the resulting DateTime instance\n   * @example DateTime.utc()                                              //~> now\n   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: \"fr\" })          //~> 2017-03-12T05:45:00Z with a French locale\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: \"fr\" }) //~> 2017-03-12T05:45:10.765Z with a French locale\n   * @return {DateTime}\n   */\n  static utc() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    opts.zone = FixedOffsetZone.utcInstance;\n    return quickDT({\n      year,\n      month,\n      day,\n      hour,\n      minute,\n      second,\n      millisecond\n    }, opts);\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options)\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @param {string} options.weekSettings - the week settings to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(`fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`);\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options)\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @param {string} options.weekSettings - the week settings to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options)\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.localWeekYear - a week year, according to the locale\n   * @param {number} obj.localWeekNumber - a week number, between 1 and 52 or 53, depending on the year, according to the locale\n   * @param {number} obj.localWeekday - a weekday, 1-7, where 1 is the first and 7 is the last day of the week, according to the locale\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {Object} opts - options for creating this DateTime\n   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [opts.locale='system\\'s locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @example DateTime.fromObject({ localWeekYear: 2022, localWeekNumber: 1, localWeekday: 1 }, { locale: \"en-US\" }).toISODate() //=> '2021-12-26'\n   * @return {DateTime}\n   */\n  static fromObject(obj, opts = {}) {\n    obj = obj || {};\n    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n    const loc = Locale.fromObject(opts);\n    const normalized = normalizeObject(obj, normalizeUnitWithLocalWeeks);\n    const {\n      minDaysInFirstWeek,\n      startOfWeek\n    } = usesLocalWeekValues(normalized, loc);\n    const tsNow = Settings.now(),\n      offsetProvis = !isUndefined(opts.specificOffset) ? opts.specificOffset : zoneToUse.offset(tsNow),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\"Can't mix weekYear/weekNumber units with year/month/day or ordinals\");\n    }\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n    const useWeekData = definiteWeekDef || normalized.weekday && !containsGregor;\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow, minDaysInFirstWeek, startOfWeek);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized, minDaysInFirstWeek, startOfWeek) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData ? weekToGregorian(normalized, minDaysInFirstWeek, startOfWeek) : containsOrdinal ? ordinalToGregorian(normalized) : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\"mismatched weekday\", `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`);\n    }\n    if (!inst.isValid) {\n      return DateTime.invalid(inst.invalid);\n    }\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @param {string} [opts.weekSettings] - the week settings to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n    const {\n        locale = null,\n        numberingSystem = null\n      } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true\n      }),\n      [vals, parsedZone, specificOffset, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text, specificOffset);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent.\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({\n        invalid\n      });\n    }\n  }\n\n  /**\n   * Check if an object is an instance of DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return o && o.isLuxonDateTime || false;\n  }\n\n  /**\n   * Produce the format string for a set of options\n   * @param formatOpts\n   * @param localeOpts\n   * @returns {string}\n   */\n  static parseFormatForOpts(formatOpts, localeOpts = {}) {\n    const tokenList = formatOptsToTokens(formatOpts, Locale.fromObject(localeOpts));\n    return !tokenList ? null : tokenList.map(t => t ? t.val : null).join(\"\");\n  }\n\n  /**\n   * Produce the the fully expanded format token for the locale\n   * Does NOT quote characters, so quoted tokens will not round trip correctly\n   * @param fmt\n   * @param localeOpts\n   * @returns {string}\n   */\n  static expandFormat(fmt, localeOpts = {}) {\n    const expanded = expandMacroTokens(Formatter.parseFormat(fmt), Locale.fromObject(localeOpts));\n    return expanded.map(t => t.val).join(\"\");\n  }\n  static resetCache() {\n    zoneOffsetTs = undefined;\n    zoneOffsetGuessCache = {};\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Returns true if this date is on a weekend according to the locale, false otherwise\n   * @returns {boolean}\n   */\n  get isWeekend() {\n    return this.isValid && this.loc.getWeekendDays().includes(this.weekday);\n  }\n\n  /**\n   * Get the day of the week according to the locale.\n   * 1 is the first day of the week and 7 is the last day of the week.\n   * If the locale assigns Sunday as the first day of the week, then a date which is a Sunday will return 1,\n   * @returns {number}\n   */\n  get localWeekday() {\n    return this.isValid ? possiblyCachedLocalWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the week number of the week year according to the locale. Different locales assign week numbers differently,\n   * because the week can start on different days of the week (see localWeekday) and because a different number of days\n   * is required for a week to count as the first week of a year.\n   * @returns {number}\n   */\n  get localWeekNumber() {\n    return this.isValid ? possiblyCachedLocalWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the week year according to the locale. Different locales assign week numbers (and therefor week years)\n   * differently, see localWeekNumber.\n   * @returns {number}\n   */\n  get localWeekYear() {\n    return this.isValid ? possiblyCachedLocalWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", {\n      locObj: this.loc\n    })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", {\n      locObj: this.loc\n    })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", {\n      locObj: this.loc\n    })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", {\n      locObj: this.loc\n    })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.isUniversal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return this.offset > this.set({\n        month: 1,\n        day: 1\n      }).offset || this.offset > this.set({\n        month: 5\n      }).offset;\n    }\n  }\n\n  /**\n   * Get those DateTimes which have the same local time as this DateTime, but a different offset from UTC\n   * in this DateTime's zone. During DST changes local time can be ambiguous, for example\n   * `2023-10-29T02:30:00` in `Europe/Berlin` can have offset `+01:00` or `+02:00`.\n   * This method will return both possible DateTimes if this DateTime's local time is ambiguous.\n   * @returns {DateTime[]}\n   */\n  getPossibleOffsets() {\n    if (!this.isValid || this.isOffsetFixed) {\n      return [this];\n    }\n    const dayMs = 86400000;\n    const minuteMs = 60000;\n    const localTS = objToLocalTS(this.c);\n    const oEarlier = this.zone.offset(localTS - dayMs);\n    const oLater = this.zone.offset(localTS + dayMs);\n    const o1 = this.zone.offset(localTS - oEarlier * minuteMs);\n    const o2 = this.zone.offset(localTS - oLater * minuteMs);\n    if (o1 === o2) {\n      return [this];\n    }\n    const ts1 = localTS - o1 * minuteMs;\n    const ts2 = localTS - o2 * minuteMs;\n    const c1 = tsToObj(ts1, o1);\n    const c2 = tsToObj(ts2, o2);\n    if (c1.hour === c2.hour && c1.minute === c2.minute && c1.second === c2.second && c1.millisecond === c2.millisecond) {\n      return [clone(this, {\n        ts: ts1\n      }), clone(this, {\n        ts: ts2\n      })];\n    }\n    return [this];\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's local week year\n   * @example DateTime.local(2020, 6, {locale: 'en-US'}).weeksInLocalWeekYear //=> 52\n   * @example DateTime.local(2020, 6, {locale: 'de-DE'}).weeksInLocalWeekYear //=> 53\n   * @type {number}\n   */\n  get weeksInLocalWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.localWeekYear, this.loc.getMinDaysInFirstWeek(), this.loc.getStartOfWeek()) : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOptions(opts = {}) {\n    const {\n      locale,\n      numberingSystem,\n      calendar\n    } = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this);\n    return {\n      locale,\n      numberingSystem,\n      outputCalendar: calendar\n    };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link DateTime#setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, {\n    keepLocalTime = false,\n    keepCalendarTime = false\n  } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, {\n        ts: newTS,\n        zone\n      });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({\n    locale,\n    numberingSystem,\n    outputCalendar\n  } = {}) {\n    const loc = this.loc.clone({\n      locale,\n      numberingSystem,\n      outputCalendar\n    });\n    return clone(this, {\n      loc\n    });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({\n      locale\n    });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.\n   *\n   * This method also supports setting locale-based week units, i.e. `localWeekday`, `localWeekNumber` and `localWeekYear`.\n   * They cannot be mixed with ISO-week units like `weekday`.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n    const normalized = normalizeObject(values, normalizeUnitWithLocalWeeks);\n    const {\n      minDaysInFirstWeek,\n      startOfWeek\n    } = usesLocalWeekValues(normalized, this.loc);\n    const settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\"Can't mix weekYear/weekNumber units with year/month/day or ordinals\");\n    }\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian({\n        ...gregorianToWeek(this.c, minDaysInFirstWeek, startOfWeek),\n        ...normalized\n      }, minDaysInFirstWeek, startOfWeek);\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian({\n        ...gregorianToOrdinal(this.c),\n        ...normalized\n      });\n    } else {\n      mixed = {\n        ...this.toObject(),\n        ...normalized\n      };\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, {\n      ts,\n      o\n    });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link DateTime#plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit, {\n    useLocaleWeeks = false\n  } = {}) {\n    if (!this.isValid) return this;\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      if (useLocaleWeeks) {\n        const startOfWeek = this.loc.getStartOfWeek();\n        const {\n          weekday\n        } = this;\n        if (weekday < startOfWeek) {\n          o.weekNumber = this.weekNumber - 1;\n        }\n        o.weekday = startOfWeek;\n      } else {\n        o.weekday = 1;\n      }\n    }\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit, opts) {\n    return this.isValid ? this.plus({\n      [unit]: 1\n    }).startOf(unit, opts).minus(1) : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 août 2022'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(formatOpts = DATE_SHORT, opts = {}) {\n    return this.isValid ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this) : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=false] - add the time zone format extension\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO({\n    format = \"extended\",\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset = true,\n    extendedZone = false\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n    const ext = format === \"extended\";\n    let c = toISODate(this, ext);\n    c += \"T\";\n    c += toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);\n    return c;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({\n    format = \"extended\"\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n    return toISODate(this, format === \"extended\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    extendedZone = false,\n    format = \"extended\"\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n    let c = includePrefix ? \"T\" : \"\";\n    return c + toISOTime(this, format === \"extended\", suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    if (!this.isValid) {\n      return null;\n    }\n    return toISODate(this, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({\n    includeOffset = true,\n    includeZone = false,\n    includeOffsetSpace = true\n  } = {}) {\n    let fmt = \"HH:mm:ss.SSS\";\n    if (includeZone || includeOffset) {\n      if (includeOffsetSpace) {\n        fmt += \" \";\n      }\n      if (includeZone) {\n        fmt += \"z\";\n      } else if (includeOffset) {\n        fmt += \"ZZ\";\n      }\n    }\n    return toTechFormat(this, fmt, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for the REPL.\n   * @return {string}\n   */\n  [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n    if (this.isValid) {\n      return `DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`;\n    } else {\n      return `DateTime { Invalid, reason: ${this.invalidReason} }`;\n    }\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds (as a whole number) of this DateTime.\n   * @return {number}\n   */\n  toUnixInteger() {\n    return this.isValid ? Math.floor(this.ts / 1000) : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n    const base = {\n      ...this.c\n    };\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\"created by diffing an invalid DateTime\");\n    }\n    const durOpts = {\n      locale: this.locale,\n      numberingSystem: this.numberingSystem,\n      ...opts\n    };\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link DateTime#diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @param {Object} opts - options\n   * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; only the locale of this DateTime is used\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit, opts) {\n    if (!this.isValid) return false;\n    const inputMs = otherDateTime.valueOf();\n    const adjustedToZone = this.setZone(otherDateTime.zone, {\n      keepLocalTime: true\n    });\n    return adjustedToZone.startOf(unit, opts) <= inputMs && inputMs <= adjustedToZone.endOf(unit, opts);\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal if and only if they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 día\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({}, {\n        zone: this.zone\n      }),\n      padding = options.padding ? this < base ? -options.padding : options.padding : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(base, this.plus(padding), {\n      ...options,\n      numeric: \"always\",\n      units,\n      unit\n    });\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"mañana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n    return diffRelative(options.base || DateTime.fromObject({}, {\n      zone: this.zone\n    }), this, {\n      ...options,\n      numeric: \"auto\",\n      units: [\"years\", \"months\", \"days\"],\n      calendary: true\n    });\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, i => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, i => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const {\n        locale = null,\n        numberingSystem = null\n      } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  /**\n   * Build a parser for `fmt` using the given locale. This parser can be passed\n   * to {@link DateTime.fromFormatParser} to a parse a date in this format. This\n   * can be used to optimize cases where many dates need to be parsed in a\n   * specific format.\n   *\n   * @param {String} fmt - the format the string is expected to be in (see\n   * description)\n   * @param {Object} options - options used to set locale and numberingSystem\n   * for parser\n   * @returns {TokenParser} - opaque object to be used\n   */\n  static buildFormatParser(fmt, options = {}) {\n    const {\n        locale = null,\n        numberingSystem = null\n      } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true\n      });\n    return new TokenParser(localeToUse, fmt);\n  }\n\n  /**\n   * Create a DateTime from an input string and format parser.\n   *\n   * The format parser must have been created with the same locale as this call.\n   *\n   * @param {String} text - the string to parse\n   * @param {TokenParser} formatParser - parser from {@link DateTime.buildFormatParser}\n   * @param {Object} opts - options taken by fromFormat()\n   * @returns {DateTime}\n   */\n  static fromFormatParser(text, formatParser, opts = {}) {\n    if (isUndefined(text) || isUndefined(formatParser)) {\n      throw new InvalidArgumentError(\"fromFormatParser requires an input string and a format parser\");\n    }\n    const {\n        locale = null,\n        numberingSystem = null\n      } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true\n      });\n    if (!localeToUse.equals(formatParser.locale)) {\n      throw new InvalidArgumentError(`fromFormatParser called with a locale of ${localeToUse}, ` + `but the format parser was created for ${formatParser.locale}`);\n    }\n    const {\n      result,\n      zone,\n      specificOffset,\n      invalidReason\n    } = formatParser.explainFromTokens(text);\n    if (invalidReason) {\n      return DateTime.invalid(invalidReason);\n    } else {\n      return parseDataToDateTime(result, zone, opts, `format ${formatParser.format}`, text, specificOffset);\n    }\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link DateTime#toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return DATE_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return DATE_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return DATE_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return DATE_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return TIME_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return DATETIME_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return DATETIME_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return DATETIME_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return DATETIME_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nfunction friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(`Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`);\n  }\n}\n\nconst VERSION = \"3.5.0\";\n\nexports.DateTime = DateTime;\nexports.Duration = Duration;\nexports.FixedOffsetZone = FixedOffsetZone;\nexports.IANAZone = IANAZone;\nexports.Info = Info;\nexports.Interval = Interval;\nexports.InvalidZone = InvalidZone;\nexports.Settings = Settings;\nexports.SystemZone = SystemZone;\nexports.VERSION = VERSION;\nexports.Zone = Zone;\n//# sourceMappingURL=luxon.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = map;\nexports.map2 = map2;\nexports.first = first;\nexports.firstDefinedThunk = firstDefinedThunk;\nexports.denull = denull;\nfunction map(maybeT, f) {\n    return maybeT == null ? undefined : f(maybeT);\n}\nfunction map2(a, b, f) {\n    return a == null || b == null ? undefined : f(a, b);\n}\nfunction first(iter, f) {\n    for (const t of iter) {\n        if (t != null) {\n            const v = f(t);\n            if (v != null)\n                return v;\n        }\n    }\n    return;\n}\nfunction firstDefinedThunk(iter) {\n    for (const f of iter) {\n        const result = f();\n        if (result != null)\n            return result;\n    }\n    return;\n}\n/**\n * Convert functions that return `type | null` to `type | undefined`\n */\nfunction denull(t) {\n    return t == null ? undefined : t;\n}\n//# sourceMappingURL=Maybe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExifTime = void 0;\nconst luxon_1 = require(\"luxon\");\nconst DateTime_1 = require(\"./DateTime\");\nconst String_1 = require(\"./String\");\nconst TimeParsing_1 = require(\"./TimeParsing\");\nconst Timezones_1 = require(\"./Timezones\");\n/**\n * Encodes an ExifTime (which may not have a timezone offset)\n */\nclass ExifTime {\n    hour;\n    minute;\n    second;\n    millisecond;\n    rawValue;\n    inferredZone;\n    static fromEXIF(text, defaultZone) {\n        const s = (0, String_1.toS)(text).trim();\n        if (s.length === 0)\n            return;\n        const result = (0, TimeParsing_1.parseDateTime)(text, (0, TimeParsing_1.timeFormats)({ defaultZone }));\n        if (result != null) {\n            return this.fromDateTime(result.dt, text, result.unsetZone ? undefined : (0, Timezones_1.getZoneName)({ zone: result.dt.zone }), result.inferredZone, result.unsetMilliseconds);\n        }\n        return;\n    }\n    static fromDateTime(dt, rawValue, zone, inferredZone, unsetMilliseconds) {\n        return !(0, DateTime_1.validDateTime)(dt)\n            ? undefined\n            : new ExifTime(dt.hour, dt.minute, dt.second, unsetMilliseconds ? undefined : dt.millisecond, rawValue, zone, inferredZone);\n    }\n    #dt;\n    #z;\n    zone;\n    constructor(hour, minute, second, millisecond, rawValue, zoneName, inferredZone) {\n        this.hour = hour;\n        this.minute = minute;\n        this.second = second;\n        this.millisecond = millisecond;\n        this.rawValue = rawValue;\n        this.inferredZone = inferredZone;\n        this.zone = (0, Timezones_1.getZoneName)({ zoneName });\n    }\n    toDateTime() {\n        return (this.#dt ??= luxon_1.DateTime.fromObject({\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n            millisecond: this.millisecond,\n        }, {\n            zone: this.zone,\n        }));\n    }\n    /**\n     * Alias for `.millisecond`\n     */\n    get millis() {\n        return this.millisecond;\n    }\n    get hasZone() {\n        return this.zone != null;\n    }\n    #subsec() {\n        return this.millisecond == null ? \"\" : \".\" + (0, String_1.pad3)(this.millisecond);\n    }\n    #shortZone() {\n        return (this.#z ??= (0, Timezones_1.zoneToShortOffset)(this.zone));\n    }\n    toString() {\n        return ((0, String_1.pad2)(this.hour, this.minute, this.second).join(\":\") +\n            this.#subsec() +\n            this.#shortZone());\n    }\n    toISOString() {\n        return this.toString();\n    }\n    toExifString() {\n        return this.toString();\n    }\n    setZone(zone, opts) {\n        const dt = (0, TimeParsing_1.setZone)({\n            zone,\n            src: this.toDateTime(),\n            srcHasZone: this.hasZone,\n            opts,\n        });\n        return ExifTime.fromDateTime(dt, this.rawValue, this.zone, this.inferredZone, this.millisecond == null);\n    }\n    toJSON() {\n        return {\n            _ctor: \"ExifTime\",\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n            millisecond: this.millisecond,\n            rawValue: this.rawValue,\n            zone: this.zone,\n            inferredZone: this.inferredZone,\n        };\n    }\n    static fromJSON(json) {\n        return new ExifTime(json.hour, json.minute, json.second, json.millisecond, json.rawValue, json.zone, json.inferredZone);\n    }\n}\nexports.ExifTime = ExifTime;\n//# sourceMappingURL=ExifTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TimezoneOffsetTagnames = exports.defaultVideosToUTC = exports.UnsetZoneName = exports.UnsetZone = exports.UnsetZoneOffsetMinutes = void 0;\nexports.isUTC = isUTC;\nexports.isZoneValid = isZoneValid;\nexports.normalizeZone = normalizeZone;\nexports.zoneToShortOffset = zoneToShortOffset;\nexports.validTzOffsetMinutes = validTzOffsetMinutes;\nexports.offsetMinutesToZoneName = offsetMinutesToZoneName;\nexports.extractZone = extractZone;\nexports.incrementZone = incrementZone;\nexports.extractTzOffsetFromTags = extractTzOffsetFromTags;\nexports.extractTzOffsetFromDatestamps = extractTzOffsetFromDatestamps;\nexports.extractTzOffsetFromTimeStamp = extractTzOffsetFromTimeStamp;\nexports.inferLikelyOffsetMinutes = inferLikelyOffsetMinutes;\nexports.extractTzOffsetFromUTCOffset = extractTzOffsetFromUTCOffset;\nexports.equivalentZones = equivalentZones;\nexports.getZoneName = getZoneName;\nconst luxon_1 = require(\"luxon\");\nconst Array_1 = require(\"./Array\");\nconst BinaryField_1 = require(\"./BinaryField\");\nconst CapturedAtTagNames_1 = require(\"./CapturedAtTagNames\");\nconst DefaultExifToolOptions_1 = require(\"./DefaultExifToolOptions\");\nconst ExifDate_1 = require(\"./ExifDate\");\nconst ExifDateTime_1 = require(\"./ExifDateTime\");\nconst ExifTime_1 = require(\"./ExifTime\");\nconst Lazy_1 = require(\"./Lazy\");\nconst Maybe_1 = require(\"./Maybe\");\nconst Number_1 = require(\"./Number\");\nconst Pick_1 = require(\"./Pick\");\nconst String_1 = require(\"./String\");\n// Unique values from\n// https://en.wikipedia.org/wiki/List_of_tz_database_time_zones, excluding those\n// that have not been used for at least 50 years.\nconst ValidTimezoneOffsets = [\n    // \"-12:00\", // not used for any populated land\n    \"-11:00\",\n    // \"-10:30\", // used by Hawaii 1896-1947\n    \"-10:00\",\n    \"-09:30\",\n    \"-09:00\",\n    \"-08:30\",\n    \"-08:00\",\n    \"-07:00\",\n    \"-06:00\",\n    \"-05:00\",\n    \"-04:30\", // used by Venezuela 1912-1965 and 2007-2016\n    \"-04:00\",\n    \"-03:30\",\n    \"-03:00\",\n    \"-02:30\",\n    \"-02:00\",\n    \"-01:00\",\n    // \"-00:44\", // used by Liberia until 1972\n    // \"-00:25:21\", // Ireland 1880-1916 https://en.wikipedia.org/wiki/UTC%E2%88%9200:25:21\n    \"+00:00\",\n    // \"+00:20\", // used by Netherlands until 1940\n    // \"+00:30\", // used by Switzerland until 1936\n    \"+01:00\",\n    // \"+01:24\", // used by Warsaw until 1915\n    // \"+01:30\", // used by some southern African countries until 1903\n    \"+02:00\",\n    // \"+02:30\", // archaic Moscow time\n    \"+03:00\",\n    \"+03:30\",\n    \"+04:00\",\n    \"+04:30\",\n    // \"+04:51\", // used by Bombay until 1955 https://en.wikipedia.org/wiki/UTC%2B04:51\n    \"+05:00\",\n    \"+05:30\",\n    // \"+05:40\", // used by Nepal until 1920\n    \"+05:45\", // Nepal\n    \"+06:00\",\n    \"+06:30\",\n    \"+07:00\",\n    // \"+07:20\", // used by Singapore and Malaya until 1941\n    \"+07:30\", // used by Mayasia until 1982\n    \"+08:00\",\n    \"+08:30\", // used by North Korea until 2018\n    \"+08:45\", // used by Western Australia, but not in tz database\n    \"+09:00\",\n    \"+09:30\",\n    \"+09:45\", // used by Western Australia, but not in tz database\n    \"+10:00\",\n    \"+10:30\",\n    \"+11:00\",\n    \"+12:00\",\n    \"+12:45\", // New Zealand islands\n    \"+13:00\", // New Zealand and Antarctica\n    \"+13:45\", // New Zealand islands\n    \"+14:00\",\n];\nfunction offsetToMinutes(offset) {\n    const [h, m] = offset.split(\":\").map(Number);\n    // we can't just return `h * 60 + m`: that doesn't work with negative\n    // offsets (minutes will be positive but hours will be negative)\n    const sign = h < 0 ? -1 : 1;\n    return h * 60 + sign * m;\n}\nconst ValidOffsetMinutes = (0, Lazy_1.lazy)(() => new Set(ValidTimezoneOffsets.map(offsetToMinutes)));\n/**\n * Zone instances with this offset are a placeholder for being \"unset\".\n */\nexports.UnsetZoneOffsetMinutes = -1;\n/**\n * This is a placeholder for dates where the zone is unknown/unset, because\n * Luxon doesn't officially support \"unset\" zones.\n */\nexports.UnsetZone = luxon_1.Info.normalizeZone(exports.UnsetZoneOffsetMinutes);\n/**\n * Zone instances with this name are a placeholder for being \"unset\".\n */\nexports.UnsetZoneName = exports.UnsetZone.name;\nconst Zulus = [\n    luxon_1.FixedOffsetZone.utcInstance,\n    0,\n    -0,\n    \"UTC\",\n    \"GMT\",\n    \"Z\",\n    \"+0\",\n    \"+00:00\",\n    \"UTC+0\",\n    \"GMT+0\",\n    \"UTC+00:00\",\n    // ...sigh, so much for \"normalizeZone\"...\n];\nfunction isUTC(zone) {\n    const z = zone;\n    return (zone != null && (Zulus.includes(z) || Zulus.includes(z.zoneName ?? z.fixed)));\n}\nfunction isZoneValid(zone) {\n    return (zone != null && zone.isValid && Math.abs(zone.offset(Date.now())) < 14 * 60);\n}\n/**\n * If `tzSource` matches this value, the tags are from a video, and we had to\n * resort to assuming time fields are in UTC.\n * @see https://github.com/photostructure/exiftool-vendored.js/issues/113\n */\nexports.defaultVideosToUTC = \"defaultVideosToUTC\";\n// https://en.wikipedia.org/wiki/List_of_tz_database_time_zones -- not that\n// \"WET\" and \"W-SU\" are full TZs (!!!), and \"America/Indiana/Indianapolis\" is\n// also a thing.\nconst IanaFormatRE = /^\\w{2,15}(?:\\/\\w{3,15}){0,2}$/;\n// Luxon requires fixed-offset zones to look like \"UTC+H\", \"UTC-H\",\n// \"UTC+H:mm\", \"UTC-H:mm\":\nconst FixedFormatRE = /^UTC[+-]\\d{1,2}(?::\\d\\d)?$/;\n/**\n * @param input must be either a number, which is the offset in minutes, or a\n * string in the format \"UTC+H\" or \"UTC+HH:mm\"\n */\nfunction normalizeZone(input) {\n    // wrapped in a try/catch as Luxon.settings.throwOnInvalid may be true:\n    try {\n        // Info.normalizeZone returns the system zone if the input is null or\n        // blank (!!!), but we want to return undefined instead:\n        if ((0, String_1.blank)(input))\n            return undefined;\n        if (input instanceof luxon_1.Zone) {\n            return isZoneValid(input) ? input : undefined;\n        }\n        // This test and short-circuit may not be necessary, but it's cheap and\n        // explicit:\n        if (isUTC(input))\n            return luxon_1.FixedOffsetZone.utcInstance;\n        let z = input;\n        if (typeof z === \"string\") {\n            z = z.replace(/^(?:Zulu|Z|GMT)(?:\\b|$)/, \"UTC\");\n            // We also don't need to tease Info.normalizeZone with obviously\n            // non-offset inputs:\n            if ((0, String_1.blank)(z) || (!IanaFormatRE.test(z) && !FixedFormatRE.test(z))) {\n                return;\n            }\n        }\n        const result = luxon_1.Info.normalizeZone(z);\n        return isZoneValid(result) && result.name !== exports.UnsetZoneName\n            ? result\n            : undefined;\n    }\n    catch {\n        return;\n    }\n}\n/**\n * @param ts must be provided if the zone is not a fixed offset\n * @return the zone offset (in \"±HH:MM\" format) for the given zone, or \"\" if\n * the zone is invalid\n */\nfunction zoneToShortOffset(zone, ts) {\n    return normalizeZone(zone)?.formatOffset(ts ?? Date.now(), \"short\") ?? \"\";\n}\nfunction validTzOffsetMinutes(tzOffsetMinutes) {\n    return (tzOffsetMinutes != null &&\n        (0, Number_1.isNumber)(tzOffsetMinutes) &&\n        tzOffsetMinutes !== exports.UnsetZoneOffsetMinutes &&\n        ValidOffsetMinutes().has(tzOffsetMinutes));\n}\n/**\n * Returns a \"zone name\" (used by `luxon`) that encodes the given offset.\n */\nfunction offsetMinutesToZoneName(offsetMinutes) {\n    if (!validTzOffsetMinutes(offsetMinutes)) {\n        return undefined;\n    }\n    if (offsetMinutes === 0)\n        return \"UTC\";\n    const sign = offsetMinutes < 0 ? \"-\" : \"+\";\n    const absMinutes = Math.abs(offsetMinutes);\n    const hours = Math.floor(absMinutes / 60);\n    const minutes = Math.abs(absMinutes % 60);\n    // luxon now renders simple hour offsets without padding:\n    return `UTC${sign}` + hours + (minutes === 0 ? \"\" : `:${(0, String_1.pad2)(minutes)}`);\n}\nfunction tzHourToOffset(n) {\n    return (0, Number_1.isNumber)(n) && validTzOffsetMinutes(n * 60)\n        ? offsetMinutesToZoneName(n * 60)\n        : undefined;\n}\n// Accept \"Z\", \"UTC+2\", \"UTC+02\", \"UTC+2:00\", \"UTC+02:00\", \"+2\", \"+02\", and\n// \"+02:00\". Require the sign (+ or -) and a \":\" separator if there are\n// minutes.\nconst tzRe = /(?<Z>Z)|((UTC)?(?<sign>[+-])(?<hours>\\d\\d?)(?::(?<minutes>\\d\\d))?)$/;\nfunction extractOffsetFromHours(hourOffset) {\n    return (0, Number_1.isNumber)(hourOffset)\n        ? (0, Maybe_1.map)(tzHourToOffset(hourOffset), (tz) => ({\n            tz,\n            src: \"hourOffset\",\n        }))\n        : Array.isArray(hourOffset)\n            ? extractOffsetFromHours(hourOffset[0])\n            : undefined;\n}\n/**\n * Parse a timezone offset and return the offset minutes\n *\n * @param opts.stripTZA If false, do not strip off the timezone abbreviation\n * (TZA) from the value. Defaults to true.\n *\n * @return undefined if the value cannot be parsed as a valid timezone offset\n */\nfunction extractZone(value, opts) {\n    if (value == null ||\n        typeof value === \"boolean\" ||\n        value instanceof BinaryField_1.BinaryField ||\n        value instanceof ExifDate_1.ExifDate) {\n        return;\n    }\n    if (Array.isArray(value)) {\n        // we only ever care about the first non-null value\n        return extractZone(value.find((ea) => ea != null));\n    }\n    if (value instanceof ExifDateTime_1.ExifDateTime || value instanceof ExifTime_1.ExifTime) {\n        return value.zone == null\n            ? undefined\n            : { tz: value.zone, src: value.constructor.name + \".zone\" };\n    }\n    if ((0, Number_1.isNumber)(value)) {\n        return extractOffsetFromHours(value);\n    }\n    if (typeof value !== \"string\" || (0, String_1.blank)(value)) {\n        // don't accept ExifDate, boolean, BinaryField, ResourceEvent, Struct, or\n        // Version instances:\n        return;\n    }\n    {\n        // If value is a proper timezone name, this may be easy!\n        const z = normalizeZone(value);\n        if (z != null) {\n            return { tz: z.name, src: \"normalizeZone\" };\n        }\n    }\n    let str = value.trim();\n    // Some EXIF datetime will \"over-specify\" and include both the utc offset\n    // *and* the \"time zone abbreviation\"/TZA, like \"PST\" or \"PDT\". TZAs are\n    // between 2 (AT) and 5 (WEST) characters.\n    if (opts?.stripTZA !== false &&\n        // We only want to strip off the TZA if the input _doesn't_ end with \"UTC\"\n        // or \"Z\"\n        !/[.\\d\\s](?:UTC|Z)$/.test(str)) {\n        str = str.replace(/\\s[a-z]{2,5}$/i, \"\");\n    }\n    {\n        if ((0, String_1.blank)(str))\n            return;\n        const z = normalizeZone(str);\n        if (z != null) {\n            return { tz: z.name, src: \"normalizeZone\" };\n        }\n    }\n    const match = tzRe.exec(str);\n    const capturedGroups = match?.groups;\n    if (match != null && capturedGroups != null) {\n        const leftovers = str.slice(0, match.index);\n        if (capturedGroups.Z === \"Z\")\n            return {\n                tz: \"UTC\",\n                src: \"Z\",\n                leftovers,\n            };\n        const offsetMinutes = (capturedGroups.sign === \"-\" ? -1 : 1) *\n            (parseInt(capturedGroups.hours ?? \"0\") * 60 +\n                parseInt(capturedGroups.minutes ?? \"0\"));\n        const tz = offsetMinutesToZoneName(offsetMinutes);\n        if (tz != null) {\n            return { tz, src: \"offsetMinutesToZoneName\", leftovers };\n        }\n    }\n    return;\n}\nexports.TimezoneOffsetTagnames = [\n    \"TimeZone\",\n    \"OffsetTime\",\n    // time zone for DateTimeOriginal, \"-08:00\"\n    \"OffsetTimeOriginal\",\n    // time zone for CreateDate, \"-08:00\"\n    \"OffsetTimeDigitized\",\n    // srsly who came up with these wholly inconsistent tag names? _why not just\n    // prefix tag names with \"Offset\"?!11_ SADNESS AND WOE\n    // 1 or 2 values: 1. The time zone offset of DateTimeOriginal from GMT in\n    // hours, 2. If present, the time zone offset of ModifyDate (which we\n    // ignore) @see https://www.exiftool.org/TagNames/EXIF.html\n    \"TimeZoneOffset\", // number | number[] | string\n    // We DON'T use \"GeolocationTimezone\" here, as at this layer in the glue\n    // factory we don't have access to the ExifTool option \"ignoreZeroZeroLatLon\"\n];\nfunction incrementZone(z, minutes) {\n    const norm = normalizeZone(z);\n    if (norm == null || true !== norm.isUniversal)\n        return;\n    const fixed = norm.offset(Date.now()); // < arg doesn't matter, it's universal\n    return (0, Number_1.isNumber)(fixed) ? luxon_1.FixedOffsetZone.instance(fixed + minutes) : undefined;\n}\nfunction extractTzOffsetFromTags(t, opts) {\n    const adjustFn = opts?.adjustTimeZoneIfDaylightSavings ??\n        DefaultExifToolOptions_1.defaultAdjustTimeZoneIfDaylightSavings;\n    for (const tagName of exports.TimezoneOffsetTagnames) {\n        const offset = extractZone(t[tagName]);\n        if (offset == null)\n            continue;\n        // UGH. See https://github.com/photostructure/exiftool-vendored.js/issues/215\n        const minutes = adjustFn(t, offset.tz);\n        if (minutes != null) {\n            const adjustedZone = incrementZone(offset.tz, minutes);\n            if (adjustedZone != null)\n                return {\n                    tz: adjustedZone.name,\n                    src: tagName + \" (adjusted for DaylightSavings)\",\n                };\n        }\n        // No fancy adjustments needed, just return the extracted zone:\n        return { tz: offset.tz, src: tagName };\n    }\n    return;\n}\nfunction extractTzOffsetFromDatestamps(t, opts) {\n    if (opts?.inferTimezoneFromDatestamps === true) {\n        for (const tagName of opts.inferTimezoneFromDatestampTags ?? []) {\n            if (t[tagName] != null) {\n                const offset = extractZone(t[tagName]);\n                // Some applications (looking at you, Google Takeout) will add a\n                // spurious \"+00:00\" timezone offset to random datestamp tags, so\n                // ignore UTC offsets here.\n                if (offset != null && !isUTC(offset.tz)) {\n                    return { tz: offset.tz, src: tagName };\n                }\n            }\n        }\n    }\n    return;\n}\nfunction extractTzOffsetFromTimeStamp(t, opts) {\n    if (opts?.inferTimezoneFromTimeStamp !== true)\n        return;\n    const ts = ExifDateTime_1.ExifDateTime.from(t.TimeStamp);\n    if (ts == null)\n        return;\n    for (const tagName of opts.inferTimezoneFromDatestampTags ?? []) {\n        const ea = ExifDateTime_1.ExifDateTime.from(t[tagName]);\n        if (ea == null)\n            continue;\n        if (ea.zone != null) {\n            return { tz: ea.zone, src: tagName };\n        }\n        const deltaMinutes = Math.floor((ea.toEpochSeconds(\"UTC\") - ts.toEpochSeconds()) / 60);\n        const likelyOffsetZone = inferLikelyOffsetMinutes(deltaMinutes);\n        const tz = offsetMinutesToZoneName(likelyOffsetZone);\n        if (tz != null) {\n            return { tz, src: \"offset between \" + tagName + \" and TimeStamp\" };\n        }\n    }\n    return;\n}\n// timezone offsets may be on a 15 minute boundary, but if GPS acquisition is\n// old, this can be spurious. We get less mistakes with a larger multiple, so\n// we're using 30 minutes instead of 15. See\n// https://www.timeanddate.com/time/time-zones-interesting.html\nconst LikelyOffsetMinutes = ValidTimezoneOffsets.map(offsetToMinutes);\nfunction inferLikelyOffsetMinutes(deltaMinutes) {\n    const nearest = (0, Array_1.leastBy)(LikelyOffsetMinutes, (ea) => Math.abs(ea - deltaMinutes));\n    // Reject timezone offsets more than 30 minutes away from the nearest:\n    return Math.abs(nearest - deltaMinutes) < 30 ? nearest : undefined;\n}\n/**\n * Convert blank strings to undefined.\n */\nfunction blankToNull(x) {\n    return x == null || (typeof x === \"string\" && (0, String_1.blank)(x)) ? undefined : x;\n}\nfunction extractTzOffsetFromUTCOffset(t) {\n    const utcSources = {\n        ...(0, Pick_1.pick)(t, \"GPSDateTime\", \"DateTimeUTC\", \"SonyDateTime2\"),\n        GPSDateTimeStamp: (0, Maybe_1.map2)(blankToNull(t.GPSDateStamp), // Example: \"2022:04:13\"\n        blankToNull(t.GPSTimeStamp), // Example: \"23:59:41.001\"\n        (a, b) => a + \" \" + b),\n    };\n    // We can always assume these are in UTC:\n    const utc = (0, Maybe_1.first)([\n        \"GPSDateTime\",\n        \"DateTimeUTC\",\n        \"GPSDateTimeStamp\",\n        \"SonyDateTime2\",\n    ], (tagName) => {\n        const v = utcSources[tagName];\n        const edt = v instanceof ExifDateTime_1.ExifDateTime ? v : ExifDateTime_1.ExifDateTime.fromExifStrict(v);\n        const s = edt != null && (edt.zone == null || isUTC(edt.zone))\n            ? edt.setZone(\"UTC\", { keepLocalTime: true })?.toEpochSeconds()\n            : undefined;\n        return s != null\n            ? {\n                tagName,\n                s,\n            }\n            : undefined;\n    });\n    if (utc == null)\n        return;\n    // If we can find any of these without a zone, the timezone should be the\n    // offset between this time and the GPS time.\n    const dt = (0, Maybe_1.first)(CapturedAtTagNames_1.CapturedAtTagNames, (tagName) => {\n        const edt = ExifDateTime_1.ExifDateTime.fromExifStrict(t[tagName]);\n        const s = edt != null && edt.zone == null\n            ? edt.setZone(\"UTC\", { keepLocalTime: true })?.toEpochSeconds()\n            : undefined;\n        return s != null\n            ? {\n                tagName,\n                s,\n            }\n            : undefined;\n    });\n    if (dt == null)\n        return;\n    const diffSeconds = dt.s - utc.s;\n    const offsetMinutes = inferLikelyOffsetMinutes(diffSeconds / 60);\n    return (0, Maybe_1.map)(offsetMinutesToZoneName(offsetMinutes), (tz) => ({\n        tz,\n        src: `offset between ${dt.tagName} and ${utc.tagName}`,\n    }));\n}\nfunction equivalentZones(a, b) {\n    const az = normalizeZone(a);\n    const bz = normalizeZone(b);\n    return (az != null &&\n        bz != null &&\n        (az.equals(bz) || az.offset(Date.now()) === bz.offset(Date.now())));\n}\nfunction getZoneName(args = {}) {\n    const result = normalizeZone(args.zone)?.name ??\n        normalizeZone(args.zoneName)?.name ??\n        offsetMinutesToZoneName(args.tzoffsetMinutes);\n    return (0, String_1.blank)(result) || result === exports.UnsetZoneName ? undefined : result;\n}\n//# sourceMappingURL=Timezones.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeFormats = timeFormats;\nexports.parseDateTime = parseDateTime;\nexports.setZone = setZone;\nconst luxon_1 = require(\"luxon\");\nconst String_1 = require(\"./String\");\nconst Timezones_1 = require(\"./Timezones\");\nconst TimeFmts = [\n    // I haven't seen times without padded hours, minutes, or seconds in the\n    // wild (yet), so those aren't handled here:\n    { fmt: \"HH:mm:ss.u\", unsetMilliseconds: false },\n    { fmt: \"HH:mm:ss\", unsetMilliseconds: true },\n    { fmt: \"HH:mm\", unsetMilliseconds: true },\n];\nfunction* timeFormats(args) {\n    const inferredZone = (0, String_1.notBlank)(args.defaultZone);\n    for (const prefix of args.formatPrefixes ?? [\"\"]) {\n        for (const timeFmt of TimeFmts) {\n            yield {\n                fmt: prefix + timeFmt.fmt,\n                zone: args.defaultZone,\n                unsetMilliseconds: timeFmt.unsetMilliseconds,\n                inferredZone,\n            };\n        }\n    }\n}\nfunction parseDateTime(text, fmts) {\n    const s = (0, String_1.toS)(text).trim();\n    if (s.length === 0)\n        return;\n    const extractedZone = (0, Timezones_1.extractZone)(s);\n    const input = extractedZone?.leftovers ?? s;\n    for (const ea of fmts) {\n        const dt = luxon_1.DateTime.fromFormat(input, ea.fmt, {\n            setZone: true,\n            zone: extractedZone?.tz ?? ea.zone ?? Timezones_1.UnsetZone,\n        });\n        if (dt == null || !dt.isValid)\n            continue;\n        const unsetZone = extractedZone?.tz == null && (dt.zone == null || dt.zone === Timezones_1.UnsetZone);\n        let inferredZone = extractedZone?.tz != null || unsetZone ? false : ea.inferredZone;\n        if (inferredZone == null) {\n            // this is pretty miserable, but luxon doesn't expose _how_ it got\n            // the zone, so we have to resort to this hack to see if the zone\n            // is inferred:\n            const dt2 = luxon_1.DateTime.fromFormat(input, ea.fmt, { setZone: true });\n            inferredZone = dt.zone !== dt2.zone;\n        }\n        return {\n            dt,\n            fmt: ea.fmt,\n            unsetZone,\n            inferredZone,\n            input,\n            unsetMilliseconds: ea.unsetMilliseconds ?? false,\n        };\n    }\n    return;\n}\nfunction setZone(args) {\n    // This is a bit tricky... We want to keep the local time and just _say_ it\n    // was in the zone of the image **but only if we don't already have a zone.**\n    // If we _do_ have a zone, assume it was already converted by ExifTool into\n    // (probably the system) timezone, which means _don't_ `keepLocalTime`.\n    return args.src.setZone(args.zone, {\n        keepLocalTime: !args.srcHasZone,\n        ...args.opts,\n    });\n}\n//# sourceMappingURL=TimeParsing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExifDateTime = void 0;\nconst luxon_1 = require(\"luxon\");\nconst DateTime_1 = require(\"./DateTime\");\nconst Maybe_1 = require(\"./Maybe\");\nconst Object_1 = require(\"./Object\");\nconst String_1 = require(\"./String\");\nconst TimeParsing_1 = require(\"./TimeParsing\");\nconst Timezones_1 = require(\"./Timezones\");\n/**\n * Encodes an ExifDateTime with an optional tz offset in minutes.\n */\nclass ExifDateTime {\n    year;\n    month;\n    day;\n    hour;\n    minute;\n    second;\n    millisecond;\n    tzoffsetMinutes;\n    rawValue;\n    zoneName;\n    inferredZone;\n    static from(exifOrIso, defaultZone) {\n        return exifOrIso instanceof ExifDateTime\n            ? exifOrIso // already an ExifDateTime\n            : (0, String_1.blank)(exifOrIso)\n                ? undefined // in order of strictness:\n                : this.fromExifStrict(exifOrIso, defaultZone) ??\n                    this.fromISO(exifOrIso, defaultZone) ??\n                    this.fromExifLoose(exifOrIso, defaultZone);\n    }\n    static fromISO(iso, defaultZone) {\n        if ((0, String_1.blank)(iso) || null != iso.match(/^\\d+$/))\n            return undefined;\n        // Unfortunately, DateTime.fromISO() is happy to parse a date with no time,\n        // so we have to do this ourselves:\n        return this.#fromPatterns(iso, (0, TimeParsing_1.timeFormats)({\n            formatPrefixes: [\"y-MM-dd'T'\", \"y-MM-dd \", \"y-M-d \"],\n            defaultZone,\n        }));\n    }\n    /**\n     * Try to parse a date-time string from EXIF. If there is not both a date\n     * and a time component, returns `undefined`.\n     *\n     * @param text from EXIF metadata\n     * @param defaultZone a \"zone name\" to use as a backstop, or default, if\n     * `text` doesn't specify a zone. This may be IANA-formatted, like\n     * \"America/Los_Angeles\", or an offset, like \"UTC-3\". See\n     * `offsetMinutesToZoneName`.\n     */\n    static fromEXIF(text, defaultZone) {\n        if ((0, String_1.blank)(text))\n            return undefined;\n        return (\n        // .fromExifStrict() uses .fromISO() as a backstop\n        this.fromExifStrict(text, defaultZone) ??\n            this.fromExifLoose(text, defaultZone));\n    }\n    static #fromPatterns(text, fmts) {\n        const result = (0, TimeParsing_1.parseDateTime)(text, fmts);\n        return result == null\n            ? undefined\n            : ExifDateTime.fromDateTime(result.dt, {\n                rawValue: text,\n                unsetMilliseconds: result.unsetMilliseconds,\n                inferredZone: result.inferredZone,\n            });\n    }\n    /**\n     * Parse the given date-time string, EXIF-formatted.\n     *\n     * @param text from EXIF metadata, in `y:M:d H:m:s` format (with optional\n     * sub-seconds and/or timezone)\n  \n     * @param defaultZone a \"zone name\" to use as a backstop, or default, if\n     * `text` doesn't specify a zone. This may be IANA-formatted, like\n     * \"America/Los_Angeles\", or an offset, like \"UTC-3\". See\n     * `offsetMinutesToZoneName`.\n     */\n    static fromExifStrict(text, defaultZone) {\n        if ((0, String_1.blank)(text))\n            return undefined;\n        return (this.#fromPatterns(text, (0, TimeParsing_1.timeFormats)({ formatPrefixes: [\"y:MM:dd \", \"y:M:d \"], defaultZone })) ??\n            // Not found yet? Maybe it's in ISO format? See\n            // https://github.com/photostructure/exiftool-vendored.js/issues/71\n            this.fromISO(text, defaultZone));\n    }\n    static *#looseExifFormats(defaultZone) {\n        // The following are from actual datestamps seen in the wild (!!)\n        const formats = [\n            \"MMM d y HH:mm:ss\",\n            \"MMM d y, HH:mm:ss\",\n            // Thu Oct 13 00:12:27 2016:\n            \"ccc MMM d HH:mm:ss y\",\n        ];\n        const zone = (0, String_1.notBlank)(defaultZone) ? defaultZone : Timezones_1.UnsetZone;\n        for (const fmt of formats) {\n            yield { fmt: fmt, zone, inferredZone: true };\n        }\n    }\n    static fromExifLoose(text, defaultZone) {\n        return (0, String_1.blank)(text)\n            ? undefined\n            : this.#fromPatterns(text, this.#looseExifFormats(defaultZone));\n    }\n    static fromDateTime(dt, opts) {\n        if (dt == null || !dt.isValid || dt.year === 0 || dt.year === 1) {\n            return undefined;\n        }\n        return new ExifDateTime(dt.year, dt.month, dt.day, dt.hour, dt.minute, dt.second, dt.millisecond === 0 && true === opts?.unsetMilliseconds\n            ? undefined\n            : dt.millisecond, dt.offset === Timezones_1.UnsetZoneOffsetMinutes ? undefined : dt.offset, opts?.rawValue, dt.zoneName == null || dt.zone?.name === Timezones_1.UnsetZone.name\n            ? undefined\n            : dt.zoneName, opts?.inferredZone);\n    }\n    /**\n     * Create an ExifDateTime from a number of milliseconds since the epoch\n     * (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n     *\n     * @param millis - a number of milliseconds since 1970 UTC\n     *\n     * @param options.rawValue - the original parsed string input\n     * @param options.zone - the zone to place the DateTime into. Defaults to 'local'.\n     * @param options.locale - a locale to set on the resulting DateTime instance\n     * @param options.outputCalendar - the output calendar to set on the resulting DateTime instance\n     * @param options.numberingSystem - the numbering system to set on the resulting DateTime instance\n     */\n    static fromMillis(millis, options = {}) {\n        if (options.zone == null ||\n            [Timezones_1.UnsetZoneName, Timezones_1.UnsetZone].includes(options.zone)) {\n            delete options.zone;\n        }\n        let dt = luxon_1.DateTime.fromMillis(millis, {\n            ...(0, Object_1.omit)(options, \"rawValue\"),\n        });\n        if (options.zone == null) {\n            dt = dt.setZone(Timezones_1.UnsetZone, { keepLocalTime: true });\n        }\n        // TODO: is there a way to provide an invalid millisecond value?\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.fromDateTime(dt, { rawValue: options.rawValue });\n    }\n    static now(opts = {}) {\n        return this.fromMillis(Date.now(), opts);\n    }\n    #dt;\n    zone;\n    constructor(year, month, day, hour, minute, second, millisecond, tzoffsetMinutes, rawValue, zoneName, inferredZone) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n        this.hour = hour;\n        this.minute = minute;\n        this.second = second;\n        this.millisecond = millisecond;\n        this.tzoffsetMinutes = tzoffsetMinutes;\n        this.rawValue = rawValue;\n        this.zoneName = zoneName;\n        this.inferredZone = inferredZone;\n        this.zone = (0, Timezones_1.getZoneName)({ zoneName, tzoffsetMinutes });\n    }\n    get millis() {\n        return this.millisecond;\n    }\n    get hasZone() {\n        return this.zone != null;\n    }\n    get unsetMilliseconds() {\n        return this.millisecond == null;\n    }\n    setZone(zone, opts) {\n        const dt = (0, TimeParsing_1.setZone)({\n            zone,\n            src: this.toDateTime(),\n            srcHasZone: this.hasZone,\n            opts,\n        });\n        return ExifDateTime.fromDateTime(dt, {\n            rawValue: this.rawValue,\n            unsetMilliseconds: this.millisecond == null,\n            inferredZone: opts?.inferredZone ?? true,\n        });\n    }\n    /**\n     * CAUTION: This instance will inherit the system timezone if this instance\n     * has an unset zone (as Luxon doesn't support \"unset\" timezones)\n     */\n    toDateTime(overrideZone) {\n        return (this.#dt ??= luxon_1.DateTime.fromObject({\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n            millisecond: this.millisecond,\n        }, {\n            zone: overrideZone ?? this.zone,\n        }));\n    }\n    toEpochSeconds(overrideZone) {\n        return this.toDateTime(overrideZone).toUnixInteger();\n    }\n    toDate() {\n        return this.toDateTime().toJSDate();\n    }\n    toISOString(options = {}) {\n        return (0, Maybe_1.denull)(this.toDateTime().toISO({\n            suppressMilliseconds: options.suppressMilliseconds ?? this.millisecond == null,\n            includeOffset: this.hasZone && options.includeOffset !== false,\n        }));\n    }\n    toExifString() {\n        return (0, DateTime_1.dateTimeToExif)(this.toDateTime(), {\n            includeOffset: this.hasZone,\n            includeMilliseconds: this.millisecond != null,\n        });\n    }\n    toString() {\n        return this.toISOString();\n    }\n    /**\n     * @return the epoch milliseconds of this\n     */\n    toMillis() {\n        return this.toDateTime().toMillis();\n    }\n    get isValid() {\n        return this.toDateTime().isValid;\n    }\n    toJSON() {\n        return {\n            _ctor: \"ExifDateTime\",\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n            millisecond: this.millisecond,\n            tzoffsetMinutes: this.tzoffsetMinutes,\n            rawValue: this.rawValue,\n            zoneName: this.zoneName,\n            inferredZone: this.inferredZone,\n        };\n    }\n    /**\n     * @return a new ExifDateTime from the given JSON. Note that this instance **may not be valid**.\n     */\n    static fromJSON(json) {\n        return new ExifDateTime(json.year, json.month, json.day, json.hour, json.minute, json.second, json.millisecond, json.tzoffsetMinutes, json.rawValue, json.zoneName, json.inferredZone);\n    }\n    maybeMatchZone(target, maxDeltaMs = 14 * DateTime_1.MinuteMs) {\n        const targetZone = target.zone;\n        if (targetZone == null || !target.hasZone)\n            return;\n        return (this.setZone(targetZone, { keepLocalTime: false })?.ifClose(target, maxDeltaMs) ??\n            this.setZone(targetZone, { keepLocalTime: true })?.ifClose(target, maxDeltaMs));\n    }\n    ifClose(target, maxDeltaMs = 14 * DateTime_1.MinuteMs) {\n        const ts = this.toMillis();\n        const targetTs = target.toMillis();\n        return Math.abs(ts - targetTs) <= maxDeltaMs ? this : undefined;\n    }\n    plus(duration) {\n        let dt = this.toDateTime().plus(duration);\n        if (!this.hasZone) {\n            dt = dt.setZone(Timezones_1.UnsetZone, { keepLocalTime: true });\n        }\n        return ExifDateTime.fromDateTime(dt, this);\n    }\n}\nexports.ExifDateTime = ExifDateTime;\n//# sourceMappingURL=ExifDateTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DayMs = exports.HourMs = exports.MinuteMs = exports.SecondMs = void 0;\nexports.validDateTime = validDateTime;\nexports.isDateOrTime = isDateOrTime;\nexports.dateTimeToExif = dateTimeToExif;\nexports.toExifString = toExifString;\nexports.hms = hms;\nconst luxon_1 = require(\"luxon\");\nconst ExifDate_1 = require(\"./ExifDate\");\nconst ExifDateTime_1 = require(\"./ExifDateTime\");\nconst ExifTime_1 = require(\"./ExifTime\");\nfunction validDateTime(dt) {\n    return dt != null && dt.isValid;\n}\nexports.SecondMs = 1000;\nexports.MinuteMs = 60 * exports.SecondMs;\nexports.HourMs = 60 * exports.MinuteMs;\nexports.DayMs = 24 * exports.HourMs;\nfunction isDateOrTime(o) {\n    return (o instanceof ExifDateTime_1.ExifDateTime ||\n        o instanceof ExifDate_1.ExifDate ||\n        o instanceof ExifTime_1.ExifTime ||\n        luxon_1.DateTime.isDateTime(o));\n}\nfunction dateTimeToExif(d, opts) {\n    return d.toFormat(\"y:MM:dd HH:mm:ss\" +\n        (opts?.includeMilliseconds === true ? \".u\" : \"\") +\n        (opts?.includeOffset === false ? \"\" : \"ZZ\"));\n}\nfunction toExifString(d) {\n    if (luxon_1.DateTime.isDateTime(d)) {\n        return dateTimeToExif(d);\n    }\n    else {\n        return d?.toExifString?.();\n    }\n}\nfunction hms(d, opts) {\n    return d.toFormat(\"HH:mm:ss\" + (opts?.includeMilliseconds === true ? \".SSS\" : \"\"));\n}\n//# sourceMappingURL=DateTime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExifDate = void 0;\nconst luxon_1 = require(\"luxon\");\nconst DateTime_1 = require(\"./DateTime\");\nconst Maybe_1 = require(\"./Maybe\");\nconst String_1 = require(\"./String\");\nconst StrictExifRE = /^\\d{1,4}:\\d{1,2}:\\d{1,2}|\\d{1,4}-\\d{1,2}-\\d{1,2}$/;\nconst LooseExifRE = /^\\S+\\s+\\S+\\s+\\S+$/;\n/**\n * Encodes an ExifDate\n */\nclass ExifDate {\n    year;\n    month;\n    day;\n    rawValue;\n    static from(exifOrIso) {\n        return (\n        // in order of strictness:\n        this.fromExifStrict(exifOrIso) ??\n            this.fromISO(exifOrIso) ??\n            this.fromExifLoose(exifOrIso));\n    }\n    static fromISO(text) {\n        return StrictExifRE.test((0, String_1.toS)(text).trim())\n            ? this.fromDateTime(luxon_1.DateTime.fromISO(text), text)\n            : undefined;\n    }\n    static fromPatterns(text, fmts) {\n        if ((0, String_1.blank)(text))\n            return;\n        text = (0, String_1.toS)(text).trim();\n        for (const fmt of fmts) {\n            const dt = luxon_1.DateTime.fromFormat(text, fmt);\n            if ((0, DateTime_1.validDateTime)(dt)) {\n                return this.fromDateTime(dt, text);\n            }\n        }\n        return;\n    }\n    // These are all formats I've seen in the wild from exiftool's output.\n    // More iterations might make sense, like \"d MMM, y\" or \"MMM d, y\", but I\n    // want to be constrained in what I consider a valid date to lessen the\n    // chance of misinterpreting a given value.\n    static fromExifStrict(text) {\n        return StrictExifRE.test((0, String_1.toS)(text).trim())\n            ? this.fromPatterns(text, [\"y:MM:dd\", \"y-MM-dd\", \"y:M:d\"])\n            : undefined;\n    }\n    static fromExifLoose(text) {\n        // Unfortunately, Luxon parses \"00\" and \"01\" as _today_. So if we don't\n        // three non-blank strings parts, reject.\n        return LooseExifRE.test((0, String_1.toS)(text).trim())\n            ? this.fromPatterns(text, [\"MMM d y\", \"MMMM d y\"])\n            : undefined;\n    }\n    static fromEXIF(text) {\n        return (0, Maybe_1.firstDefinedThunk)([\n            () => this.fromExifStrict(text),\n            () => this.fromExifLoose(text),\n        ]);\n    }\n    static fromDateTime(dt, rawValue) {\n        return (0, DateTime_1.validDateTime)(dt)\n            ? new ExifDate(dt.year, dt.month, dt.day, rawValue)\n            : undefined;\n    }\n    constructor(year, // full year (probably 2019-ish, but maybe Japanese 30-ish). See https://ericasadun.com/2018/12/25/iso-8601-yyyy-yyyy-and-why-your-year-may-be-wrong/\n    month, // 1-12, (no crazy 0-11 nonsense from Date!)\n    day, // 1-31\n    rawValue) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n        this.rawValue = rawValue;\n    }\n    toDate() {\n        return new Date(this.year, this.month - 1, this.day);\n    }\n    /**\n     * @param deltaMs defaults to 12 hours, so toMillis() is in the middle of the day.\n     *\n     * @return the epoch milliseconds for this day in UTC, plus `deltaMs` milliseconds.\n     */\n    toMillis(deltaMs = 12 * DateTime_1.HourMs) {\n        return this.toDate().getTime() + deltaMs;\n    }\n    toISOString() {\n        return this.toString(\"-\");\n    }\n    toExifString() {\n        return this.toString(\":\");\n    }\n    toString(sep = \"-\") {\n        return `${this.year}${sep}${(0, String_1.pad2)(this.month, this.day).join(sep)}`;\n    }\n    toJSON() {\n        return {\n            _ctor: \"ExifDate\",\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            rawValue: this.rawValue,\n        };\n    }\n    static fromJSON(json) {\n        return new ExifDate(json.year, json.month, json.day, json.rawValue);\n    }\n}\nexports.ExifDate = ExifDate;\n//# sourceMappingURL=ExifDate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseCoordinates = parseCoordinates;\nexports.parseDecimalCoordinate = parseDecimalCoordinate;\nexports.parseCoordinate = parseCoordinate;\nconst Number_1 = require(\"./Number\");\nconst Object_1 = require(\"./Object\");\n// Constants\nconst MAX_LATITUDE_DEGREES = 90;\nconst MAX_LONGITUDE_DEGREES = 180;\nclass CoordinateParseError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"CoordinateParseError\";\n    }\n}\n/**\n * Parses a string containing both latitude and longitude coordinates.\n * @param input - String containing both coordinates\n * @returns Object containing latitude and longitude in decimal degrees, or undefined if parsing fails\n * @throws CoordinateParseError if the input format is invalid\n */\nfunction parseCoordinates(input) {\n    if (!input?.trim()) {\n        throw new CoordinateParseError(\"Input string cannot be empty\");\n    }\n    let latitude;\n    let longitude;\n    for (const coord of _parseCoordinates(input)) {\n        if (!coord.direction) {\n            throw new CoordinateParseError(\"Direction is required for position parsing\");\n        }\n        if (coord.direction === \"S\" || coord.direction === \"N\") {\n            if (latitude !== undefined) {\n                throw new CoordinateParseError(\"Multiple latitude values found\");\n            }\n            latitude = toDecimalDegrees(coord);\n        }\n        else {\n            if (longitude !== undefined) {\n                throw new CoordinateParseError(\"Multiple longitude values found\");\n            }\n            longitude = toDecimalDegrees(coord);\n        }\n    }\n    const missing = [];\n    if (latitude === undefined)\n        missing.push(\"latitude\");\n    if (longitude === undefined)\n        missing.push(\"longitude\");\n    if (latitude === undefined || longitude === undefined) {\n        throw new CoordinateParseError(`Missing ${missing.join(\" and \")}`);\n    }\n    else {\n        return { latitude, longitude };\n    }\n}\n/**\n * Parses a string containing one or more coordinates.\n * @param input - String containing coordinates\n * @returns Array of parsed coordinates\n */\nfunction _parseCoordinates(input) {\n    if (!input?.trim()) {\n        throw new CoordinateParseError(\"Input string cannot be empty\");\n    }\n    const result = [];\n    let remainder = input;\n    do {\n        const coord = parseCoordinate(remainder);\n        remainder = coord.remainder ?? \"\";\n        result.push((0, Object_1.omit)(coord, \"remainder\"));\n    } while (remainder.length > 0);\n    return result;\n}\n/**\n * Parses a coordinate string in decimal degrees format.\n * @param input - String containing a single coordinate\n * @returns Object containing degrees and direction, or undefined if parsing fails\n * @throws CoordinateParseError if the format is not decimal degrees or direction is missing\n */\nfunction parseDecimalCoordinate(input) {\n    if (!input?.trim()) {\n        throw new CoordinateParseError(\"Input string cannot be empty\");\n    }\n    const coord = parseCoordinate(input);\n    if (coord.format !== \"D\") {\n        throw new CoordinateParseError(\"Expected decimal degrees format\");\n    }\n    if (!coord.direction) {\n        throw new CoordinateParseError(\"Missing direction\");\n    }\n    return { degrees: toDecimalDegrees(coord), direction: coord.direction };\n}\n/**\n * Parses a single coordinate string into its components.\n * @param input - String containing a single coordinate\n * @returns Parsed coordinate object\n * @throws CoordinateParseError if the format is invalid\n */\nfunction parseCoordinate(input) {\n    if (!input?.trim()) {\n        throw new CoordinateParseError(\"Input string cannot be empty\");\n    }\n    const dmsPattern = /^(?<degrees>-?\\d+)\\s*(?:°|DEG)\\s*(?<minutes>\\d+)\\s*['′]\\s*(?<seconds>\\d+(?:\\.\\d+)?)\\s*[\"″]\\s?(?<direction>[NSEW])?[\\s,]{0,3}(?<remainder>.*)$/i;\n    const dmPattern = /^(?<degrees>-?\\d+)\\s*(?:°|DEG)\\s*(?<minutes>\\d+(?:\\.\\d+)?)\\s?['′]\\s?(?<direction>[NSEW])?(?<remainder>.*)$/i;\n    const dPattern = /^(?<degrees>-?\\d+(?:\\.\\d+)?)\\s*(?:°|DEG)\\s?(?<direction>[NSEW])?(?<remainder>.*)$/i;\n    const trimmedInput = input.trimStart();\n    let match;\n    let format;\n    if ((match = trimmedInput.match(dmsPattern))) {\n        format = \"DMS\";\n    }\n    else if ((match = trimmedInput.match(dmPattern))) {\n        format = \"DM\";\n    }\n    else if ((match = trimmedInput.match(dPattern))) {\n        format = \"D\";\n    }\n    else {\n        throw new CoordinateParseError(\"Invalid coordinate format. Expected one of:\\n\" +\n            \"  DDD° MM' SS.S\\\" k (deg/min/sec)\\n\" +\n            \"  DDD° MM.MMM' k (deg/decimal minutes)\\n\" +\n            \"  DDD.DDDDD° (decimal degrees)\\n\" +\n            \"  (where k indicates direction: N, S, E, or W)\");\n    }\n    if (!match.groups) {\n        throw new CoordinateParseError(\"Failed to parse coordinate components\");\n    }\n    const { degrees: degreesStr, minutes: minutesStr, seconds: secondsStr, direction: directionStr, remainder, } = match.groups;\n    const direction = directionStr?.toUpperCase();\n    const degrees = parseFloat(degreesStr);\n    let minutes;\n    let seconds;\n    if (format === \"DMS\") {\n        minutes = parseInt(minutesStr, 10);\n        seconds = parseFloat(secondsStr);\n        if (minutes >= 60) {\n            throw new CoordinateParseError(\"Minutes must be between 0 and 59\");\n        }\n        if (seconds >= 60) {\n            throw new CoordinateParseError(\"Seconds must be between 0 and 59.999...\");\n        }\n    }\n    else if (format === \"DM\") {\n        minutes = parseFloat(minutesStr);\n        if (minutes >= 60) {\n            throw new CoordinateParseError(\"Minutes must be between 0 and 59.999...\");\n        }\n    }\n    const maxDegrees = direction === \"N\" || direction === \"S\"\n        ? MAX_LATITUDE_DEGREES\n        : MAX_LONGITUDE_DEGREES;\n    if (Math.abs(degrees) > maxDegrees) {\n        throw new CoordinateParseError(`Degrees must be between -${maxDegrees} and ${maxDegrees} for ${direction} direction`);\n    }\n    return {\n        degrees,\n        minutes,\n        seconds,\n        direction,\n        format,\n        remainder: remainder?.trim(),\n    };\n}\nfunction toDecimalDegrees(coord) {\n    let decimal = coord.degrees;\n    decimal += (coord.minutes ?? 0) / 60.0;\n    decimal += (coord.seconds ?? 0) / 3600.0;\n    if (coord.direction === \"S\" || coord.direction === \"W\") {\n        decimal = -Math.abs(decimal);\n    }\n    const maxDegrees = coord.direction === \"N\" || coord.direction === \"S\"\n        ? MAX_LATITUDE_DEGREES\n        : MAX_LONGITUDE_DEGREES;\n    const axis = coord.direction === \"N\" || coord.direction === \"S\"\n        ? \"latitude\"\n        : \"longitude\";\n    if (Math.abs(decimal) > maxDegrees) {\n        throw new CoordinateParseError(`Degrees must be between -${maxDegrees} and ${maxDegrees} for ${axis}`);\n    }\n    // Most consumer devices can only resolve 4-5 decimal places (1m resolution)\n    return (0, Number_1.roundToDecimalPlaces)(decimal, 6);\n}\n//# sourceMappingURL=CoordinateParser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGPSLocation = parseGPSLocation;\nconst CoordinateParser_1 = require(\"./CoordinateParser\");\nconst Number_1 = require(\"./Number\");\nconst Pick_1 = require(\"./Pick\");\nconst String_1 = require(\"./String\");\nconst MAX_LAT_LON_DIFF = 1;\nfunction parsePosition(position) {\n    if ((0, String_1.blank)(position))\n        return;\n    const [lat, lon] = (0, String_1.toS)(position).split(/[, ]+/).map(Number_1.toFloat);\n    return lat != null && lon != null ? [lat, lon] : undefined;\n}\nfunction processCoordinate(config, warnings) {\n    let { value, ref } = config;\n    const { geoValue, coordinateType } = config;\n    const { expectedRefPositive, expectedRefNegative, max } = config;\n    let isInvalid = false;\n    ref =\n        ref?.trim().toUpperCase().slice(0, 1) ??\n            (value < 0 ? expectedRefNegative : expectedRefPositive);\n    // Check range\n    if (Math.abs(value) > max) {\n        isInvalid = true;\n        warnings.push(`Invalid GPS${coordinateType}: ${value} is out of range`);\n        return { value, ref, isInvalid };\n    }\n    // Apply hemisphere reference\n    if (ref === expectedRefNegative) {\n        value = -Math.abs(value);\n    }\n    // Check for mismatched signs with GeolocationPosition\n    if (geoValue != null &&\n        Math.abs(Math.abs(geoValue) - Math.abs(value)) < MAX_LAT_LON_DIFF) {\n        if (Math.sign(geoValue) !== Math.sign(value)) {\n            value = -value;\n            warnings.push(`Corrected GPS${coordinateType} sign based on GeolocationPosition`);\n        }\n        // Force ref to correct value\n        const expectedRef = geoValue < 0 ? expectedRefNegative : expectedRefPositive;\n        if (ref !== expectedRef) {\n            ref = expectedRef;\n            warnings.push(`Corrected GPS${coordinateType}Ref to ${expectedRef} based on GeolocationPosition`);\n        }\n    }\n    // Ensure ref matches coordinate sign\n    const expectedRef = value < 0 ? expectedRefNegative : expectedRefPositive;\n    if (ref != null && ref !== expectedRef) {\n        warnings.push(`Corrected GPS${coordinateType}Ref to ${ref} to match coordinate sign`);\n    }\n    ref = expectedRef;\n    return { value, ref, isInvalid };\n}\nfunction parseGPSLocation(tags, opts) {\n    let parsed = false;\n    const warnings = [];\n    const result = (0, Pick_1.pick)(tags, \"GPSLatitude\", \"GPSLatitudeRef\", \"GPSLongitude\", \"GPSLongitudeRef\");\n    if ((0, String_1.notBlankString)(tags.GPSPosition)) {\n        try {\n            const pos = (0, CoordinateParser_1.parseCoordinates)(tags.GPSPosition);\n            if (opts.ignoreZeroZeroLatLon === true &&\n                pos.latitude === 0 &&\n                pos.longitude === 0) {\n                warnings.push(\"Ignoring zero coordinates from GPSPosition\");\n            }\n            else {\n                parsed = true;\n                result.GPSLatitude = pos.latitude;\n                result.GPSLongitude = pos.longitude;\n                result.GPSLatitudeRef = pos.latitude < 0 ? \"S\" : \"N\";\n                result.GPSLongitudeRef = pos.longitude < 0 ? \"W\" : \"E\";\n            }\n        }\n        catch (e) {\n            warnings.push(\"Error parsing GPSPosition: \" + e);\n        }\n    }\n    // Are both GPSLatitude and GPSLongitude available?\n    if (!parsed && (0, String_1.notBlankString)(tags.GPSLatitude) && (0, String_1.notBlankString)(tags.GPSLongitude)) {\n        try {\n            const lat = (0, CoordinateParser_1.parseCoordinate)(tags.GPSLatitude);\n            const lon = (0, CoordinateParser_1.parseCoordinate)(tags.GPSLongitude);\n            if (opts.ignoreZeroZeroLatLon === true &&\n                lat.degrees === 0 &&\n                lon.degrees === 0) {\n                warnings.push(\"Ignoring zero coordinates from GPSLatitude/GPSLongitude\");\n                return { invalid: true, warnings };\n            }\n            else {\n                result.GPSLatitude = lat.degrees;\n                result.GPSLongitude = lon.degrees;\n                result.GPSLatitudeRef = lat.direction;\n                result.GPSLongitudeRef = lon.direction;\n            }\n        }\n        catch (e) {\n            warnings.push(`Error parsing GPSLatitude or GPSLongitude: ` + e);\n        }\n    }\n    // Early return if no GPS data\n    if (!(0, Number_1.isNumber)(result.GPSLatitude) && !(0, Number_1.isNumber)(result.GPSLongitude)) {\n        return {};\n    }\n    // Check for zero coordinates when ignoreZeroZeroLatLon is true\n    if (opts.ignoreZeroZeroLatLon === true &&\n        result.GPSLatitude === 0 &&\n        result.GPSLongitude === 0) {\n        warnings.push(\"Ignoring zero GPSLatitude and GPSLongitude\");\n        return { invalid: true, warnings };\n    }\n    // Parse GeolocationPosition\n    const [geoLat, geoLon] = parsePosition(tags.GeolocationPosition) ?? [\n        undefined,\n        undefined,\n    ];\n    let isInvalid = false;\n    // Process latitude\n    if ((0, Number_1.isNumber)(result.GPSLatitude)) {\n        const latitudeResult = processCoordinate({\n            value: result.GPSLatitude,\n            ref: result.GPSLatitudeRef,\n            geoValue: geoLat,\n            expectedRefPositive: \"N\",\n            expectedRefNegative: \"S\",\n            max: 90,\n            coordinateType: \"Latitude\",\n        }, warnings);\n        result.GPSLatitude = latitudeResult.value;\n        result.GPSLatitudeRef = latitudeResult.ref;\n        isInvalid = isInvalid || latitudeResult.isInvalid;\n    }\n    // Process longitude\n    if ((0, Number_1.isNumber)(result.GPSLongitude)) {\n        const longitudeResult = processCoordinate({\n            value: result.GPSLongitude,\n            ref: result.GPSLongitudeRef,\n            geoValue: geoLon,\n            expectedRefPositive: \"E\",\n            expectedRefNegative: \"W\",\n            max: 180,\n            coordinateType: \"Longitude\",\n        }, warnings);\n        result.GPSLongitude = longitudeResult.value;\n        result.GPSLongitudeRef = longitudeResult.ref;\n        isInvalid = isInvalid || longitudeResult.isInvalid;\n    }\n    return isInvalid\n        ? { invalid: true, warnings }\n        : { result, invalid: false, warnings };\n}\n//# sourceMappingURL=GPS.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OnlyZerosRE = void 0;\n// Reject times whose raw value is \"0\" or \"00\". TODO: We may want to reject\n// \"00:00\", but midnight is a valid time--we'd have to reject 00:00 only if we\n// could be certain this photo wasn't taken exactly at midnight.\nexports.OnlyZerosRE = /^0+$/;\n//# sourceMappingURL=OnlyZerosRE.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadTask = exports.DefaultReadTaskOptions = exports.ReadTaskOptionFields = void 0;\nexports.nullish = nullish;\nconst batch_cluster_1 = require(\"batch-cluster\");\nconst _path = __importStar(require(\"node:path\"));\nconst Array_1 = require(\"./Array\");\nconst BinaryField_1 = require(\"./BinaryField\");\nconst Boolean_1 = require(\"./Boolean\");\nconst DefaultExifToolOptions_1 = require(\"./DefaultExifToolOptions\");\nconst ErrorsAndWarnings_1 = require(\"./ErrorsAndWarnings\");\nconst ExifDate_1 = require(\"./ExifDate\");\nconst ExifDateTime_1 = require(\"./ExifDateTime\");\nconst ExifTime_1 = require(\"./ExifTime\");\nconst ExifToolOptions_1 = require(\"./ExifToolOptions\");\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nconst FilenameCharsetArgs_1 = require(\"./FilenameCharsetArgs\");\nconst GPS_1 = require(\"./GPS\");\nconst Lazy_1 = require(\"./Lazy\");\nconst Number_1 = require(\"./Number\");\nconst OnlyZerosRE_1 = require(\"./OnlyZerosRE\");\nconst Pick_1 = require(\"./Pick\");\nconst String_1 = require(\"./String\");\nconst Timezones_1 = require(\"./Timezones\");\n/**\n * tag names we don't need to muck with, but name conventions (like including\n * \"date\") suggest they might be date/time tags\n */\nconst PassthroughTags = [\n    \"ExifToolVersion\",\n    \"DateStampMode\",\n    \"Sharpness\",\n    \"Firmware\",\n    \"DateDisplayFormat\",\n];\nexports.ReadTaskOptionFields = [\n    \"backfillTimezones\",\n    \"defaultVideosToUTC\",\n    \"geolocation\",\n    \"geoTz\",\n    \"ignoreMinorErrors\",\n    \"ignoreZeroZeroLatLon\",\n    \"imageHashType\",\n    \"includeImageDataMD5\",\n    \"inferTimezoneFromDatestamps\",\n    \"inferTimezoneFromDatestampTags\",\n    \"inferTimezoneFromTimeStamp\",\n    \"numericTags\",\n    \"useMWG\",\n    \"struct\",\n    \"readArgs\",\n    \"adjustTimeZoneIfDaylightSavings\",\n    \"preferTimezoneInferenceFromGps\",\n];\nconst NullIsh = [\"undef\", \"null\", \"undefined\"];\nfunction nullish(s) {\n    return s == null || ((0, String_1.isString)(s) && NullIsh.includes(s.trim()));\n}\nexports.DefaultReadTaskOptions = {\n    ...(0, Pick_1.pick)(DefaultExifToolOptions_1.DefaultExifToolOptions, ...exports.ReadTaskOptionFields),\n};\nconst MaybeDateOrTimeRe = /when|date|time|subsec|creat|modif/i;\nclass ReadTask extends ExifToolTask_1.ExifToolTask {\n    sourceFile;\n    args;\n    options;\n    degroup;\n    #raw = {};\n    #rawDegrouped = {};\n    #tags = {};\n    /**\n     * @param sourceFile the file to read\n     * @param args the full arguments to pass to exiftool that take into account\n     * the flags in `options`\n     */\n    constructor(sourceFile, args, options) {\n        super(args, options);\n        this.sourceFile = sourceFile;\n        this.args = args;\n        this.options = options;\n        // See https://github.com/photostructure/exiftool-vendored.js/issues/147#issuecomment-1642580118\n        this.degroup = this.args.includes(\"-G\");\n        this.#tags = { SourceFile: sourceFile };\n        this.#tags.errors = this.errors;\n    }\n    static for(filename, options) {\n        const opts = (0, ExifToolOptions_1.handleDeprecatedOptions)({\n            ...exports.DefaultReadTaskOptions,\n            ...options,\n        });\n        const sourceFile = _path.resolve(filename);\n        const args = [...FilenameCharsetArgs_1.Utf8FilenameCharsetArgs, \"-json\", ...(0, Array_1.toA)(opts.readArgs)];\n        // \"-api struct=undef\" doesn't work: but it's the same as struct=0:\n        args.push(\"-api\", \"struct=\" + ((0, Number_1.isNumber)(opts.struct) ? opts.struct : \"0\"));\n        if (opts.useMWG) {\n            args.push(\"-use\", \"MWG\");\n        }\n        if (opts.imageHashType != null && opts.imageHashType !== false) {\n            // See https://exiftool.org/forum/index.php?topic=14706.msg79218#msg79218\n            args.push(\"-api\", \"requesttags=imagedatahash\");\n            args.push(\"-api\", \"imagehashtype=\" + opts.imageHashType);\n        }\n        if (true === opts.geolocation) {\n            args.push(\"-api\", \"geolocation\");\n        }\n        // IMPORTANT: \"-all\" must be after numeric tag references, as the first\n        // reference in wins\n        args.push(...opts.numericTags.map((ea) => \"-\" + ea + \"#\"));\n        // We have to add a -all or else we'll only get the numericTags. sad.\n        // TODO: Do you need -xmp:all, -all, or -all:all? Is -* better?\n        args.push(\"-all\", sourceFile);\n        return new ReadTask(sourceFile, args, opts);\n    }\n    toString() {\n        return \"ReadTask\" + this.sourceFile + \")\";\n    }\n    // only exposed for tests\n    parse(data, err) {\n        try {\n            this.#raw = JSON.parse(data)[0];\n        }\n        catch (jsonError) {\n            // TODO: should restart exiftool?\n            (0, batch_cluster_1.logger)().warn(\"ExifTool.ReadTask(): Invalid JSON\", {\n                data,\n                err,\n                jsonError,\n            });\n            throw err ?? jsonError;\n        }\n        // ExifTool does \"humorous\" things to paths, like flip path separators. resolve() undoes that.\n        const SourceFile = _path.resolve(this.#raw.SourceFile);\n        // Sanity check that the result is for the file we want:\n        if (SourceFile !== this.sourceFile) {\n            // Throw an error rather than add an errors string because this is *really* bad:\n            throw new Error(`Internal error: unexpected SourceFile of ${this.#raw.SourceFile} for file ${this.sourceFile}`);\n        }\n        return this.#parseTags();\n    }\n    #isVideo() {\n        return String(this.#rawDegrouped?.MIMEType).startsWith(\"video/\");\n    }\n    #defaultToUTC() {\n        return this.#isVideo() && this.options.defaultVideosToUTC;\n    }\n    #tagName(k) {\n        return this.degroup ? k.split(\":\")[1] ?? k : k;\n    }\n    #parseTags() {\n        if (this.degroup) {\n            this.#rawDegrouped = {};\n            for (const [key, value] of Object.entries(this.#raw)) {\n                const k = this.#tagName(key);\n                this.#rawDegrouped[k] = value;\n            }\n        }\n        else {\n            this.#rawDegrouped = this.#raw;\n        }\n        // avoid casting `this.tags as any` for the rest of the function:\n        const tags = this.#tags;\n        // Must be run before extracting tz offset, to clear out invalid GPS\n        // GeolocationTimeZone\n        this.#extractGpsMetadata();\n        const tzSrc = this.#extractTzOffset();\n        if (tzSrc) {\n            tags.tz = tzSrc.tz;\n            tags.tzSource = tzSrc.src;\n        }\n        for (const [key, value] of Object.entries(this.#raw)) {\n            const k = this.#tagName(key);\n            const v = this.#parseTag(k, value);\n            // Note that we set `key` (which may include a group prefix):\n            if (v != null)\n                tags[key] = v;\n        }\n        // we could `return {...tags, ...errorsAndWarnings(this, tags)}` but tags is\n        // a chonky monster, and we don't want to double the work for the poor\n        // garbage collector.\n        const { errors, warnings } = (0, ErrorsAndWarnings_1.errorsAndWarnings)(this, tags);\n        tags.errors = errors;\n        tags.warnings = warnings;\n        return tags;\n    }\n    #extractGpsMetadata = (0, Lazy_1.lazy)(() => (0, GPS_1.parseGPSLocation)(this.#rawDegrouped, this.options));\n    #gpsIsInvalid = (0, Lazy_1.lazy)(() => this.#extractGpsMetadata()?.invalid ?? false);\n    #gpsResults = (0, Lazy_1.lazy)(() => this.#gpsIsInvalid() ? {} : this.#extractGpsMetadata()?.result ?? {});\n    #extractTzOffsetFromGps = (0, Lazy_1.lazy)(() => {\n        const gps = this.#extractGpsMetadata();\n        const lat = gps?.result?.GPSLatitude;\n        const lon = gps?.result?.GPSLongitude;\n        if (gps == null || gps.invalid === true || lat == null || lon == null)\n            return;\n        // First try GeolocationTimeZone:\n        const tz = (0, Timezones_1.normalizeZone)(this.#rawDegrouped.GeolocationTimeZone);\n        if (tz != null) {\n            return {\n                tz: tz.name,\n                src: \"GeolocationTimeZone\",\n            };\n        }\n        try {\n            const geoTz = this.options.geoTz(lat, lon);\n            const zone = (0, Timezones_1.normalizeZone)(geoTz);\n            if (zone != null) {\n                return {\n                    tz: zone.name,\n                    src: \"GPSLatitude/GPSLongitude\",\n                };\n            }\n        }\n        catch (error) {\n            this.warnings.push(\"Failed to determine timezone from GPS coordinates: \" + error);\n        }\n        return;\n    });\n    #tz = (0, Lazy_1.lazy)(() => this.#extractTzOffset()?.tz);\n    #extractTzOffset = (0, Lazy_1.lazy)(() => {\n        if (true === this.options.preferTimezoneInferenceFromGps) {\n            const fromGps = this.#extractTzOffsetFromGps();\n            if (fromGps != null) {\n                return fromGps;\n            }\n        }\n        return ((0, Timezones_1.extractTzOffsetFromTags)(this.#rawDegrouped, this.options) ??\n            this.#extractTzOffsetFromGps() ??\n            (0, Timezones_1.extractTzOffsetFromDatestamps)(this.#rawDegrouped, this.options) ??\n            // See https://github.com/photostructure/exiftool-vendored.js/issues/113\n            // and https://github.com/photostructure/exiftool-vendored.js/issues/156\n            // Videos are frequently encoded in UTC, but don't include the\n            // timezone offset in their datetime stamps.\n            (this.#defaultToUTC()\n                ? {\n                    tz: \"UTC\",\n                    src: \"defaultVideosToUTC\",\n                }\n                : // not applicable:\n                    undefined) ??\n            // This is a last-ditch estimation heuristic:\n            (0, Timezones_1.extractTzOffsetFromUTCOffset)(this.#rawDegrouped) ??\n            // No, really, this is the even worse than UTC offset heuristics:\n            (0, Timezones_1.extractTzOffsetFromTimeStamp)(this.#rawDegrouped, this.options));\n    });\n    #parseTag(tagName, value) {\n        if (nullish(value))\n            return undefined;\n        try {\n            if (PassthroughTags.indexOf(tagName) >= 0) {\n                return value;\n            }\n            if (tagName.startsWith(\"GPS\") || tagName.startsWith(\"Geolocation\")) {\n                // If it's bad, strip off everything:\n                if (this.#gpsIsInvalid())\n                    return undefined;\n                // If we parsed out a better value, use that:\n                const parsed = this.#gpsResults()[tagName];\n                if (parsed != null)\n                    return parsed;\n                // Otherwise, parse the raw value like any other tag:\n            }\n            if (Array.isArray(value)) {\n                return value.map((ea) => this.#parseTag(tagName, ea));\n            }\n            if (typeof value === \"object\") {\n                const result = {};\n                for (const [k, v] of Object.entries(value)) {\n                    result[k] = this.#parseTag(tagName + \".\" + k, v);\n                }\n                return result;\n            }\n            if (typeof value === \"string\") {\n                const b = BinaryField_1.BinaryField.fromRawValue(value);\n                if (b != null)\n                    return b;\n                if (/Valid$/.test(tagName)) {\n                    const b = (0, Boolean_1.toBoolean)(value);\n                    if (b != null)\n                        return b;\n                }\n                if (MaybeDateOrTimeRe.test(tagName) &&\n                    // Reject date/time keys that are \"0\" or \"00\" (found in Canon\n                    // SubSecTime values)\n                    !OnlyZerosRE_1.OnlyZerosRE.test(value)) {\n                    // if #defaultToUTC() is true, _we actually think zoneless\n                    // datestamps are all in UTC_, rather than being in `this.tz` (which\n                    // may be from GPS or other heuristics). See issue #153.\n                    const tz = isUtcTagName(tagName) || this.#defaultToUTC()\n                        ? \"UTC\"\n                        : this.options.backfillTimezones\n                            ? this.#tz()\n                            : undefined;\n                    // Time-only tags have \"time\" but not \"date\" in their name:\n                    const keyIncludesTime = /subsec|time/i.test(tagName);\n                    const keyIncludesDate = /date/i.test(tagName);\n                    const keyIncludesWhen = /when/i.test(tagName); // < ResourceEvent.When\n                    const result = (keyIncludesTime || keyIncludesDate || keyIncludesWhen\n                        ? ExifDateTime_1.ExifDateTime.from(value, tz)\n                        : undefined) ??\n                        (keyIncludesTime || keyIncludesWhen\n                            ? ExifTime_1.ExifTime.fromEXIF(value, tz)\n                            : undefined) ??\n                        (keyIncludesDate || keyIncludesWhen\n                            ? ExifDate_1.ExifDate.from(value)\n                            : undefined) ??\n                        value;\n                    const defaultTz = this.#tz();\n                    if (this.options.backfillTimezones &&\n                        result != null &&\n                        defaultTz != null &&\n                        result instanceof ExifDateTime_1.ExifDateTime &&\n                        this.#defaultToUTC() &&\n                        !isUtcTagName(tagName) &&\n                        true === result.inferredZone) {\n                        return result.setZone(defaultTz);\n                    }\n                    return result;\n                }\n            }\n            // Trust that ExifTool rendered the value with the correct type in JSON:\n            return value;\n        }\n        catch (e) {\n            this.warnings.push(`Failed to parse ${tagName} with value ${JSON.stringify(value)}: ${e}`);\n            return value;\n        }\n    }\n}\nexports.ReadTask = ReadTask;\nfunction isUtcTagName(tagName) {\n    return tagName.includes(\"UTC\") || tagName.startsWith(\"GPS\");\n}\n//# sourceMappingURL=ReadTask.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RewriteAllTagsTask = void 0;\nconst _path = __importStar(require(\"node:path\"));\nconst Array_1 = require(\"./Array\");\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nconst FilenameCharsetArgs_1 = require(\"./FilenameCharsetArgs\");\nclass RewriteAllTagsTask extends ExifToolTask_1.ExifToolTask {\n    constructor(args, options) {\n        super(args, options);\n    }\n    static for(imgSrc, imgDest, opts) {\n        // -all= -tagsfromfile @ -all:all -unsafe -icc_profile bad.jpg\n        const args = (0, Array_1.compact)([\n            ...FilenameCharsetArgs_1.Utf8FilenameCharsetArgs,\n            \"-all=\",\n            \"-tagsfromfile\",\n            \"@\",\n            \"-all:all\",\n            \"-unsafe\",\n            \"-icc_profile\",\n            opts.allowMakerNoteRepair ? \"-F\" : undefined,\n            \"-out\",\n            _path.resolve(imgDest),\n            _path.resolve(imgSrc),\n        ]);\n        return new RewriteAllTagsTask(args, opts);\n    }\n    parse(data, error) {\n        if (error != null) {\n            const str = String(error);\n            // Ignore warnings:\n            if (str.match(/\\berror\\b/i) != null && !str.match(/\\bwarning\\b/i)) {\n                throw error;\n            }\n        }\n        if (null == data.match(/^\\s*1 image files creat/i)) {\n            throw (error ??\n                new Error(data.trim().split(\"\\n\")[0] ?? \"Missing expected status message\"));\n        }\n    }\n}\nexports.RewriteAllTagsTask = RewriteAllTagsTask;\n//# sourceMappingURL=RewriteAllTagsTask.js.map","/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isStruct = isStruct;\nconst DateTime_1 = require(\"./DateTime\");\nfunction isStruct(o) {\n    return (o != null &&\n        o.constructor?.name === \"Object\" &&\n        Object.values(o).every((v) => {\n            const t = typeof v;\n            return (t === \"string\" ||\n                t === \"number\" ||\n                (0, DateTime_1.isDateOrTime)(v) ||\n                isStruct(v) ||\n                Array.isArray(v));\n        }));\n}\n//# sourceMappingURL=Struct.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteTask = exports.DefaultWriteTaskOptions = exports.WriteTaskOptionFields = void 0;\nexports.htmlEncode = htmlEncode;\nconst he_1 = require(\"he\");\nconst _path = __importStar(require(\"node:path\"));\nconst DateTime_1 = require(\"./DateTime\");\nconst DefaultExifToolOptions_1 = require(\"./DefaultExifToolOptions\");\nconst ErrorsAndWarnings_1 = require(\"./ErrorsAndWarnings\");\nconst ExifToolTask_1 = require(\"./ExifToolTask\");\nconst FilenameCharsetArgs_1 = require(\"./FilenameCharsetArgs\");\nconst Number_1 = require(\"./Number\");\nconst Object_1 = require(\"./Object\");\nconst Pick_1 = require(\"./Pick\");\nconst String_1 = require(\"./String\");\nconst Struct_1 = require(\"./Struct\");\nconst sep = String.fromCharCode(31); // < unit separator\n// this is private because it's very special-purpose for just encoding ExifTool\n// WriteTask args:\nfunction htmlEncode(s) {\n    return (\n    // allowUnsafeSymbols is true because ExifTool doesn't care about &, <, >, \", ', * and `\n    (0, he_1.encode)(s, { decimal: true, allowUnsafeSymbols: true })\n        // `he` doesn't encode whitespaces (like newlines), but we need that:\n        .replace(/\\s/g, (m) => (m === \" \" ? \" \" : `&#${m.charCodeAt(0)};`)));\n}\nfunction enc(o, structValue = false) {\n    if (o == null) {\n        return \"\";\n    }\n    else if ((0, Number_1.isNumber)(o)) {\n        return String(o);\n    }\n    else if ((0, String_1.isString)(o)) {\n        // Structs need their own escaping here.\n        // See https://exiftool.org/struct.html#Serialize\n        return htmlEncode(structValue ? o.replace(/[,[\\]{}|]/g, (ea) => \"|\" + ea) : o);\n        // const s = htmlEncode(String(o))\n    }\n    else if ((0, DateTime_1.isDateOrTime)(o)) {\n        return (0, DateTime_1.toExifString)(o);\n    }\n    else if (Array.isArray(o)) {\n        const primitiveArray = o.every((ea) => (0, String_1.isString)(ea) || (0, Number_1.isNumber)(ea));\n        return primitiveArray\n            ? `${o.map((ea) => enc(ea)).join(sep)}`\n            : `[${o.map((ea) => enc(ea)).join(\",\")}]`;\n    }\n    else if ((0, Struct_1.isStruct)(o)) {\n        // See https://exiftool.org/struct.html#Serialize\n        return `{${(0, Object_1.keys)(o)\n            .map((k) => enc(k, true) + \"=\" + enc(o[k], true))\n            .join(\",\")}}`;\n    }\n    else {\n        throw new Error(\"cannot encode \" + JSON.stringify(o));\n    }\n}\nexports.WriteTaskOptionFields = [\n    \"useMWG\",\n    \"struct\",\n    \"ignoreMinorErrors\",\n    \"writeArgs\",\n];\nexports.DefaultWriteTaskOptions = {\n    ...(0, Pick_1.pick)(DefaultExifToolOptions_1.DefaultExifToolOptions, ...exports.WriteTaskOptionFields),\n};\nclass WriteTask extends ExifToolTask_1.ExifToolTask {\n    sourceFile;\n    args;\n    options;\n    constructor(sourceFile, args, options) {\n        super(args, options);\n        this.sourceFile = sourceFile;\n        this.args = args;\n        this.options = options;\n    }\n    static for(filename, tags, options) {\n        const sourceFile = _path.resolve(filename);\n        const args = [\n            ...FilenameCharsetArgs_1.Utf8FilenameCharsetArgs,\n            `-sep`,\n            `${sep}`,\n            \"-E\", // < html encoding https://exiftool.org/faq.html#Q10\n        ];\n        // \"undef\" doesn't work: but undef works the same as 2\n        args.push(\"-api\", \"struct=\" + ((0, Number_1.isNumber)(options?.struct) ? options.struct : \"2\"));\n        if (options?.useMWG ?? exports.DefaultWriteTaskOptions.useMWG) {\n            args.push(\"-use\", \"MWG\");\n        }\n        // Special handling for GPSLatitude and GPSLongitude (due to differences\n        // in EXIF, XMP, and MIE encodings). See\n        // https://exiftool.org/forum/index.php?topic=14488.0 and\n        // https://github.com/photostructure/exiftool-vendored.js/issues/131\n        // See https://exiftool.org/TagNames/GPS.html\n        if ((0, Number_1.isNumber)(tags.GPSLatitude)) {\n            // ExifTool will also accept a number when writing GPSLatitudeRef,\n            // positive for north latitudes or negative for south, or a string\n            // containing N, North, S or South)\n            tags.GPSLatitudeRef ??= tags.GPSLatitude;\n        }\n        else if (tags.GPSLatitude === null) {\n            tags.GPSLatitudeRef ??= null;\n        }\n        if ((0, Number_1.isNumber)(tags.GPSLongitude)) {\n            // ExifTool will also accept a number when writing this tag, positive\n            // for east longitudes or negative for west, or a string containing E,\n            // East, W or West\n            tags.GPSLongitudeRef ??= tags.GPSLongitude;\n        }\n        else if (tags.GPSLongitude === null) {\n            tags.GPSLongitudeRef ??= null;\n        }\n        if ((0, Number_1.isNumber)(tags.GPSLatitude) && (0, Number_1.isNumber)(tags.GPSLongitude)) {\n            // Also set GPSPosition if both GPSLatitude and GPSLongitude are set to\n            // give ExifTool a hint that we're happy with it figuring out the correct\n            // group for this metadata\n            tags.GPSPosition = tags.GPSLatitude + \",\" + tags.GPSLongitude;\n        }\n        if ((0, Number_1.isNumber)(tags.GPSAltitude)) {\n            // ExifTool will also accept number when writing this tag, with negative\n            // numbers indicating below sea level\n            tags.GPSAltitudeRef ??= tags.GPSAltitude;\n        }\n        for (const key of (0, Object_1.keys)(tags)) {\n            const val = tags[key];\n            args.push(`-${key}=${enc(val)}`);\n        }\n        if (options.writeArgs != null)\n            args.push(...options.writeArgs);\n        args.push(sourceFile);\n        return new WriteTask(sourceFile, args, options);\n    }\n    toString() {\n        return \"WriteTask(\" + this.sourceFile + \")\";\n    }\n    // we're handling the stderr output ourselves, so we tell ExifToolTask that\n    // all stderr output is not ignorable so we can capture the warnings\n    parse(data, error) {\n        if (error != null)\n            throw error;\n        let created = 0;\n        let updated = 0;\n        let unchanged = 0;\n        for (const line of (0, String_1.splitLines)(data)) {\n            const m_created = CreatedRE.exec(line)?.groups?.count;\n            if (m_created != null) {\n                created += (0, Number_1.toInt)(m_created) ?? 0;\n                continue;\n            }\n            // careful! we need to apply UnchangedRE before UpdateRE, as both match\n            // \"updated\"\n            const m_unchanged = UnchangedRE.exec(line)?.groups?.count;\n            if (m_unchanged != null) {\n                unchanged += (0, Number_1.toInt)(m_unchanged) ?? 0;\n                continue;\n            }\n            const m_updated = UpdatedRE.exec(line)?.groups?.count;\n            if (m_updated != null) {\n                updated += (0, Number_1.toInt)(m_updated) ?? 0;\n                continue;\n            }\n            // if we get here, we didn't match any of the expected patterns.\n            this.warnings.push(\"Unexpected output from ExifTool: \" + JSON.stringify(line));\n        }\n        const w = (0, ErrorsAndWarnings_1.errorsAndWarnings)(this).warnings ?? [];\n        return {\n            created,\n            updated,\n            unchanged,\n            ...(w.length === 0 ? {} : { warnings: w }),\n        };\n    }\n}\nexports.WriteTask = WriteTask;\n// \"0 files created\" | \"0 file created\" | \"1 image files created\"\nconst CreatedRE = /(?<count>\\d{1,5}) [\\w ]{1,12}\\bcreated$/i;\nconst UnchangedRE = /(?<count>\\d{1,5}) [\\w ]{1,12}\\b(?:weren't updated|unchanged)$/i;\n// \"1 image files updated\"\nconst UpdatedRE = /(?<count>\\d{1,5}) [\\w ]{1,12}\\bupdated$/i;\n//# sourceMappingURL=WriteTask.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeolocationTagNames = void 0;\nexports.isGeolocationTag = isGeolocationTag;\nexports.GeolocationTagNames = [\n    \"GeolocationBearing\",\n    \"GeolocationCity\",\n    \"GeolocationCountry\",\n    \"GeolocationCountryCode\",\n    \"GeolocationDistance\",\n    \"GeolocationFeatureCode\",\n    \"GeolocationFeatureType\",\n    \"GeolocationPopulation\",\n    \"GeolocationPosition\",\n    \"GeolocationRegion\",\n    \"GeolocationSubregion\",\n    \"GeolocationTimeZone\",\n];\n/**\n * Is the given tag name intrinsic to the content of a given file? In other\n * words, is it not an artifact of a metadata field?\n */\nfunction isGeolocationTag(name) {\n    return exports.GeolocationTagNames.includes(name);\n}\n//# sourceMappingURL=GeolocationTags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJSON = parseJSON;\nconst BinaryField_1 = require(\"./BinaryField\");\nconst ExifDate_1 = require(\"./ExifDate\");\nconst ExifDateTime_1 = require(\"./ExifDateTime\");\nconst ExifTime_1 = require(\"./ExifTime\");\nconst Revivers = {\n    BinaryField: (ea) => BinaryField_1.BinaryField.fromJSON(ea),\n    ExifDateTime: (ea) => ExifDateTime_1.ExifDateTime.fromJSON(ea),\n    ExifDate: (ea) => ExifDate_1.ExifDate.fromJSON(ea),\n    ExifTime: (ea) => ExifTime_1.ExifTime.fromJSON(ea),\n};\nfunction parseJSON(s) {\n    return JSON.parse(s, (_key, value) => Revivers[value?._ctor]?.(value) ?? value);\n}\n//# sourceMappingURL=JSON.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exiftool = exports.ExifTool = exports.DefaultWriteTaskOptions = exports.offsetMinutesToZoneName = exports.defaultVideosToUTC = exports.UnsetZoneOffsetMinutes = exports.UnsetZoneName = exports.UnsetZone = exports.TimezoneOffsetTagnames = exports.DefaultReadTaskOptions = exports.parseJSON = exports.isGeolocationTag = exports.exiftoolPath = exports.ExifToolTask = exports.ExifTime = exports.ExifDateTime = exports.ExifDate = exports.DefaultMaxProcs = exports.DefaultExiftoolArgs = exports.DefaultExifToolOptions = exports.CapturedAtTagNames = exports.BinaryField = void 0;\nconst bc = __importStar(require(\"batch-cluster\"));\nconst _cp = __importStar(require(\"node:child_process\"));\nconst _fs = __importStar(require(\"node:fs\"));\nconst node_process_1 = __importDefault(require(\"node:process\"));\nconst Array_1 = require(\"./Array\");\nconst AsyncRetry_1 = require(\"./AsyncRetry\");\nconst BinaryExtractionTask_1 = require(\"./BinaryExtractionTask\");\nconst BinaryToBufferTask_1 = require(\"./BinaryToBufferTask\");\nconst DefaultExifToolOptions_1 = require(\"./DefaultExifToolOptions\");\nconst DeleteAllTagsArgs_1 = require(\"./DeleteAllTagsArgs\");\nconst ExifToolOptions_1 = require(\"./ExifToolOptions\");\nconst ExiftoolPath_1 = require(\"./ExiftoolPath\");\nconst IsWin32_1 = require(\"./IsWin32\");\nconst Lazy_1 = require(\"./Lazy\");\nconst Object_1 = require(\"./Object\");\nconst Pick_1 = require(\"./Pick\");\nconst ReadRawTask_1 = require(\"./ReadRawTask\");\nconst ReadTask_1 = require(\"./ReadTask\");\nconst RewriteAllTagsTask_1 = require(\"./RewriteAllTagsTask\");\nconst String_1 = require(\"./String\");\nconst VersionTask_1 = require(\"./VersionTask\");\nconst Which_1 = require(\"./Which\");\nconst WriteTask_1 = require(\"./WriteTask\");\nvar BinaryField_1 = require(\"./BinaryField\");\nObject.defineProperty(exports, \"BinaryField\", { enumerable: true, get: function () { return BinaryField_1.BinaryField; } });\nvar CapturedAtTagNames_1 = require(\"./CapturedAtTagNames\");\nObject.defineProperty(exports, \"CapturedAtTagNames\", { enumerable: true, get: function () { return CapturedAtTagNames_1.CapturedAtTagNames; } });\nvar DefaultExifToolOptions_2 = require(\"./DefaultExifToolOptions\");\nObject.defineProperty(exports, \"DefaultExifToolOptions\", { enumerable: true, get: function () { return DefaultExifToolOptions_2.DefaultExifToolOptions; } });\nvar DefaultExiftoolArgs_1 = require(\"./DefaultExiftoolArgs\");\nObject.defineProperty(exports, \"DefaultExiftoolArgs\", { enumerable: true, get: function () { return DefaultExiftoolArgs_1.DefaultExiftoolArgs; } });\nvar DefaultMaxProcs_1 = require(\"./DefaultMaxProcs\");\nObject.defineProperty(exports, \"DefaultMaxProcs\", { enumerable: true, get: function () { return DefaultMaxProcs_1.DefaultMaxProcs; } });\nvar ExifDate_1 = require(\"./ExifDate\");\nObject.defineProperty(exports, \"ExifDate\", { enumerable: true, get: function () { return ExifDate_1.ExifDate; } });\nvar ExifDateTime_1 = require(\"./ExifDateTime\");\nObject.defineProperty(exports, \"ExifDateTime\", { enumerable: true, get: function () { return ExifDateTime_1.ExifDateTime; } });\nvar ExifTime_1 = require(\"./ExifTime\");\nObject.defineProperty(exports, \"ExifTime\", { enumerable: true, get: function () { return ExifTime_1.ExifTime; } });\nvar ExifToolTask_1 = require(\"./ExifToolTask\");\nObject.defineProperty(exports, \"ExifToolTask\", { enumerable: true, get: function () { return ExifToolTask_1.ExifToolTask; } });\nvar ExiftoolPath_2 = require(\"./ExiftoolPath\");\nObject.defineProperty(exports, \"exiftoolPath\", { enumerable: true, get: function () { return ExiftoolPath_2.exiftoolPath; } });\nvar GeolocationTags_1 = require(\"./GeolocationTags\");\nObject.defineProperty(exports, \"isGeolocationTag\", { enumerable: true, get: function () { return GeolocationTags_1.isGeolocationTag; } });\nvar JSON_1 = require(\"./JSON\");\nObject.defineProperty(exports, \"parseJSON\", { enumerable: true, get: function () { return JSON_1.parseJSON; } });\nvar ReadTask_2 = require(\"./ReadTask\");\nObject.defineProperty(exports, \"DefaultReadTaskOptions\", { enumerable: true, get: function () { return ReadTask_2.DefaultReadTaskOptions; } });\nvar Timezones_1 = require(\"./Timezones\");\nObject.defineProperty(exports, \"TimezoneOffsetTagnames\", { enumerable: true, get: function () { return Timezones_1.TimezoneOffsetTagnames; } });\nObject.defineProperty(exports, \"UnsetZone\", { enumerable: true, get: function () { return Timezones_1.UnsetZone; } });\nObject.defineProperty(exports, \"UnsetZoneName\", { enumerable: true, get: function () { return Timezones_1.UnsetZoneName; } });\nObject.defineProperty(exports, \"UnsetZoneOffsetMinutes\", { enumerable: true, get: function () { return Timezones_1.UnsetZoneOffsetMinutes; } });\nObject.defineProperty(exports, \"defaultVideosToUTC\", { enumerable: true, get: function () { return Timezones_1.defaultVideosToUTC; } });\nObject.defineProperty(exports, \"offsetMinutesToZoneName\", { enumerable: true, get: function () { return Timezones_1.offsetMinutesToZoneName; } });\nvar WriteTask_2 = require(\"./WriteTask\");\nObject.defineProperty(exports, \"DefaultWriteTaskOptions\", { enumerable: true, get: function () { return WriteTask_2.DefaultWriteTaskOptions; } });\n/**\n * This is the hardcoded path in the exiftool shebang line\n */\nconst PERL = \"/usr/bin/perl\";\n/**\n * Is the #!/usr/bin/perl shebang line in exiftool-vendored.pl going to fail? If\n * so, we need to find `perl` ourselves, and ignore the shebang line.\n */\nconst _ignoreShebang = (0, Lazy_1.lazy)(() => !(0, IsWin32_1.isWin32)() && !_fs.existsSync(PERL));\nconst whichPerl = (0, Lazy_1.lazy)(async () => {\n    const result = await (0, Which_1.which)(PERL);\n    if (result == null) {\n        throw new Error(\"Perl must be installed. Please add perl to your $PATH and try again.\");\n    }\n    return result;\n});\n/**\n * Manages delegating calls to a cluster of ExifTool child processes.\n *\n * **NOTE: Instances are expensive!**\n *\n * * use either the default exported singleton instance of this class,\n *   {@link exiftool}, or your own singleton\n *\n * * make sure you await {@link ExifTool.end} when you're done with an instance\n *   to clean up subprocesses\n *\n * * review the {@link ExifToolOptions} for configuration options--the default\n *   values are conservative to avoid overwhelming your system.\n *\n * @see https://photostructure.github.io/exiftool-vendored.js/ for more documentation.\n */\nclass ExifTool {\n    options;\n    batchCluster;\n    constructor(options = {}) {\n        if (options != null && typeof options !== \"object\") {\n            throw new Error(\"Please update caller to the new ExifTool constructor API\");\n        }\n        const o = (0, ExifToolOptions_1.handleDeprecatedOptions)({\n            ...DefaultExifToolOptions_1.DefaultExifToolOptions,\n            ...options,\n        });\n        const ignoreShebang = o.ignoreShebang ?? _ignoreShebang();\n        const env = { ...o.exiftoolEnv, LANG: \"C\" };\n        if ((0, String_1.notBlank)(node_process_1.default.env.EXIFTOOL_HOME) && (0, String_1.blank)(env.EXIFTOOL_HOME)) {\n            env.EXIFTOOL_HOME = node_process_1.default.env.EXIFTOOL_HOME;\n        }\n        const spawnOpts = {\n            stdio: \"pipe\",\n            shell: false,\n            detached: false, // < no orphaned exiftool procs, please\n            env,\n        };\n        const processFactory = async () => ignoreShebang\n            ? _cp.spawn(await whichPerl(), [await this.exiftoolPath(), ...o.exiftoolArgs], spawnOpts)\n            : _cp.spawn(await this.exiftoolPath(), o.exiftoolArgs, spawnOpts);\n        this.options = {\n            ...o,\n            ignoreShebang,\n            processFactory,\n        };\n        this.batchCluster = new bc.BatchCluster(this.options);\n    }\n    exiftoolPath = (0, Lazy_1.lazy)(async () => {\n        const o = this.options;\n        return ((await ((0, Object_1.isFunction)(o.exiftoolPath)\n            ? o.exiftoolPath(this.options.logger())\n            : o.exiftoolPath)) ?? (0, ExiftoolPath_1.exiftoolPath)(this.options.logger()));\n    });\n    #taskOptions = (0, Lazy_1.lazy)(() => (0, Pick_1.pick)(this.options, \"ignoreMinorErrors\"));\n    /**\n     * Register life cycle event listeners. Delegates to BatchProcess.\n     */\n    on = (event, listener) => this.batchCluster.on(event, listener);\n    /**\n     * Unregister life cycle event listeners. Delegates to BatchProcess.\n     */\n    off = (event, listener) => this.batchCluster.off(event, listener);\n    /**\n     * @return a promise holding the version number of the vendored ExifTool\n     */\n    version() {\n        return this.enqueueTask(() => new VersionTask_1.VersionTask(this.options));\n    }\n    read(file, argsOrOptions, options) {\n        const opts = {\n            ...(0, Pick_1.pick)(this.options, ...ReadTask_1.ReadTaskOptionFields),\n            ...((0, Object_1.isObject)(argsOrOptions) ? argsOrOptions : options),\n        };\n        opts.readArgs =\n            (0, Array_1.ifArr)(argsOrOptions) ?? (0, Array_1.ifArr)(opts.readArgs) ?? this.options.readArgs;\n        return this.enqueueTask(() => ReadTask_1.ReadTask.for(file, opts)); // < no way to know at compile time if we're going to get back a T!\n    }\n    /**\n     * Read the tags from `file`, without any post-processing of ExifTool values.\n     *\n     * **You probably want `read`, not this method. READ THE REST OF THIS COMMENT\n     * CAREFULLY.**\n     *\n     * If you want to extract specific tag values from a file, you may want to use\n     * this, but all data validation and inference heuristics provided by `read`\n     * will be skipped.\n     *\n     * Note that performance will be very similar to `read`, and will actually be\n     * worse if you don't include `-fast` or `-fast2` (as the most expensive bit\n     * is the perl interpreter and scanning the file on disk).\n     *\n     * @param args any additional arguments other than the file path. Note that\n     * \"-json\", and the Windows unicode filename handler flags, \"-charset\n     * filename=utf8\", will be added automatically.\n     *\n     * @return Note that the return value will be similar to `Tags`, but with no\n     * date, time, or other rich type parsing that you get from `.read()`. The\n     * field values will be `string | number | string[]`.\n     *\n     * @see https://github.com/photostructure/exiftool-vendored.js/issues/44 for\n     * typing details.\n     */\n    readRaw(file, args = []) {\n        return this.enqueueTask(() => ReadRawTask_1.ReadRawTask.for(file, args, this.#taskOptions()));\n    }\n    /**\n     * Write the given `tags` to `file`.\n     *\n     * **NOTE: no input validation is done by this library.** ExifTool, however,\n     * is strict about tag names and values in the context of the format of file\n     * being written to.\n     *\n     * @param file an existing file to write `tags` to\n     *\n     * @param tags the tags to write to `file`.\n     *\n     * @param options overrides to the default ExifTool options provided to the\n     * ExifTool constructor.\n     *\n     * @returns Either the promise will be resolved if the tags are written to\n     * successfully, or the promise will be rejected if there are errors or\n     * warnings.\n     *\n     * @see https://exiftool.org/exiftool_pod.html#overwrite_original\n     */\n    write(file, tags, writeArgsOrOptions, options) {\n        const opts = {\n            ...(0, Pick_1.pick)(this.options, ...WriteTask_1.WriteTaskOptionFields),\n            ...((0, Object_1.isObject)(writeArgsOrOptions) ? writeArgsOrOptions : options),\n        };\n        opts.writeArgs =\n            (0, Array_1.ifArr)(writeArgsOrOptions) ??\n                (0, Array_1.ifArr)(opts.writeArgs) ??\n                this.options.writeArgs;\n        // don't retry because writes might not be idempotent (e.g. incrementing\n        // timestamps by an hour)\n        const retriable = false;\n        return this.enqueueTask(() => WriteTask_1.WriteTask.for(file, tags, opts), retriable);\n    }\n    /**\n     * This will strip `file` of all metadata tags. The original file (with the\n     * name `${FILENAME}_original`) will be retained. Note that some tags, like\n     * stat information and image dimensions, are intrinsic to the file and will\n     * continue to exist if you re-`read` the file.\n     *\n     * @param {string} file the file to strip of metadata\n     *\n     * @param {(keyof Tags | string)[]} opts.retain optional. If provided, this is\n     * a list of metadata keys to **not** delete.\n     */\n    deleteAllTags(file, opts) {\n        const args = [...DeleteAllTagsArgs_1.DeleteAllTagsArgs];\n        for (const ea of opts?.retain ?? []) {\n            args.push(`-${ea}<${ea}`);\n        }\n        return this.write(file, {}, args, (0, Object_1.omit)(opts ?? {}, \"retain\"));\n    }\n    /**\n     * Extract the low-resolution thumbnail in `path/to/image.jpg`\n     * and write it to `path/to/thumbnail.jpg`.\n     *\n     * Note that these images can be less than .1 megapixels in size.\n     *\n     * @return a `Promise<void>`. An `Error` is raised if\n     * the file could not be read or the output not written.\n     */\n    extractThumbnail(imageFile, thumbnailFile, opts) {\n        return this.extractBinaryTag(\"ThumbnailImage\", imageFile, thumbnailFile, opts);\n    }\n    /**\n     * Extract the \"preview\" image in `path/to/image.jpg`\n     * and write it to `path/to/preview.jpg`.\n     *\n     * The size of these images varies widely, and is present in dSLR images.\n     * Canon, Fuji, Olympus, and Sony use this tag.\n     *\n     * @return a `Promise<void>`. An `Error` is raised if\n     * the file could not be read or the output not written.\n     */\n    extractPreview(imageFile, previewFile, opts) {\n        return this.extractBinaryTag(\"PreviewImage\", imageFile, previewFile, opts);\n    }\n    /**\n     * Extract the \"JpgFromRaw\" image in `path/to/image.jpg` and write it to\n     * `path/to/fromRaw.jpg`.\n     *\n     * This size of these images varies widely, and is not present in all RAW\n     * images. Nikon and Panasonic use this tag.\n     *\n     * @return a `Promise<void>`. The promise will be rejected if the file could\n     * not be read or the output not written.\n     */\n    extractJpgFromRaw(imageFile, outputFile, opts) {\n        return this.extractBinaryTag(\"JpgFromRaw\", imageFile, outputFile, opts);\n    }\n    /**\n     * Extract a given binary value from \"tagname\" tag associated to\n     * `path/to/image.jpg` and write it to `dest` (which cannot exist and whose\n     * directory must already exist).\n     *\n     * @return a `Promise<void>`. The promise will be rejected if the binary\n     * output not be written to `dest`.\n     */\n    async extractBinaryTag(tagname, src, dest, opts) {\n        // BinaryExtractionTask returns a stringified error if the output indicates\n        // the task should not be retried.\n        const maybeError = await this.enqueueTask(() => BinaryExtractionTask_1.BinaryExtractionTask.for(tagname, src, dest, {\n            ...this.#taskOptions(),\n            ...opts,\n        }));\n        if (maybeError != null) {\n            throw new Error(maybeError);\n        }\n    }\n    /**\n     * Extract a given binary value from \"tagname\" tag associated to\n     * `path/to/image.jpg` as a `Buffer`. This has the advantage of not writing to\n     * a file, but if the payload associated to `tagname` is large, this can cause\n     * out-of-memory errors.\n     *\n     * @return a `Promise<Buffer>`. The promise will be rejected if the file or\n     * tag is missing.\n     */\n    async extractBinaryTagToBuffer(tagname, imageFile, opts) {\n        const result = await this.enqueueTask(() => BinaryToBufferTask_1.BinaryToBufferTask.for(tagname, imageFile, {\n            ...this.#taskOptions(),\n            ...opts,\n        }));\n        if (Buffer.isBuffer(result)) {\n            return result;\n        }\n        else if (result instanceof Error) {\n            throw result;\n        }\n        else {\n            throw new Error(\"Unexpected result from BinaryToBufferTask: \" + JSON.stringify(result));\n        }\n    }\n    /**\n     * Attempt to fix metadata problems in JPEG images by deleting all metadata\n     * and rebuilding from scratch. After repairing an image you should be able to\n     * write to it without errors, but some metadata from the original image may\n     * be lost in the process.\n     *\n     * This should only be applied as a last resort to images whose metadata is\n     * not readable via {@link ExifTool.read()}.\n     *\n     * @see https://exiftool.org/faq.html#Q20\n     *\n     * @param {string} inputFile the path to the problematic image\n     * @param {string} outputFile the path to write the repaired image\n     * @param {boolean} opts.allowMakerNoteRepair if there are problems with MakerNote\n     * tags, allow ExifTool to apply heuristics to recover corrupt tags. See\n     * exiftool's `-F` flag.\n     * @return {Promise<void>} resolved when outputFile has been written.\n     */\n    rewriteAllTags(inputFile, outputFile, opts) {\n        return this.enqueueTask(() => RewriteAllTagsTask_1.RewriteAllTagsTask.for(inputFile, outputFile, {\n            allowMakerNoteRepair: false,\n            ...this.#taskOptions(),\n            ...opts,\n        }));\n    }\n    /**\n     * Shut down running ExifTool child processes. No subsequent requests will be\n     * accepted.\n     *\n     * This may need to be called in `after` or `finally` clauses in tests or\n     * scripts for them to exit cleanly.\n     */\n    end(gracefully = true) {\n        return this.batchCluster.end(gracefully).promise;\n    }\n    /**\n     * @return true if `.end()` has been invoked\n     */\n    get ended() {\n        return this.batchCluster.ended;\n    }\n    // calling whichPerl through this lazy() means we only do that task once per\n    // instance.\n    #checkForPerl = (0, Lazy_1.lazy)(async () => {\n        if (this.options.checkPerl) {\n            await whichPerl(); // < throws if perl is missing\n        }\n    });\n    /**\n     * Most users will not need to use `enqueueTask` directly. This method\n     * supports submitting custom `BatchCluster` tasks.\n     *\n     * @param task is a thunk to support retries by providing new instances on retries.\n     *\n     * @see BinaryExtractionTask for an example task implementation\n     */\n    enqueueTask(task, retriable = true) {\n        const f = async () => {\n            await this.#checkForPerl();\n            return this.batchCluster.enqueueTask(task());\n        };\n        return retriable ? (0, AsyncRetry_1.retryOnReject)(f, this.options.taskRetries) : f();\n    }\n    /**\n     * @return the currently running ExifTool processes. Note that on Windows,\n     * these are only the process IDs of the directly-spawned ExifTool wrapper,\n     * and not the actual perl vm. This should only really be relevant for\n     * integration tests that verify processes are cleaned up properly.\n     */\n    get pids() {\n        return this.batchCluster.pids();\n    }\n    /**\n     * @return the number of pending (not currently worked on) tasks\n     */\n    get pendingTasks() {\n        return this.batchCluster.pendingTaskCount;\n    }\n    /**\n     * @return the total number of child processes created by this instance\n     */\n    get spawnedProcs() {\n        return this.batchCluster.spawnedProcCount;\n    }\n    /**\n     * @return the current number of child processes currently servicing tasks\n     */\n    get busyProcs() {\n        return this.batchCluster.busyProcCount;\n    }\n    /**\n     * @return report why child processes were recycled\n     */\n    childEndCounts() {\n        return this.batchCluster.childEndCounts;\n    }\n    /**\n     * Shut down any currently-running child processes. New child processes will\n     * be started automatically to handle new tasks.\n     */\n    closeChildProcesses(gracefully = true) {\n        return this.batchCluster.closeChildProcesses(gracefully);\n    }\n}\nexports.ExifTool = ExifTool;\n/**\n * Use this singleton rather than instantiating new {@link ExifTool} instances\n * in order to leverage a single running ExifTool process.\n *\n * As of v3.0, its {@link ExifToolOptions.maxProcs} is set to the number of\n * CPUs on the current system; no more than `maxProcs` instances of `exiftool`\n * will be spawned. You may want to experiment with smaller or larger values\n * for `maxProcs`, depending on CPU and disk speed of your system and\n * performance tradeoffs.\n *\n * Note that each child process consumes between 10 and 50 MB of RAM. If you\n * have limited system resources you may want to use a smaller `maxProcs`\n * value.\n *\n * See the source of {@link DefaultExifToolOptions} for more details about how\n * this instance is configured.\n */\nexports.exiftool = new ExifTool();\n//# sourceMappingURL=ExifTool.js.map","import { BaseService } from './baseService';\nimport { MetadataIPC } from '../constants/ipc';\nimport { WriteMetadataResult, CsvMetadataRow } from '../types/metadata';\nimport { promises as fs } from 'fs';\nimport * as path from 'path';\nimport exifr from 'exifr';\nimport { ExifTool } from 'exiftool-vendored';\n\nexport class MetadataService extends BaseService {\n  private exiftool: ExifTool;\n\n  constructor() {\n    super();\n    // 初始化 ExifTool\n    this.exiftool = new ExifTool();\n  }\n\n  protected getHandlers() {\n    return [\n      {\n        channel: MetadataIPC.METADATA_WRITE,\n        handler: this.writeMetadata.bind(this),\n      },\n    ];\n  }\n\n  /**\n   * 批量寫入元數據到圖片\n   * @param imageDir 圖片目錄路徑\n   * @param csvData CSV數據行數組\n   * @returns 處理結果數組\n   */\n  private async writeMetadata(\n    imageDir: string,\n    csvData: CsvMetadataRow[]\n  ): Promise<WriteMetadataResult[]> {\n    const results: any[] = [];\n\n    for (const row of csvData) {\n      try {\n        // 構建完整的圖片路徑\n        const imagePath = path.join(imageDir, row.Filename);\n\n        console.log('處理圖片：', imagePath);\n        // 檢查文件是否存在\n        try {\n          await fs.access(imagePath);\n        } catch {\n          console.error('圖片文件不存在：', imagePath);\n          results.push({\n            filename: row.Filename,\n            success: false,\n            error: '圖片文件不存在',\n          });\n          continue;\n        }\n\n        // 準備元數據\n        const metadata = {\n          Title: row.Title,\n          Description: row.Description,\n          Keywords: row.Keywords.split(',').map(k => k.trim()),\n          //   Subject: row.Keywords.split(',').map(k => k.trim()), // 某些查看器使用 Subject\n          'XMP:Title': row.Title,\n          'XMP:Description': row.Description,\n          //   'XMP:Subject': row.Keywords.split(',').map(k => k.trim()),\n          'IPTC:ObjectName': row.Title,\n          'IPTC:Caption-Abstract': row.Description,\n          //   'IPTC:Keywords': row.Keywords.split(',').map(k => k.trim()),\n        };\n\n        // 寫入元數據\n        await this.exiftool.write(imagePath, metadata);\n\n        // 讀取並驗證寫入的元數據\n        const writtenMetadata = await this.exiftool.read(imagePath);\n        console.log('寫入後的元數據：', {\n          filename: row.Filename,\n          metadata: {\n            Title: writtenMetadata.Title,\n            Description: writtenMetadata.Description,\n            Keywords: writtenMetadata.Keywords,\n          },\n        });\n\n        results.push({\n          filename: row.Filename,\n          success: true,\n          metadata: {\n            Title: writtenMetadata.Title,\n            Description: writtenMetadata.Description,\n            Keywords: writtenMetadata.Keywords,\n          },\n        });\n      } catch (error) {\n        console.error('處理圖片時發生錯誤：', row.Filename, error);\n        results.push({\n          filename: row.Filename,\n          success: false,\n          error: error instanceof Error ? error.message : '寫入元數據時發生錯誤',\n        });\n      }\n    }\n\n    console.log('處理完成，結果：', results);\n    return results;\n  }\n\n  // 當服務被銷毀時關閉 ExifTool\n  public async destroy() {\n    await this.exiftool.end();\n  }\n}\n","import { app, BrowserWindow, ipcMain } from 'electron';\nimport { FileService } from '../services/fileService';\nimport { MetadataService } from '../services/metadataService';\nimport * as path from 'path';\n\n// 在開發環境中啟用熱重載\nif (process.env.NODE_ENV === 'development') {\n  // 使用 require 而不是 import 來避免 TS 錯誤\n  const electronReloader = require('electron-reloader');\n  try {\n    console.log('Development mode detected, enabling hot reload...');\n    electronReloader(module, {\n      debug: true,\n      watchRenderer: false, // 由 Vite 处理渲染进程的热重载\n      ignore: ['node_modules/**/*', 'release/**/*', 'dist/**/*', '.vite/**/*', '.git/**/*'],\n      // 指定要监听的文件\n      paths: [\n        path.join(__dirname, '**', '*.ts'),\n        path.join(__dirname, '**', '*.js'),\n        path.join(__dirname, '..', 'src', '**', '*.ts'),\n        path.join(__dirname, '..', 'src', '**', '*.js'),\n      ],\n    });\n    console.log('Hot reload enabled successfully');\n  } catch (err) {\n    console.error('Failed to setup hot reload:', err);\n  }\n}\n\n// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack\n// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on\n// whether you're running in development or production).\ndeclare const MAIN_WINDOW_VITE_ENTRY: string;\ndeclare const MAIN_WINDOW_VITE_PRELOAD: string;\n\n// 處理來自渲染進程的消息\nipcMain.handle('send-message', async (event, message) => {\n  console.log('Received message from renderer:', message);\n  return `Server received: ${message}`;\n});\n\n// 處理系統信息請求\nipcMain.handle('get-system-info', async () => {\n  console.log('Getting systeminfo...');\n  return {\n    platform: process.platform,\n    version: app.getVersion(),\n    electronVersion: process.versions.electron,\n  };\n});\n\n// 初始化所有服務\nconst initializeServices = () => {\n  console.log('Initializing services...');\n  const services = [\n    new FileService(),\n    new MetadataService(),\n    // 添加更多服務...\n  ];\n\n  // 註冊所有服務的處理器\n  services.forEach(service => {\n    console.log('Registering handlers for service:', service.constructor.name);\n    service.registerHandlers();\n  });\n  console.log('Services initialized successfully');\n};\n\nconst createWindow = async (): Promise<void> => {\n  console.log(MAIN_WINDOW_VITE_PRELOAD, 'MAIN_WINDOW_VITE_PRELOAD');\n  // Create the browser window.\n  const mainWindow = new BrowserWindow({\n    height: 1000,\n    width: 1200,\n    webPreferences: {\n      preload: MAIN_WINDOW_VITE_PRELOAD,\n      nodeIntegration: true,\n      contextIsolation: true,\n    },\n  });\n\n  // and load the index.html of the app.\n  if (process.env.NODE_ENV === 'development') {\n    // 开发环境下使用 Vite dev server\n    await mainWindow.loadURL('http://localhost:3000');\n    mainWindow.webContents.openDevTools();\n  } else {\n    // 生产环境下加载打包后的文件\n    await mainWindow.loadFile(MAIN_WINDOW_VITE_ENTRY);\n  }\n};\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', () => {\n  console.log('App is ready, initializing...');\n  createWindow();\n  initializeServices();\n  console.log('App initialization completed');\n});\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\nif (require('electron-squirrel-startup')) {\n  app.quit();\n}\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and import them here.\n"],"names":["ipcMain","FileIPC","MetadataIPC","fs","dialog","path","_Array","filterInPlace","_Object","map","isFunction","fromEntries","omit","_String","Object_1","require$$0","blank","s","notBlank","toS","__importDefault","this","exports","require$$1","String_1","require$$2","l","Platform_1","BatchClusterOptions","node_timers_1","count","__classPrivateFieldSet","__classPrivateFieldGet","Deferred_1","State","node_process_1","require$$3","_a","Task_1","Async_1","_Task_onSettle","_Task_resolve","BatchProcess_1","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","_BatchProcess_execTask","_BatchProcess_end","_BatchProcess_awaitNotRunning","_BatchProcess_onTimeout","_BatchProcess_onError","_BatchProcess_onStderr","_BatchProcess_onStdout","_BatchProcess_clearCurrentTask","Mean_1","n","Rate_1","now","_Rate_vacuum","__createBinding","Array_1","BatchClusterOptions_1","Error_1","require$$11","Timeout_1","require$$12","require$$13","Parser_1","require$$14","Pids_1","require$$15","require$$16","BatchCluster","_BatchCluster_onIdle","_BatchCluster_maybeCheckPids","_BatchCluster_execNextTask","_BatchCluster_maxSpawnDelay","_BatchCluster_procsToSpawn","_BatchCluster_maybeSpawnProcs","delay","_BatchCluster_spawnNewProc","isNumber","isString","Number_1","__setModuleDefault","__importStar","ExifToolTask_1","_os","IsWin32_1","BinaryExtractionTask_1","node_path_1","FilenameCharsetArgs_1","BinaryToBufferTask_1","_path","require","module","VersionTask_1","bc","ea","pick","ReadRawTask_1","BinaryField_1","DateTime","offset","defaultZone","keys","formatOffset","match","e","tz","padding","ExifTime_1","DateTime_1","ExifTime","normalizeZone","ExifDate_1","ExifDateTime_1","Lazy_1","Pick_1","ExifDateTime","ExifDate","expectedRef","batch_cluster_1","ErrorsAndWarnings_1","require$$17","require$$18","require$$19","geoTz","b","ReadTask","RewriteAllTagsTask_1","global","hasOwnProperty","object","key","string","decode","he","WriteTask","_fs","require$$20","Which_1","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","ExifTool","app","BrowserWindow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,MAAe,YAAY;AAAA;AAAA,EAIzB,mBAAyB;AAC9B,SAAK,cAAc,QAAQ,CAAC,EAAE,SAAS,cAAc;AACnDA,eAAAA,QAAQ,OAAO,SAAS,OAAO,UAAU,SAAS;AAC5C,YAAA;AACK,iBAAA,MAAM,QAAQ,GAAG,IAAI;AAAA,iBACrB,OAAO;AACd,kBAAQ,MAAM,oBAAoB,OAAO,KAAK,KAAK;AAC7C,gBAAA;AAAA,QAAA;AAAA,MACR,CACD;AAAA,IAAA,CACF;AAAA,EAAA;AAEL;ACnBY,IAAA,4BAAAC,aAAL;AACLA,WAAA,MAAO,IAAA;AACPA,WAAA,OAAQ,IAAA;AACRA,WAAA,QAAS,IAAA;AACTA,WAAA,kBAAmB,IAAA;AACnBA,WAAA,0BAA2B,IAAA;AALjBA,SAAAA;AAAA,GAAA,WAAA,CAAA,CAAA;AASA,IAAA,gCAAAC,iBAAL;AACLA,eAAA,eAAgB,IAAA;AAChBA,eAAA,gBAAiB,IAAA;AAFPA,SAAAA;AAAA,GAAA,eAAA,CAAA,CAAA;AAAA,CAMO;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AACL;ACZO,MAAM,oBAAoB,YAAY;AAAA,EACjC,cAAgC;AACxC,YAAQ,IAAI,iCAAiC;AACtC,WAAA;AAAA,MACL;AAAA,QACE,SAAS,QAAQ;AAAA,QACjB,SAAS,KAAK,SAAS,KAAK,IAAI;AAAA,MAClC;AAAA,MACA;AAAA,QACE,SAAS,QAAQ;AAAA,QACjB,SAAS,KAAK,UAAU,KAAK,IAAI;AAAA,MACnC;AAAA,MACA;AAAA,QACE,SAAS,QAAQ;AAAA,QACjB,SAAS,KAAK,OAAO,KAAK,IAAI;AAAA,MAChC;AAAA,MACA;AAAA,QACE,SAAS,QAAQ;AAAA,QACjB,SAAS,KAAK,gBAAgB,KAAK,IAAI;AAAA,MACzC;AAAA,MACA;AAAA,QACE,SAAS,QAAQ;AAAA,QACjB,SAAS,KAAK,uBAAuB,KAAK,IAAI;AAAA,MAAA;AAAA,IAElD;AAAA,EAAA;AAAA,EAGF,MAAc,SAAS,UAAmC;AAChD,YAAA,IAAI,oBAAoB,QAAQ;AACpC,QAAA;AACF,aAAO,MAAMC,GAAA,SAAG,SAAS,UAAU,OAAO;AAAA,aACnC,OAAO;AACd,YAAM,IAAI,MAAM,UAAU,MAAM,OAAO,EAAE;AAAA,IAAA;AAAA,EAC3C;AAAA,EAGF,MAAc,UAAU,UAAkB,SAAgC;AAChE,YAAA,IAAI,iBAAiB,QAAQ;AACjC,QAAA;AACF,YAAMA,GAAG,SAAA,UAAU,UAAU,SAAS,OAAO;AAAA,aACtC,OAAO;AACd,YAAM,IAAI,MAAM,UAAU,MAAM,OAAO,EAAE;AAAA,IAAA;AAAA,EAC3C;AAAA,EAGF,MAAc,OAAO,UAAoC;AAC/C,YAAA,IAAI,4BAA4B,QAAQ;AAC5C,QAAA;AACI,YAAAA,GAAA,SAAG,OAAO,QAAQ;AACjB,aAAA;AAAA,IAAA,QACD;AACC,aAAA;AAAA,IAAA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAMF,MAAc,kBAA+C;AACrD,UAAA,SAAS,MAAMC,SAAA,OAAO,eAAe;AAAA,MACzC,YAAY,CAAC,eAAe;AAAA,IAAA,CAC7B;AAED,QAAI,OAAO,UAAU;AACZ,aAAA;AAAA,IAAA;AAGF,WAAA,OAAO,UAAU,CAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ3B,MAAc,uBAAuB,eAA0C;AACzE,QAAA;AACF,YAAM,QAAQ,MAAMD,YAAG,QAAQ,aAAa;AAC5C,YAAM,sBAA0B,oBAAA,IAAI,CAAC,QAAQ,SAAS,MAAM,CAAC;AAEvD,YAAA,aAAa,MAAM,OAAO,CAAQ,SAAA;AACtC,cAAM,MAAME,gBAAK,QAAQ,IAAI,EAAE,YAAY;AACpC,eAAA,oBAAoB,IAAI,GAAG;AAAA,MAAA,CACnC;AAEG,UAAA,WAAW,WAAW,GAAG;AACrB,cAAA,IAAI,MAAM,gBAAgB;AAAA,MAAA;AAG3B,aAAA;AAAA,aACA,OAAO;AACV,UAAA,MAAM,SAAS,UAAU;AACrB,cAAA,IAAI,MAAM,OAAO;AAAA,MAAA;AAErB,UAAA,MAAM,SAAS,UAAU;AACrB,cAAA,IAAI,MAAM,WAAW;AAAA,MAAA;AAEvB,YAAA;AAAA,IAAA;AAAA,EACR;AAEJ;;;;;AC1GA,OAAO,eAAeC,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5DA,SAAA,QAAgBA,SAAA,gBAAwB;AAKxC,SAASC,gBAAc,KAAK,QAAQ;AAChC,QAAM,MAAM,IAAI;AAChB,MAAI,IAAI;AAER,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAE1B,UAAM,KAAK,IAAI,CAAC;AAChB,QAAI,OAAO,EAAE,GAAG;AACZ,UAAI,MAAM;AACN,YAAI,CAAC,IAAI;AACb;AAAA,IACZ;AAAA,EACA;AACI,MAAI,SAAS;AACb,SAAO;AACX;AACqBD,SAAA,gBAAGC;AACxB,SAAS,MAAM,KAAK,WAAW;AAC3B,MAAI,MAAM;AACV,WAAS,MAAM,GAAG,MAAM,IAAI,QAAQ,OAAO;AAEvC,QAAI,UAAU,IAAI,GAAG,GAAG,GAAG;AACvB;AAAA,EACZ;AACI,SAAO;AACX;AACaD,SAAA,QAAG;;;;AChChB,OAAO,eAAeE,WAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChDA,UAAA,OAAsBA,UAAA,cAAiBA,UAAA,SAAqBA,UAAA,aAAcA,UAAA,MAAG;AAKzF,SAASC,MAAI,KAAK,GAAG;AACjB,SAAO,OAAO,OAAO,EAAE,GAAG,IAAI;AAClC;AACWD,UAAA,MAAGC;AACd,SAASC,aAAW,KAAK;AACrB,SAAO,OAAO,QAAQ;AAC1B;AACkBF,UAAA,aAAGE;AACrB,SAAS,OAAO,KAAK,cAAc;AAC/B,SAAO,OAAO,OACR,MACAA,aAAW,YAAY,IACnB,aAAY,IACZ;AACd;AACcF,UAAA,SAAG;AACjB,SAASG,cAAY,KAAK;AACtB,QAAM,IAAI,CAAE;AACZ,aAAW,CAAC,KAAK,KAAK,KAAK,KAAK;AAC5B,QAAI,OAAO,MAAM;AACb,QAAE,GAAG,IAAI;AAAA,IACrB;AAAA,EACA;AACI,SAAO;AACX;AACmBH,UAAA,cAAGG;AACtB,SAASC,OAAK,MAAM,YAAY;AAC5B,QAAM,SAAS,EAAE,GAAG,EAAG;AACvB,aAAW,MAAM,YAAY;AACzB,WAAO,OAAO,EAAE;AAAA,EACxB;AACI,SAAO;AACX;AACYJ,UAAA,OAAGI;;ACvCf,OAAO,eAAeC,WAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACjDA,UAAA,+BAA0BA,UAAA,WAAgCA,UAAA,QAAG;AACxE,MAAMC,aAAWC;AACjB,SAASC,QAAMC,IAAG;AACd,SAAOA,MAAK,QAAQ,OAAOA,EAAC,EAAE,KAAI,EAAG,WAAW;AACpD;AACaJ,UAAA,QAAGG;AAChB,SAASE,WAASD,IAAG;AACjB,SAAO,CAACD,QAAMC,EAAC;AACnB;AACgBJ,UAAA,WAAGK;AACnB,SAAS,aAAaD,IAAG,QAAQ;AAC7B,SAAOA,GAAE,SAAS,MAAM,IAAIA,KAAIA,KAAI;AACxC;AACoBJ,UAAA,eAAG;AACvB,SAASM,MAAIF,IAAG;AACZ,SAAOA,MAAK,OAAO,MAAK,GAAIH,WAAS,YAAYG,GAAE,QAAQ,IAAIA,GAAE,SAAQ,IAAK,OAAOA,EAAC;AAC1F;AACWJ,UAAA,MAAGM;AAAAA;AClBd,MAAIC,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAAA,EAC5D;AACD,SAAO,eAAcC,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,EAAAA,SAAA,MAAcA,kBAAiBA,SAAoB,YAAAA,SAAA,WAAmBA,yBAAwBA,SAAoB,YAAA;AAClH,QAAM,cAAcF,iBAAgB,UAAoB;AACxD,QAAMN,YAAWS;AACjB,QAAMC,YAAWC;AACjB,EAAAH,SAAoB,YAAA;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACH;AACD,QAAM,YAAY,YAAY,QAAQ,SAAS,eAAe;AAC9D,QAAM,OAAO,MAAM;AAWnB,EAAAA,SAAwB,gBAAA,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA,IAIlC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAKP,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAKP,MAAM;AAAA;AAAA;AAAA;AAAA,IAIN,MAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,IAId,OAAO,QAAQ;AAAA,EACnB,CAAC;AAID,EAAAA,SAAmB,WAAA,OAAO,OAAO;AAAA,IAC7B,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,EACX,CAAC;AACD,MAAI,UAAUA,SAAQ;AACtB,WAAS,UAAUI,IAAG;AAClB,QAAIJ,SAAQ,UAAU,KAAK,CAAC,OAAO,OAAOI,GAAE,EAAE,MAAM,UAAU,GAAG;AAC7D,YAAM,IAAI,MAAM,oCAAoCJ,SAAQ,SAAS;AAAA;AAEzE,cAAUI;AAAA;AAEd,EAAAJ,SAAA,YAAoB;AACpB,WAAS,SAAS;AACd,WAAO;AAAA;AAEX,EAAAA,SAAA,SAAiB;AACjB,EAAAA,SAAc,MAAA;AAAA,IACV,YAAY,CAAC,aAAa;AACtB,YAAM,cAAc,CAAE;AACtB,MAAAA,SAAQ,UAAU,QAAQ,CAAC,OAAO;AAC9B,cAAM,UAAU,KAAK,KAAK,UAAU,GAAG,CAAC,IAAI;AAC5C,oBAAY,EAAE,IAAI,CAAC,YAAY,mBAAmB;AAC9C,kBAAQE,UAAS,UAAU,OAAO,GAAG;AACjC,qBAAS,EAAE,EAAE,SAAS,SAAS,GAAG,cAAc;AAAA;QAEvD;AAAA,MACb,CAAS;AACD,aAAO;AAAA,IACV;AAAA,IACD,gBAAgB,CAAC,aAAa;AAC1B,YAAM,cAAc,CAAE;AACtB,MAAAF,SAAQ,UAAU,QAAQ,CAAC,UAAW,YAAY,KAAK,IAAI,CAAC,YAAY,oBAAmB,GAAIR,UAAS,KAAK,SAAS,CAAC,OAAO,SAAS,KAAK,GAAE,oBAAI,KAAM,GAAC,YAAa,IAAG,QAAQ,IAAI,GAAG,cAAc,CAAC,CAAE;AACzM,aAAO;AAAA,IACV;AAAA,IACD,cAAc,CAACY,IAAG,gBAAgB;AAC9B,YAAM,mBAAmBJ,SAAQ,UAAU,QAAQ,WAAW;AAC9D,YAAM,WAAW,CAAE;AACnB,MAAAA,SAAQ,UAAU,QAAQ,CAAC,IAAI,QAAS,SAAS,EAAE,IAAI,MAAM,mBAAmB,OAAOI,GAAE,EAAE,EAAE,KAAKA,EAAC,CAAE;AACrG,aAAO;AAAA,IACV;AAAA,EACJ;;;ACjGD,IAAIN,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,OAAO,eAAe,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,SAAA,UAA+B,SAAA,yBAAmB;AAClD,MAAM,YAAYD,kBAAgBL,YAAkB;AACpD,MAAM,YAAY,UAAU,QAAQ,SAAU;AACjC,SAAA,QAAG,CAAC,SAAS,QAAQ,EAAE,SAAS,SAAS;AACtD,SAAA,QAAgB,cAAc;AAC9B,SAAA,UAAkB,cAAc;AAAA;ACThC,SAAO,eAAcO,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,EAAAA,SAAA,gBAAwBA,SAA8B,sBAAAA,SAAA,WAAmBA,SAAmB,WAAA;AAC5F,QAAM,WAAWP;AACjB,QAAMY,cAAaJ;AACnB,QAAMC,YAAWC;AACjB,EAAAH,SAAA,WAAmB;AACnB,EAAAA,SAAA,WAAmB,KAAKA,SAAQ;AAAA,EAKhC,MAAMM,qBAAoB;AAAA,IACtB,cAAc;AAOV,WAAK,WAAW;AAShB,WAAK,mBAAmB,IAAIN,SAAQ;AAQpC,WAAK,uBAAuB,KAAKA,SAAQ;AAWzC,WAAK,wCAAwC;AAS7C,WAAK,qBAAqB,KAAKA,SAAQ;AAOvC,WAAK,6BAA6B,MAAMA,SAAQ;AAShD,WAAK,oBAAoB,KAAKA,SAAQ;AAYtC,WAAK,qBAAqB;AAU1B,WAAK,4BAA4B;AAuBjC,WAAK,oBAAoBK,YAAW,QAAQ,MAAMA,YAAW,QAAQ,MAAM;AAS3E,WAAK,oBAAoB;AAQzB,WAAK,sBAAsB;AAO3B,WAAK,2BAA2B;AAOhC,WAAK,4BAA4B;AAMjC,WAAK,yBAAyB,IAAIL,SAAQ;AAK1C,WAAK,SAAS,SAAS;AAAA;;AAG/B,EAAAA,SAAA,sBAA8BM;AAC9B,WAAS,aAAaX,IAAG;AACrB,YAAO,GAAIO,UAAS,KAAKP,EAAC,EAAE,QAAQ,yBAAyB,MAAM;AAAA;AAEvE,WAAS,KAAKA,IAAG;AACb,WAAOA,cAAa,SACdA,KACA,IAAI,OAAO,cAAc,aAAaA,EAAC,IAAI,eAAe;AAAA;AAEpE,WAAS,cAAc,MAAM;AACzB,UAAM,SAAS;AAAA,MACX,GAAG,IAAIW,qBAAqB;AAAA,MAC5B,GAAG;AAAA,MACH,QAAQ,KAAK,KAAK,IAAI;AAAA,MACtB,QAAQ,KAAK,KAAK,IAAI;AAAA,IACzB;AACD,UAAM,SAAS,CAAE;AACjB,aAASV,UAAS,WAAW;AACzB,YAAM,KAAI,GAAIM,UAAS,KAAK,OAAO,SAAS,CAAC;AAC7C,cAAQA,UAAS,OAAO,CAAC,GAAG;AACxB,eAAO,KAAK,YAAY,oBAAoB;AAAA;;AAGpD,aAAS,IAAI,WAAW,OAAO,KAAK;AAChC,YAAM,IAAI,OAAO,SAAS;AAC1B,UAAI,IAAI,OAAO;AACX,cAAM,MAAM,GAAG,SAAS,qCAAqC,KAAK,IAAG,GAAIA,UAAS,OAAO,GAAG,IAAI,KAAK,OAAO,GAAG;AAC/G,eAAO,KAAK,GAAG;AAAA;;AAGvB,IAAAN,UAAS,gBAAgB;AACzB,IAAAA,UAAS,MAAM;AACf,IAAAA,UAAS,MAAM;AACf,QAAI,sBAAsB,CAAC;AAC3B,QAAI,YAAY,CAAC;AACjB,QAAI,KAAK,oBAAoB,QACzB,KAAK,mBAAmB,KACxB,OAAO,mBAAmB;AAC1B,UAAI,oBAAoB,KAAK,IAAI,OAAO,oBAAoB,OAAO,iBAAiB,GAAG,wCAAwC,OAAO,kBAAkB,4BAA4B,OAAO,iBAAiB,GAAG;AAAA;AAGnN,QAAI,8BAA8B,CAAC;AACnC,QAAI,wBAAwB,CAAC;AAC7B,QAAI,6BAA6B,CAAC;AAClC,QAAI,yCAAyC,CAAC;AAC9C,QAAI,qBAAqB,CAAC;AAC1B,QAAI,OAAO,SAAS,GAAG;AACnB,YAAM,IAAI,MAAM,6CAA6C,OAAO,KAAK,IAAI,CAAC;AAAA;AAElF,WAAO;AAAA;AAEX,EAAAI,SAAA,gBAAwB;;;;ACrNxB,IAAIF,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,MAAA,YAAiC,MAAA,sBAAmB;AACpD,MAAMQ,kBAAgBT,kBAAgBL,YAAsB;AAC5D,SAAS,MAAM,QAAQ,QAAQ,OAAO;AAClC,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC5B,UAAM,IAAIc,gBAAc,QAAQ,WAAW,MAAM,QAAS,GAAE,MAAM;AAClE,QAAI;AACA,QAAE,MAAO;AAAA,EACrB,CAAK;AACL;AACa,MAAA,QAAG;AAKhB,eAAe,MAAM,GAAG,WAAW,UAAU,IAAI;AAC7C,QAAM,YAAY,KAAK,IAAG,IAAK;AAC/B,MAAIC,SAAQ;AACZ,SAAO,KAAK,IAAK,IAAG,WAAW;AAC3B,QAAI,MAAM,EAAEA,MAAK,GAAG;AAChB,aAAO;AAAA,IACnB,OACa;AACD,MAAAA;AACA,YAAM,MAAM,OAAO;AAAA,IAC/B;AAAA,EACA;AACI,SAAO;AACX;AACa,MAAA,QAAG;AAMhB,SAAS,UAAU,GAAG,YAAY;AAC9B,MAAI,OAAO;AACX,SAAO,CAAC,UAAU;AACd,QAAI,KAAK,IAAG,IAAK,QAAQ,UAAU,MAAM;AACrC,aAAO,KAAK,IAAG,IAAK;AACpB,aAAO,EAAG;AAAA,IACtB,OACa;AACD;AAAA,IACZ;AAAA,EACK;AACL;AACiB,MAAA,YAAG;;AClDpB,IAAIC,2BAA0BV,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIW,2BAA0BX,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,mBAAmB,kBAAkB,iBAAiB;AAC1D,OAAO,eAAeY,YAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5CA,WAAA,WAAG;AAInB,IAAI;AAAA,CACH,SAAUC,QAAO;AACd,EAAAA,OAAMA,OAAM,SAAS,IAAI,CAAC,IAAI;AAC9B,EAAAA,OAAMA,OAAM,WAAW,IAAI,CAAC,IAAI;AAChC,EAAAA,OAAMA,OAAM,UAAU,IAAI,CAAC,IAAI;AACnC,GAAG,UAAU,QAAQ,CAAA,EAAG;AAMxB,MAAM,SAAS;AAAA,EACX,cAAc;AACV,SAAK,EAAE,IAAI;AACX,sBAAkB,IAAI,MAAM,MAAM;AAClC,qBAAiB,IAAI,MAAM,MAAM;AACjC,oBAAgB,IAAI,MAAM,MAAM,OAAO;AACvC,SAAK,UAAU,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5CH,+BAAuB,MAAM,mBAAmB,SAAS,GAAG;AAC5DA,+BAAuB,MAAM,kBAAkB,QAAQ,GAAG;AAAA,IACtE,CAAS;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU;AACV,WAAOC,yBAAuB,MAAM,iBAAiB,GAAG,MAAM,MAAM;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,YAAY;AACZ,WAAOA,yBAAuB,MAAM,iBAAiB,GAAG,MAAM,MAAM;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,WAAW;AACX,WAAOA,yBAAuB,MAAM,iBAAiB,GAAG,MAAM,MAAM;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU;AACV,WAAOA,yBAAuB,MAAM,iBAAiB,GAAG,MAAM,MAAM;AAAA,EAC5E;AAAA,EACI,KAAK,aAAa,YAAY;AAC1B,WAAO,KAAK,QAAQ,KAAK,aAAa,UAAU;AAAA,EACxD;AAAA,EACI,MAAM,YAAY;AACd,WAAO,KAAK,QAAQ,MAAM,UAAU;AAAA,EAC5C;AAAA,EACI,QAAQ,OAAO;AACX,QAAI,KAAK,SAAS;AACd,aAAO;AAAA,IACnB,OACa;AACDD,+BAAuB,MAAM,iBAAiB,MAAM,WAAW,GAAG;AAClEC,+BAAuB,MAAM,mBAAmB,GAAG,EAAE,KAAK,MAAM,KAAK;AACrE,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,OAAO,QAAQ;AACX,UAAM,aAAa,KAAK;AAIxBD,6BAAuB,MAAM,iBAAiB,MAAM,UAAU,GAAG;AACjE,QAAI,YAAY;AACZ,aAAO;AAAA,IACnB,OACa;AACDC,+BAAuB,MAAM,kBAAkB,GAAG,EAAE,KAAK,MAAM,MAAM;AACrE,aAAO;AAAA,IACnB;AAAA,EACA;AAAA,EACI,QAAQ,GAAG;AACP,SAAK,QAAQ,MAAM,CAAC;AACpB,WAAO;AAAA,EACf;AAAA,EACI,eAAe,GAAG;AACd,SAAK,eAAe,MAAM,CAAC;AAC3B,WAAO;AAAA,EACf;AACA;AACgBC,WAAA,WAAG;AACnB,oBAAoB,oBAAI,QAAO,GAAI,mBAAmB,oBAAI,QAAO,GAAI,kBAAkB,oBAAI,QAAO,GAAI,KAAK,OAAO;AAClH,eAAe,QAAQ,GAAG,GAAG;AACzB,MAAI;AACA,MAAE,QAAQ,MAAM,CAAC;AAAA,EACzB,SACW,KAAK;AACR,MAAE,OAAO,GAAG;AAAA,EACpB;AACA;AACA,eAAe,eAAe,GAAG,GAAG;AAChC,MAAI;AACA,MAAE,QAAQ,MAAM,CAAC;AAAA,EACzB,QACU;AACF,MAAE,QAAQ,MAAS;AAAA,EAC3B;AACA;;ACvHA,OAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,OAAA,UAAoC,OAAA,8BAAqB;AACzD,MAAMT,aAAWT;AAKjB,SAAS,QAAQ,KAAK;AAClB,aAAW,KAAK,KAAK;AACjB,QAAI;AACA,QAAG;AAAA,IACf,SACe,GAAG;AAAA,IAElB;AAAA,EACA;AACA;AACe,OAAA,UAAG;AAClB,SAAS,WAAWE,IAAG;AACnB,SAAO,OAAOA,EAAC,EACV,KAAI,EACJ,QAAQ,aAAa,EAAE;AAChC;AACkB,OAAA,aAAG;AACrB,SAAS,QAAQ,KAAK;AAClB,SAAO,eAAe,QAChB,MACA,IAAI,OAAM,GAAIO,WAAS,OAAO,GAAG,IAAI,kBAAkBA,WAAS,KAAK,GAAG,CAAC;AACnF;AACe,OAAA,UAAG;;AC7BlB,OAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACxC,OAAA,eAAG;AACvB,MAAMA,aAAWT;AACjB,MAAM,eAAe,CAAC,QAAQ,QAAQ,WAAW;AAC7C,MAAI,CAAC;AACD,UAAM,IAAI,MAAM,aAAa;AACjC,OAAQS,GAAAA,WAAS,UAAU,MAAM;AAC7B,UAAM,IAAI,MAAM,MAAM;AAC1B,SAAO;AACX;AACoB,OAAA,eAAG;;ACVvB,IAAIJ,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,OAAO,eAAe,MAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,KAAA,OAA2B,KAAA,wBAAuB;AAClD,MAAM,uBAAuBD,kBAAgBL,YAA6B;AAC1E,MAAMoB,mBAAiBf,kBAAgB,UAAuB;AAC9D,MAAMN,aAAWW;AACjB,MAAM,aAAaW;AAMnB,SAAS,UAAU,KAAK;AACpB,MAAI,OAAO,QAAQ,CAAC,SAAS,GAAG,KAAK,OAAO;AACxC,WAAO;AACX,MAAI;AAGA,WAAOD,iBAAe,QAAQ,KAAK,KAAK,CAAC;AAAA,EACjD,SACW,KAAK;AAIR,SAAK,QAAQ,QAAQ,QAAQ,SAAS,SAAS,IAAI,UAAU;AACzD,aAAO;AAEX,WAAO;AAAA,EACf;AACA;AACiB,KAAA,YAAG;AASpB,SAAS,KAAK,KAAK,QAAQ,OAAO;AAC9B,MAAI,OAAO,QAAQ,CAAC,SAAS,GAAG,KAAK,OAAO;AACxC,WAAO;AACX,MAAI;AACA,WAAOA,iBAAe,QAAQ,KAAK,KAAK,QAAQ,YAAY,MAAS;AAAA,EAC7E,SACW,KAAK;AACR,QAAI,CAAC,OAAO,GAAG,EAAE,SAAS,OAAO;AAC7B,YAAM;AACV,WAAO;AAAA,EAEf;AACA;AACY,KAAA,OAAG;AACf,MAAM,QAAQ;AACd,MAAM,UAAU;AAMhB,SAAS,OAAO;AACZ,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,yBAAqB,QAAQ;AAAA,MAAS,WAAW,QAAQ,aAAa;AAAA;AAAA,MAEtE,WAAW,QAAQ,CAAC,OAAO,OAAO,KAAK,IAAI,CAAC,IAAI;AAAA,MAAG,CAAC,OAAO,QAAQ,WAAW;AAC1E,YAAI,SAAS,MAAM;AACf,iBAAO,KAAK;AAAA,QAC5B,YACsB,KAAK,QAAQ,KAAI,EAAG,SAAS,GAAG;AACtC,iBAAO,IAAI,MAAM,MAAM,CAAC;AAAA,QACxC;AAEgB,mBAAS,KAAK,QACT,KAAI,EACJ,MAAM,SAAS,EACf,IAAI,CAAC,OAAO,GAAG,MAAM,WAAW,QAAQ,QAAQ,OAAO,CAAC,EACxD,IAAI,CAAC,OAAUrB,GAAAA,WAAS,KAAK,MAAM,QAAQ,MAAM,SAAS,SAAS,EAAE,CAAC,GAAG,QAAQ,CAAC,EAClF,OAAO,CAAC,OAAO,MAAM,IAAI,CAAC;AAAA,MAC/C;AAAA,IAAS;AAAA,EACT,CAAK;AACL;AACY,KAAA,OAAG;;ACnFf,OAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC7C,OAAA,UAAG;AAClB,SAAS,QAAQ,QAAQ;AACrB,MAAIuB;AACJ,MAAI;AAGA,eAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,mBAAmB,OAAO;AAEjF,KAACA,MAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,MAAM;AAAA,EACjI,QACU;AAAA,EAEV;AACA;AACe,OAAA,UAAG;;ACflB,IAAIL,2BAA0BX,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAIU,2BAA0BV,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAI,iBAAiB,YAAY,iBAAiB,eAAe,iBAAiB,SAAS,cAAc,cAAc,gBAAgB;AACvI,OAAO,eAAeiB,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChDA,OAAA,OAAG;AACf,MAAMC,YAAUxB;AAChB,MAAMkB,eAAaV;AACnB,IAAI,UAAU;AAMd,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOP,YAAY,SAAS,QAAQ;AACzB,oBAAgB,IAAI,IAAI;AACxB,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,SAAS;AACd,eAAW,IAAI,MAAM,MAAM;AAC3B,oBAAgB,IAAI,MAAM,MAAM;AAChC,kBAAc,IAAI,MAAM,KAAK;AAC7B,oBAAgB,IAAI,MAAM,MAAM;AAChC,YAAQ,IAAI,MAAM,IAAIU,aAAW,SAAQ,CAAE;AAC3C,iBAAa,IAAI,MAAM,EAAE;AACzB,iBAAa;AAAA,MAAI;AAAA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOtB;AAGDD,6BAAuB,MAAM,SAAS,GAAG,EAAE,QAAQ,KAAK,MAAMA,yBAAuB,MAAM,iBAAiB,KAAK,cAAc,EAAE,KAAK,IAAI,GAAG,MAAMA,yBAAuB,MAAM,iBAAiB,KAAK,cAAc,EAAE,KAAK,IAAI,CAAC;AAAA,EACxO;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU;AACV,WAAOA,yBAAuB,MAAM,SAAS,GAAG,EAAE;AAAA,EAC1D;AAAA,EACI,IAAI,UAAU;AACV,WAAOA,yBAAuB,MAAM,SAAS,GAAG,EAAE;AAAA,EAC1D;AAAA,EACI,IAAI,QAAQ;AACR,WAAOA,yBAAuB,MAAM,SAAS,GAAG,EAAE,UAC5C,YACAA,yBAAuB,MAAM,SAAS,GAAG,EAAE,WACvC,aACA;AAAA,EAClB;AAAA,EACI,QAAQ,MAAM;AACVD,6BAAuB,MAAM,YAAY,MAAM,GAAG;AAClDA,6BAAuB,MAAM,iBAAiB,KAAK,IAAG,GAAI,GAAG;AAAA,EACrE;AAAA,EACI,IAAI,YAAY;AACZ,QAAIM;AACJ,WAAOL,yBAAuB,MAAM,iBAAiB,GAAG,KAAK,OACvD,WACEK,MAAKL,yBAAuB,MAAM,iBAAiB,GAAG,OAAO,QAAQK,QAAO,SAASA,MAAK,KAAK,IAAG,KAAML,yBAAuB,MAAM,iBAAiB,GAAG;AAAA,EACzK;AAAA,EACI,WAAW;AACP,WAAQ,KAAK,YAAY,OACrB,MACA,KAAK,QAAQ,QAAQ,SAAS,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,KAAM,IACtD,OACA,KAAK;AAAA,EACjB;AAAA,EACI,SAAS,KAAK;AACV,QAAIK,KAAI;AACRN,6BAAuB,MAAM,cAAcC,yBAAuB,MAAM,cAAc,GAAG,IAAI,IAAI,SAAQ,GAAI,GAAG;AAChH,UAAM,UAAUK,MAAKL,yBAAuB,MAAM,YAAY,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG;AAC5G,QAAI,UAAU,QAAQ,OAAO,KAAKL,yBAAuB,MAAM,cAAc,GAAG,CAAC,KAAK,MAAM;AAExFD,+BAAuB,MAAM,cAAcC,yBAAuB,MAAM,cAAc,GAAG,EAAE,QAAQ,QAAQ,EAAE,GAAG,GAAG;AACnHA,+BAAuB,MAAM,iBAAiB,KAAK,aAAa,EAAE,KAAK,MAAM,IAAI;AAAA,IAC7F,OACa;AACD,YAAM,UAAU,KAAKA,yBAAuB,MAAM,YAAY,GAAG,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG;AAC5G,UAAI,UAAU,QAAQ,OAAO,KAAKA,yBAAuB,MAAM,cAAc,GAAG,CAAC,KAAK,MAAM;AAExFD,iCAAuB,MAAM,cAAcC,yBAAuB,MAAM,cAAc,GAAG,EAAE,QAAQ,QAAQ,EAAE,GAAG,GAAG;AACnHA,iCAAuB,MAAM,iBAAiB,KAAK,aAAa,EAAE,KAAK,MAAM,KAAK;AAAA,MAClG;AAAA,IACA;AAAA,EACA;AAAA,EACI,SAAS,KAAK;AACV,QAAIK;AACJN,6BAAuB,MAAM,cAAcC,yBAAuB,MAAM,cAAc,GAAG,IAAI,IAAI,SAAQ,GAAI,GAAG;AAChH,UAAM,UAAUK,MAAKL,yBAAuB,MAAM,YAAY,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG;AAC5G,QAAI,UAAU,QAAQ,OAAO,KAAKL,yBAAuB,MAAM,cAAc,GAAG,CAAC,KAAK,MAAM;AAExFD,+BAAuB,MAAM,cAAcC,yBAAuB,MAAM,cAAc,GAAG,EAAE,QAAQ,QAAQ,EAAE,GAAG,GAAG;AACnHA,+BAAuB,MAAM,iBAAiB,KAAK,aAAa,EAAE,KAAK,MAAM,KAAK;AAAA,IAC9F;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAII,OAAO,OAAO;AACV,WAAOA,yBAAuB,MAAM,SAAS,GAAG,EAAE,OAAO,KAAK;AAAA,EACtE;AACA;AACYM,OAAA,OAAG;AACf,aAAa,oBAAI,QAAO,GAAI,kBAAkB,oBAAI,QAAS,GAAE,gBAAgB,oBAAI,QAAO,GAAI,kBAAkB,oBAAI,QAAS,GAAE,UAAU,oBAAI,QAAO,GAAI,eAAe,oBAAI,QAAS,GAAE,eAAe,oBAAI,WAAW,kBAAkB,oBAAI,QAAO,GAAI,iBAAiB,SAASE,kBAAiB;AAC1R,MAAIH;AACJN,2BAAuB,MAAM,kBAAkBM,MAAKL,yBAAuB,MAAM,iBAAiB,GAAG,OAAO,QAAQK,QAAO,SAASA,MAAK,KAAK,IAAK,GAAE,GAAG;AAC5J,GAAG,gBAAgB,eAAeI,eAAc,QAAQ;AACpD,MAAIJ,KAAI,IAAI;AAEZ,WAAS,CAACL,yBAAuB,MAAM,SAAS,GAAG,EAAE,YAAY;AAEjE,QAAM,WAAW,MAAMK,MAAKL,yBAAuB,MAAM,YAAY,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG,uBAAuB,QAAQ,OAAO,SAAS,KAAK;AACvK,MAAI,UAAU,GAAG;AACb,WAAUE,GAAAA,UAAQ,OAAO,OAAO;AAAA,EACxC;AAII,MAAI,CAAC,KAAK,WAAWP,yBAAuB,MAAM,eAAe,GAAG;AAChE;AAKJD,2BAAuB,MAAM,eAAe,MAAM,GAAG;AACrD,MAAI;AACA,UAAM,cAAc,MAAM,KAAK,OAAOC,yBAAuB,MAAM,cAAc,GAAG,GAAGA,yBAAuB,MAAM,cAAc,GAAG,GAAG,MAAM;AAC9I,QAAIA,yBAAuB,MAAM,SAAS,GAAG,EAAE,QAAQ,WAAW,GAAG;AAAA,IAC7E,OACa;AACD,OAAC,KAAKA,yBAAuB,MAAM,YAAY,GAAG,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,SAAS,KAAK,iBAAiB,IAAI,MAAM,KAAK,aAAa,8BAA8B,CAAC;AAAA,IACnM;AAAA,EACA,SACW,OAAO;AACV,SAAK,OAAO,KAAK;AAAA,EACzB;AACA;;;AC1JA,MAAIZ,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAAA,EAC5D;AACD,SAAO,eAAcC,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,EAAAA,SAAwB,gBAAAA,SAAA,UAAkB;AAC1C,QAAMO,iBAAgBT,iBAAgBL,YAAsB;AAC5D,EAAAO,SAAA,UAAkB,OAAO,SAAS;AAClC,iBAAe,cAAc,GAAG,WAAW;AAGvC,WAAO,aAAa,IACd,IACA,IAAI,QAAQ,OAAO,SAAS,WAAW;AACrC,UAAI,UAAU;AACd,UAAI;AACA,cAAM,IAAIO,eAAc,QAAQ,WAAW,MAAM;AAC7C,cAAI,SAAS;AACT,sBAAU;AACV,oBAAQP,SAAQ,OAAO;AAAA;QAE9B,GAAE,SAAS;AACZ,cAAM,SAAS,MAAM;AACrB,YAAI,SAAS;AACT,oBAAU;AACV,uBAAa,CAAC;AACd,kBAAQ,MAAM;AAAA;eAGf,KAAK;AACR,YAAI,SAAS;AACT,oBAAU;AACV,iBAAO,GAAG;AAAA;;IAG9B,CAAS;AAAA;AAET,EAAAA,SAAA,gBAAwB;;ACpCxB,IAAIS,2BAA0BV,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAIW,2BAA0BX,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAID,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,IAAI,yBAAyB,+BAA+B,mCAAmC,sBAAsB,gCAAgC,6BAA6B,wBAAwB,sBAAsB,6BAA6B,yBAAyB,2BAA2B,kCAAkC,0BAA0B,wBAAwB,mBAAmB,+BAA+B,yBAAyB,uBAAuB,wBAAwB,wBAAwB;AACvhB,OAAO,eAAeqB,gBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACxCA,eAAA,eAAG;AACvB,MAAM,gBAAgBtB,kBAAgBL,YAAsB;AAC5D,MAAM,UAAUQ;AAChB,MAAM,aAAaE;AACnB,MAAM,UAAUW;AAChB,MAAMtB,aAAW6B;AACjB,MAAM,WAAWC;AACjB,MAAM,SAASC;AACf,MAAM,WAAWC;AACjB,MAAMtB,aAAWuB;AACjB,MAAM,SAASC;AACf,MAAM,YAAYC;AAIlB,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAKf,YAAY,MAAM,MAAM,QAAQ;AAC5B,4BAAwB,IAAI,IAAI;AAChC,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,QAAQ,KAAK,IAAK;AACvB,kCAA8B,IAAI,MAAM,KAAK,IAAG,CAAE;AAClD,sCAAkC,IAAI,MAAM,CAAC;AAC7C,yBAAqB,IAAI,MAAM,MAAM;AACrC,mCAA+B,IAAI,MAAM,KAAK,IAAG,CAAE;AACnD,gCAA4B;AAAA,MAAI;AAAA,MAAM;AAAA;AAAA,IAErC;AAED,2BAAuB,IAAI,MAAM,IAAI;AACrC,yBAAqB;AAAA,MAAI;AAAA,MAAM;AAAA;AAAA,IAE9B;AAED,gCAA4B,IAAI,MAAM,MAAM;AAC5C,SAAK,kBAAkB;AACvB,4BAAwB;AAAA,MAAI;AAAA,MAAM;AAAA;AAAA;AAAA;AAAA,IAI1C;AAIQ,8BAA0B,IAAI,MAAM,MAAM;AAC1C,qCAAiC,IAAI,MAAM,MAAM;AACjD,6BAAyB,IAAI,MAAM,MAAM;AACzC,SAAK,OAAO,kBAAkB,KAAK,MAAM;AACzClB,6BAAuB,MAAM,sBAAsB,KAAK,QAAQ,GAAG;AAEnE,SAAK,KAAK,MAAO;AACjB,QAAI,KAAK,OAAO,MAAM;AAClB,YAAM,IAAI,MAAM,qDAAqD;AAAA,IACjF;AACQ,SAAK,MAAM,KAAK;AAChB,SAAK,KAAK,GAAG,SAAS,CAAC,QAAQC,yBAAuB,MAAM,yBAAyB,KAAK,qBAAqB,EAAE,KAAK,MAAM,cAAc,GAAG,CAAC;AAC9I,SAAK,KAAK,GAAG,SAAS,MAAM,KAAK,IAAI,OAAO,YAAY,CAAC;AACzD,SAAK,KAAK,GAAG,QAAQ,MAAM,KAAK,IAAI,OAAO,WAAW,CAAC;AACvD,SAAK,KAAK,GAAG,cAAc,MAAM,KAAK,IAAI,OAAO,iBAAiB,CAAC;AACnE,UAAM,QAAQ,KAAK,KAAK;AACxB,QAAI,SAAS;AACT,YAAM,IAAI,MAAM,yBAAyB;AAC7C,UAAM,GAAG,SAAS,CAAC,QAAQA,yBAAuB,MAAM,yBAAyB,KAAK,qBAAqB,EAAE,KAAK,MAAM,eAAe,GAAG,CAAC;AAC3I,UAAM,SAAS,KAAK,KAAK;AACzB,QAAI,UAAU;AACV,YAAM,IAAI,MAAM,0BAA0B;AAC9C,WAAO,GAAG,SAAS,CAAC,QAAQA,yBAAuB,MAAM,yBAAyB,KAAK,qBAAqB,EAAE,KAAK,MAAM,gBAAgB,GAAG,CAAC;AAC7I,WAAO,GAAG,QAAQ,CAAC,MAAMA,yBAAuB,MAAM,yBAAyB,KAAK,sBAAsB,EAAE,KAAK,MAAM,CAAC,CAAC;AACzH,KAAIlB,GAAAA,WAAS,KAAK,KAAK,KAAK,QAAQ,CAAC,WAAW;AAC5C,aAAO,GAAG,SAAS,CAAC,QAAQkB,yBAAuB,MAAM,yBAAyB,KAAK,qBAAqB,EAAE,KAAK,MAAM,gBAAgB,GAAG,CAAC;AAC7I,aAAO,GAAG,QAAQ,CAAC,QAAQA,yBAAuB,MAAM,yBAAyB,KAAK,sBAAsB,EAAE,KAAK,MAAM,GAAG,CAAC;AAAA,IACzI,CAAS;AACD,UAAM,cAAc,IAAI,OAAO,KAAK,KAAK,gBAAgB,SAAS,YAAY;AAC9E,SAAK,gBAAgB,YAAY;AACjC,QAAI,CAAC,KAAK,SAAS,WAAW,GAAG;AAC7B,WAAK,KAAK,SAAS,KAAK,iBAAiB,IAAI,MAAM,KAAK,OAAO,iCAAiC,CAAC;AAAA,IAC7G;AAGQ,SAAK,KAAK,SAAS,KAAK,cAAc,IAAI;AAAA,EAClD;AAAA,EACI,IAAI,cAAc;AACd,WAAOA,yBAAuB,MAAM,2BAA2B,GAAG;AAAA,EAC1E;AAAA,EACI,IAAI,YAAY;AACZ,WAAOA,yBAAuB,MAAM,yBAAyB,GAAG;AAAA,EACxE;AAAA,EACI,IAAI,WAAW;AACX,WAAOA,yBAAuB,MAAM,wBAAwB,GAAG;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,SAAS;AACT,WAAOA,yBAAuB,MAAM,0BAA0B,GAAG,KAAK;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,IAAI,QAAQ;AACR,QAAIK;AACJ,WAAO,WAAWA,MAAKL,yBAAuB,MAAM,0BAA0B,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG;AAAA,EACpI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,IAAI,SAAS;AACT,WAAOL,yBAAuB,MAAM,sBAAsB,GAAG;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOI,IAAI,gBAAgB;AAChB,QAAIK,KAAI;AACR,QAAIL,yBAAuB,MAAM,6BAA6B,GAAG,KAAK;AAClE,aAAOA,yBAAuB,MAAM,6BAA6B,GAAG;AACxE,QAAI,KAAK,OAAO;AACZ,aAAO;AAAA,IACnB,WACiB,KAAK,QAAQ;AAClB,aAAO;AAAA,IACnB,WACiBA,yBAAuB,MAAM,mCAAmC,GAAG,IAAI,GAAG;AAC/E,aAAO;AAAA,IACnB,WACiB,KAAK,KAAK,SAAS,QAAQ,KAAK,KAAK,MAAM,WAAW;AAC3D,aAAO;AAAA,IACnB,WACiB,KAAK,KAAK,qBAAqB,KACpC,KAAK,aAAa,KAAK,KAAK,oBAAoB;AAChD,aAAO;AAAA,IACnB,WACiB,KAAK,KAAK,sBAAsB,KACrC,KAAK,SAAS,KAAK,KAAK,qBAAqB;AAC7C,aAAO;AAAA,IACnB,WACiB,KAAK,KAAK,2BAA2B,KAC1C,KAAK,mBAAmB,KAAK,KAAK,0BAA0B;AAC5D,aAAO;AAAA,IACnB,WACiB,KAAK,KAAK,mBAAmB,KAClC,KAAK,QAAQ,KAAK,KAAK,mBAAmB,KAAK,OAAO;AACtD,aAAO;AAAA,IACnB,YACkB,KAAM,KAAK,KAAK,oBAAoB,OAAOK,MAAKL,yBAAuB,MAAM,2BAA2B,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG,gBAAiB,QAAQ,OAAO,SAAS,KAAK,IAAI,KAAK,KAAK,mBAAmB;AAC3O,aAAO;AAAA,IACnB,OACa;AACD,aAAO;AAAA,IACnB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAII,IAAI,UAAU;AACV,WAAO,KAAK,iBAAiB;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,OAAO;AACP,WAAOL,yBAAuB,MAAM,2BAA2B,GAAG,KAAK;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,cAAc;AACd,WAAO,CAAC,KAAK,OAAO,SAAS,KAAK;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,QAAQ;AACR,WAAO,KAAK,eAAe;AAAA,EACnC;AAAA,EACI,IAAI,SAAS;AACT,WAAO,KAAK,OAAO,KAAK,IAAG,IAAKA,yBAAuB,MAAM,gCAAgC,GAAG,IAAI;AAAA,EAC5G;AAAA;AAAA;AAAA;AAAA,EAII,UAAU;AACN,QAAIA,yBAAuB,MAAM,sBAAsB,GAAG;AACtD,aAAO;AACX,UAAM,SAAY,GAAA,OAAO,WAAW,KAAK,GAAG;AAC5C,QAAI,CAAC,OAAO;AACRD,+BAAuB,MAAM,sBAAsB,MAAM,GAAG;AAE5D,WAAK,IAAI,OAAO,WAAW;AAAA,IACvC;AACQ,WAAO;AAAA,EACf;AAAA,EACI,aAAa;AACT,WAAO,CAAC,KAAK,QAAS;AAAA,EAC9B;AAAA,EACI,sBAAsB;AAClB,UAAM,MAAM,KAAK,KAAK;AAEtB,QAAI,OAAO,SAAYP,GAAAA,WAAS,OAAO,GAAG;AACtC;AAEJ,QAAI,CAAC,KAAK;AACN;AACJ,QAAIQ,yBAAuB,MAAM,6BAA6B,GAAG,KAC5D,KAAK,KAAK,4BAA4B,KACnC,KAAK,IAAG,IAAKA,yBAAuB,MAAM,+BAA+B,GAAG,IACxE,KAAK,KAAK,2BAA4B;AAC9CD,+BAAuB,MAAM,+BAA+B,KAAK,IAAG,GAAI,GAAG;AAC3E,YAAM,IAAI,IAAI,OAAO,KAAK,KAAK,SAAS,YAAY;AACpD,QAAE,QACG,MAAM,CAAC,QAAQ;AAChB,YAAIM;AACJ,aAAK,KAAK,SAAS,KAAK,oBAAoB,KAAK,IAAI;AACrDN,iCAAuB,MAAM,oCAAoCM,MAAKL,yBAAuB,MAAM,mCAAmC,GAAG,GAAGK,OAAMA,MAAK,GAAG;AAAA,MAE7J,CAAA,EACI,QAAQ,MAAM;AACfN,iCAAuB,MAAM,+BAA+B,KAAK,IAAG,GAAI,GAAG;AAAA,MAC3F,CAAa;AACDC,+BAAuB,MAAM,yBAAyB,KAAK,sBAAsB,EAAE,KAAK,MAAM,CAAC;AAC/F,aAAO;AAAA,IACnB;AACQ;AAAA,EACR;AAAA;AAAA;AAAA,EAGI,SAAS,MAAM;AACX,WAAO,KAAK,QAAQA,yBAAuB,MAAM,yBAAyB,KAAK,sBAAsB,EAAE,KAAK,MAAM,IAAI,IAAI;AAAA,EAClI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYI,IAAI,aAAa,MAAM,QAAQ;AAC3B,QAAIK,KAAI;AACR,WAAQN,yBAAuB,MAAM,2BAA2BM,MAAKL,yBAAuB,MAAM,0BAA0B,GAAG,OAAO,QAAQK,QAAO,SAASA,MAAK,IAAI,WAAW,WAAW,QAAQL,yBAAuB,MAAM,yBAAyB,KAAK,iBAAiB,EAAE,KAAK,MAAM,YAAaD,yBAAuB,MAAM,8BAA8B,KAAKC,yBAAuB,MAAM,6BAA6B,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAK,QAAQ,GAAG,CAAG,CAAA,GAAG,GAAG,EAAG;AAAA,EAC3e;AACA;AACoBU,eAAA,eAAG;AACvB,gCAAgC,oBAAI,QAAS,GAAE,oCAAoC,oBAAI,QAAO,GAAI,uBAAuB,oBAAI,QAAO,GAAI,iCAAiC,oBAAI,WAAW,8BAA8B,oBAAI,WAAW,yBAAyB,oBAAI,QAAS,GAAE,uBAAuB,oBAAI,QAAS,GAAE,8BAA8B,oBAAI,QAAO,GAAI,0BAA0B,oBAAI,QAAO,GAAI,4BAA4B,oBAAI,WAAW,mCAAmC,oBAAI,QAAS,GAAE,2BAA2B,oBAAI,QAAS,GAAE,0BAA0B,oBAAI,QAAO,GAAI,yBAAyB,SAASQ,wBAAuB,MAAM;AACpnB,MAAIb;AACJ,MAAI;AACJ,MAAI,KAAK;AACL,WAAO;AACXN,2BAAuB,MAAM,0BAA0B,KAAKC,yBAAuB,MAAM,yBAAyB,GAAG,GAAG,MAAM,KAAK,GAAG;AACtID,2BAAuB,MAAM,2BAA2B,MAAM,GAAG;AACjE,QAAM,OAAM,GAAIP,WAAS,cAAc,KAAK,SAAS,IAAI;AACzD,QAAM,gBAAgB,KAAK,WAAW,KAAK;AAC3C,QAAM,gBAAgB,gBAChB,KAAK,KAAK,qBACV,KAAK,KAAK;AAChB,MAAI,gBAAgB,GAAG;AAGnBO,6BAAuB,MAAM,kCAAkC,cAAc,QAAQ,WAAW,MAAMC,yBAAuB,MAAM,yBAAyB,KAAK,uBAAuB,EAAE,KAAK,MAAM,MAAM,aAAa,GAAG,gBAAgB,KAAK,KAAK,iBAAiB,GAAG,GAAG;AAAA,EACpR;AAGI,OAAK,KAAK,QAAQ,KAAK,MAAM;AACzBA,6BAAuB,MAAM,yBAAyB,KAAK,8BAA8B,EAAE,KAAK,MAAM,IAAI;AAE1G,QAAI,eAAe;AAEfD,+BAAuB,MAAM,wBAAwB,OAAO,GAAG;AAAA,IAC3E,OACa;AACD,WAAK,KAAK,SAAS,KAAK,gBAAgB,MAAM,IAAI;AAAA,IAC9D;AAEQ,SAAK,OAAQ;AAAA,EAChB,GAAE,CAAC,UAAU;AACVC,6BAAuB,MAAM,yBAAyB,KAAK,8BAA8B,EAAE,KAAK,MAAM,IAAI;AAE1G,QAAI,eAAe;AACf,WAAK,KAAK,SAAS,KAAK,cAAc,KAAK;AAC3C,WAAK,IAAI,OAAO,YAAY;AAAA,IACxC,OACa;AACD,WAAK,KAAK,SAAS,KAAK,aAAa,OAAO,MAAM,IAAI;AAAA,IAClE;AAEQ,SAAK,OAAQ;AAAA,EACrB,CAAK;AACD,MAAI;AACA,SAAK,QAAQ,KAAK,IAAI;AACtB,UAAM,SAASK,MAAK,KAAK,UAAU,QAAQA,QAAO,SAAS,SAASA,IAAG;AACvE,QAAI,SAAS,QAAQ,MAAM,WAAW;AAClC,WAAK,OAAO,IAAI,MAAM,gCAAgC,CAAC;AACvD,aAAO;AAAA,IACnB,OACa;AACD,YAAM,MAAM,KAAK,CAAC,QAAQ;AACtB,YAAI,OAAO,MAAM;AACb,eAAK,OAAO,GAAG;AAAA,QACnC;AAAA,MACA,CAAa;AACD,aAAO;AAAA,IACnB;AAAA,EACA,SACW,KAAK;AAER,SAAK,IAAI,OAAO,aAAa;AAC7B,WAAO;AAAA,EACf;AACA,GAAG;AAAA;AAGH,eAAec,mBAAkB,YAAY,QAAQ;AACjD,MAAId,KAAI,IAAI,IAAI;AAChB,QAAM,WAAWL,yBAAuB,MAAM,2BAA2B,GAAG;AAC5EA,2BAAuB,MAAM,yBAAyB,KAAK,8BAA8B,EAAE,KAAK,IAAI;AAOpG,MAAI,YAAY,QAAQ,SAAS,WAAW,KAAK,eAAe;AAC5D,QAAI;AAIA,aAAO,GAAG,UAAU,eAAe,SAAS,SAAS,aAAa,MAAO,GAAG;AAAA,IACxF,QACc;AAAA,IAEd;AACQ,QAAI,SAAS,SAAS;AAClB,eAAS,OAAO,IAAI,MAAM,uCAAuC,KAAK,UAAU;AAAA,QAC5E;AAAA,QACA;AAAA,MAChB,CAAa,CAAC,GAAG,CAAC;AAAA,IAClB;AAAA,EACA;AAII,aAAW,MAAM;AAAA,IACb,KAAK;AAAA,IACL,KAAK,KAAK;AAAA,IACV,KAAK,KAAK;AAAA,IACV,KAAK,KAAK;AAAA,EAClB,GAAO;AACC,WAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,mBAAmB,OAAO;AAAA,EAC7E;AACI,MAAI,WAAWK,MAAK,KAAK,KAAK,WAAW,QAAQA,QAAO,SAAS,SAASA,IAAG,WAAW;AACpF,UAAM,UAAU,KAAK,KAAK,eAAe,OACnC,QACIb,GAAAA,WAAS,cAAc,KAAK,KAAK,aAAa,IAAI;AAC5D,QAAI;AACA,OAAC,KAAK,KAAK,KAAK,WAAW,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI,OAAO;AAAA,IACtF,QACc;AAAA,IAEd;AAAA,EACA;AAGI,GAAA,GAAI,SAAS,SAAS,KAAK,KAAK,KAAK;AACrC,GAAA,GAAI,SAAS,SAAS,KAAK,KAAK,MAAM;AACtC,GAAA,GAAI,SAAS,SAAS,KAAK,KAAK,MAAM;AACtC,MAAI,KAAK,KAAK,qBACV,cACA,KAAK,KAAK,4BAA4B,KACtC,CAACQ,yBAAuB,MAAM,sBAAsB,GAAG,GAAG;AAE1D,UAAMA,yBAAuB,MAAM,yBAAyB,KAAK,6BAA6B,EAAE,KAAK,MAAM,KAAK,KAAK,4BAA4B,CAAC;AAElJ,QAAI,KAAK,QAAS,KAAI,KAAK,KAAK,OAAO;AACnC,WAAK,KAAK,KAAM;AAEpB,UAAMA,yBAAuB,MAAM,yBAAyB,KAAK,6BAA6B,EAAE,KAAK,MAAM,KAAK,KAAK,4BAA4B,CAAC;AAAA,EAC1J;AACI,MAAI,KAAK,KAAK,qBACV,KAAK,KAAK,OAAO,QACjB,KAAK,QAAO,GAAI;AAChBA,6BAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,OAAO,4CAA4C;AAChI,KAAI,GAAA,OAAO,MAAM,KAAK,KAAK,KAAK,IAAI;AAAA,EAC5C;AAEI,GAAC,MAAM,KAAK,KAAK,MAAM,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,EAAE;AAClF,OAAK,KAAK,SAAS,KAAK,YAAY,MAAM,MAAM;AACpD,GAAG,gCAAgC,SAASoB,+BAA8B,SAAS;AAC/E,UAAO,GAAI,QAAQ,OAAO,MAAM,KAAK,WAAY,GAAE,OAAO;AAC9D,GAAG,0BAA0B,SAASC,yBAAwB,MAAM,WAAW;AAC3E,MAAI,KAAK,SAAS;AACd,SAAK,KAAK,SAAS,KAAK,eAAe,WAAW,MAAM,IAAI;AAC5DrB,6BAAuB,MAAM,yBAAyB,KAAK,qBAAqB,EAAE,KAAK,MAAM,WAAW,IAAI,MAAM,YAAY,YAAY,IAAI,GAAG,IAAI;AAAA,EAC7J;AACA,GAAG,wBAAwB,SAASsB,uBAAsB,QAAQ,OAAO,MAAM;AAC3E,MAAI,QAAQ,MAAM;AACd,WAAOtB,yBAAuB,MAAM,2BAA2B,GAAG;AAAA,EAC1E;AACI,QAAM,eAAe,IAAI,MAAM,SAAS,QAAW,GAAA,QAAQ,YAAY,MAAM,OAAO,CAAC;AACrF,MAAI,MAAM,SAAS,MAAM;AAErB,iBAAa,SAAY,GAAA,QAAQ,YAAY,MAAM,KAAK;AAAA,EAChE;AACIA,2BAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,OAAO,cAAc;AAAA,IAC9F;AAAA,IACA,OAAUlB,GAAAA,WAAS,KAAK,MAAM,CAAC,MAAM,EAAE,OAAO;AAAA,IAC9C,OAAO;AAAA,EACf,CAAK;AACD,MAAI,KAAK,QAAQ;AAGb;AAAA,EACR;AAEIkB,2BAAuB,MAAM,yBAAyB,KAAK,8BAA8B,EAAE,KAAK,IAAI;AACpG,OAAK,KAAK,IAAI,OAAO,MAAM;AAC3B,MAAI,QAAQ,QAAQ,KAAK,cAAc,GAAG;AACtCA,6BAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,OAAO,sCAAsC,YAAY;AACtI,SAAK,KAAK,SAAS,KAAK,cAAc,YAAY;AAAA,EAC1D;AACI,MAAI,QAAQ,MAAM;AACd,QAAI,KAAK,SAAS;AACd,WAAK,OAAO,YAAY;AAAA,IACpC,OACa;AACD,WAAK,KAAK,SAAS,KAAK,iBAAiB,IAAI,MAAM,GAAG,KAAK,IAAI,YAAY,YAAY,yCAAyC,CAAC;AAAA,IAC7I;AAAA,EACA;AACA,GAAG,yBAAyB,SAASuB,wBAAuB,MAAM;AAC9D,OAAQ/B,GAAAA,WAAS,OAAO,IAAI;AACxB;AACJQ,2BAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,OAAO,kBAAkB,IAAI;AAC1G,QAAM,OAAOA,yBAAuB,MAAM,2BAA2B,GAAG;AACxE,MAAI,QAAQ,QAAQ,KAAK,SAAS;AAC9B,SAAK,SAAS,IAAI;AAAA,EAC1B,WACa,CAAC,KAAK,QAAQ;AAEnB,SAAK,KAAK,SAAS,KAAK,cAAc,MAAM,MAAM,IAAI;AACtD,SAAK,KAAK,IAAI,OAAO,QAAQ;AAAA,EACrC;AACA,GAAG,yBAAyB,SAASwB,wBAAuB,MAAM;AAC9D,MAAI,QAAQ;AACR;AACJ,QAAM,OAAOxB,yBAAuB,MAAM,2BAA2B,GAAG;AACxE,MAAI,QAAQ,QAAQ,KAAK,SAAS;AAC9B,SAAK,KAAK,SAAS,KAAK,YAAY,MAAM,MAAM,IAAI;AACpD,SAAK,SAAS,IAAI;AAAA,EAC1B,WACa,KAAK,OAAQ;AAAA,WAGb,EAAKR,GAAAA,WAAS,OAAO,IAAI,GAAG;AACjC,SAAK,KAAK,SAAS,KAAK,cAAc,MAAM,MAAM,IAAI;AACtD,SAAK,KAAK,IAAI,OAAO,cAAc;AAAA,EAC3C;AACA,GAAG,iCAAiC,SAASiC,gCAA+B,MAAM;AAC9E,MAAIpB;AACJN,2BAAuB,MAAM,8BAA8B,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK,WAAW,YAAY,GAAG;AACtI,MAAI,QAAQ,QAAQ,KAAK,aAAaM,MAAKL,yBAAuB,MAAM,2BAA2B,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG;AAC7I;AACJ,GAAA,GAAIvB,WAAS,KAAKkB,yBAAuB,MAAM,kCAAkC,GAAG,GAAG,CAAC,OAAO,aAAa,EAAE,CAAC;AAC/GD,2BAAuB,MAAM,kCAAkC,QAAW,GAAG;AAC7EA,2BAAuB,MAAM,2BAA2B,QAAW,GAAG;AACtEA,2BAAuB,MAAM,gCAAgC,KAAK,IAAG,GAAI,GAAG;AAChF;;ACrfA,OAAO,eAAe2B,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChDA,OAAA,OAAG;AACf,MAAM,KAAK;AAAA,EACP,YAAYC,KAAI,GAAG,MAAM,GAAG;AACxB,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,KAAKA;AAAA,EAClB;AAAA,EACI,KAAK,GAAG;AACJ,SAAK;AACL,SAAK,OAAO;AACZ,SAAK,OAAO,KAAK,QAAQ,QAAQ,KAAK,OAAO,IAAI,IAAI,KAAK;AAC1D,SAAK,OAAO,KAAK,QAAQ,QAAQ,KAAK,OAAO,IAAI,IAAI,KAAK;AAAA,EAClE;AAAA,EACI,IAAI,IAAI;AACJ,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,IAAI,MAAM;AACN,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,IAAI,MAAM;AACN,WAAO,KAAK;AAAA,EACpB;AAAA,EACI,IAAI,OAAO;AACP,WAAO,KAAK,MAAM,KAAK;AAAA,EAC/B;AAAA,EACI,QAAQ;AACJ,WAAO,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG;AAAA,EACxC;AACA;AACYD,OAAA,OAAG;;AC/Bf,IAAI,yBAA0BrC,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAChG;AACA,IAAI,yBAA0BA,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACxG;AACA,IAAI,iBAAiB,aAAa,4BAA4B,mBAAmB,kBAAkB;AACnG,OAAO,eAAeuC,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChDA,OAAA,OAAG;AACf,MAAM,wBAAwB7C;AAS9B,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOP,YAAY,WAAW,sBAAsB,UAAU,WAAW,sBAAsB,UAAU;AAC9F,oBAAgB,IAAI,IAAI;AACxB,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,gBAAY,IAAI,MAAM,KAAK,IAAG,CAAE;AAChC,+BAA2B,IAAI,MAAM,EAAE;AACvC,sBAAkB,IAAI,MAAM,IAAI;AAChC,qBAAiB;AAAA,MAAI;AAAA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO1B;AAAA,EACT;AAAA,EACI,UAAU;AACN,QAAIsB;AACJ,2BAAuB,MAAM,mBAAmBA,MAAK,uBAAuB,MAAM,kBAAkB,GAAG,GAAGA,OAAMA,MAAK,GAAG;AACxH,UAAMwB,OAAM,KAAK,IAAK;AACtB,2BAAuB,MAAM,4BAA4B,GAAG,EAAE,KAAKA,IAAG;AACtE,2BAAuB,MAAM,mBAAmBA,MAAK,GAAG;AAAA,EAChE;AAAA,EACI,IAAI,aAAa;AACb,WAAO,uBAAuB,MAAM,kBAAkB,GAAG;AAAA,EACjE;AAAA,EACI,IAAI,mBAAmB;AACnB,WAAO,uBAAuB,MAAM,mBAAmB,GAAG,KAAK,OAAO,OAAO,KAAK,IAAG,IAAK,uBAAuB,MAAM,mBAAmB,GAAG;AAAA,EACrJ;AAAA,EACI,IAAI,aAAa;AACb,UAAM,eAAe,KAAK,IAAG,IAAK,uBAAuB,MAAM,aAAa,GAAG;AAC/E,QAAI,uBAAuB,MAAM,mBAAmB,GAAG,KAAK,QAAQ,eAAe,KAAK;AACpF,aAAO;AACX,2BAAuB,MAAM,iBAAiB,KAAK,YAAY,EAAE,KAAK,IAAI;AAC1E,UAAM,SAAS,uBAAuB,MAAM,4BAA4B,GAAG,EAAE;AAC7E,WAAO,WAAW,IAAI,OAAO,KAAK,IAAI,KAAK,UAAU,YAAY,IAAI;AAAA,EAC7E;AAAA,EACI,IAAI,cAAc;AACd,UAAM,MAAM,KAAK;AACjB,WAAO,OAAO,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI;AAAA,EACnD;AAAA,EACI,IAAI,kBAAkB;AAClB,WAAO,KAAK,cAAc,sBAAsB;AAAA,EACxD;AAAA,EACI,IAAI,kBAAkB;AAClB,WAAO,KAAK,cAAc,sBAAsB;AAAA,EACxD;AAAA,EACI,QAAQ;AACJ,2BAAuB,MAAM,aAAa,KAAK,IAAG,GAAI,GAAG;AACzD,2BAAuB,MAAM,4BAA4B,GAAG,EAAE,SAAS;AACvE,2BAAuB,MAAM,mBAAmB,MAAM,GAAG;AACzD,2BAAuB,MAAM,kBAAkB,GAAG,GAAG;AACrD,WAAO;AAAA,EACf;AACA;AACYD,OAAA,OAAG;AACf,cAAc,oBAAI,QAAO,GAAI,6BAA6B,oBAAI,QAAS,GAAE,oBAAoB,oBAAI,QAAO,GAAI,mBAAmB,oBAAI,QAAO,GAAI,kBAAkB,oBAAI,WAAW,eAAe,SAASE,gBAAe;AAClN,QAAM,UAAU,KAAK,IAAK,IAAG,KAAK;AAClC,QAAM,kBAAkB,uBAAuB,MAAM,4BAA4B,GAAG,EAAE,UAAU,CAAC,OAAO,KAAK,OAAO;AACpH,MAAI,oBAAoB;AACpB,2BAAuB,MAAM,4BAA4B,GAAG,EAAE,SAAS;AAAA,WAClE,kBAAkB,GAAG;AAC1B,2BAAuB,MAAM,4BAA4B,GAAG,EAAE,OAAO,GAAG,eAAe;AAAA,EAC/F;AACA;AAAA;AC9FA,MAAIC,mBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,QAAM;AAAA;AAE/D,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA;AAEf,MAAI,eAAgBA,kBAAQA,eAAK,gBAAiB,SAAS,GAAGC,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAyC,iBAAgBzC,UAAS,GAAG,CAAC;AAAA,EAC3H;AACD,MAAIU,0BAA0BX,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,QAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,QAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,WAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAAA,EAC/F;AACD,MAAIU,0BAA0BV,kBAAQA,eAAK,0BAA2B,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,QAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,QAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,QAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,WAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AAAA,EACvG;AACD,MAAID,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAAA,EAC5D;AACD,MAAI,yBAAyB,4BAA4B,sBAAsB,qBAAqB,+BAA+B,6BAA6B,iCAAiC,qBAAqB,8BAA8B,8BAA8B,4BAA4B,0BAA0B,kCAAkC,8BAA8B,kCAAkC,4BAA4B,2BAA2B,sBAAsB,8BAA8B,4BAA4B,6BAA6B,4BAA4B,+BAA+B;AACzoB,SAAO,eAAcC,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,EAAAA,SAAuB,eAAAA,SAAA,OAAeA,SAAe,OAAAA,SAAA,OAAeA,SAAoB,YAAAA,SAAA,OAAeA,SAAuB,eAAAA,SAAA,WAAmBA,SAAuB,eAAAA,SAAA,sBAA8B;AACtM,QAAM,gBAAgBF,iBAAgBL,YAAsB;AAC5D,QAAMoB,kBAAiBf,iBAAgB,UAAuB;AAC9D,QAAMS,iBAAgBT,iBAAgBK,YAAsB;AAC5D,QAAMuC,WAAU5B;AAChB,QAAM6B,yBAAwBtB;AAC9B,QAAM,iBAAiBC;AACvB,QAAMX,cAAaY;AACnB,QAAMqB,WAAUpB;AAChB,QAAM,SAASC;AACf,QAAMjC,YAAWkC;AACjB,QAAM,SAASC;AACf,QAAMzB,YAAW2C;AACjB,QAAMC,aAAYC;AAClB,MAAI,wBAAwB1B;AAC5B,SAAO,eAAerB,UAAS,uBAAuB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,sBAAsB;AAAA,EAAsB,EAAA,CAAE;AAClJ,MAAI,iBAAiBsB;AACrB,SAAO,eAAetB,UAAS,gBAAgB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,eAAe;AAAA,EAAe,EAAA,CAAE;AAC7H,MAAI,aAAauB;AACjB,SAAO,eAAevB,UAAS,YAAY,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,WAAW;AAAA,EAAW,EAAA,CAAE;AACjH,eAAagD,QAAqBhD,QAAO;AACzC,MAAIiD,YAAWC;AACf,SAAO,eAAelD,UAAS,gBAAgB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAOiD,UAAS;AAAA,EAAe,EAAA,CAAE;AACvH,MAAIE,UAASC;AACb,SAAO,eAAepD,UAAS,QAAQ,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAOmD,QAAO;AAAA,EAAO,EAAA,CAAE;AACrG,SAAO,eAAenD,UAAS,aAAa,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAOmD,QAAO;AAAA,EAAY,EAAA,CAAE;AAC/G,SAAO,eAAenD,UAAS,QAAQ,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAOmD,QAAO;AAAA,EAAO,EAAA,CAAE;AACrG,MAAI,SAASxB;AACb,SAAO,eAAe3B,UAAS,QAAQ,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,OAAO;AAAA,EAAO,EAAA,CAAE;AACrG,MAAIgB,UAASqC;AACb,SAAO,eAAerD,UAAS,QAAQ,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAOgB,QAAO;AAAA,EAAO,EAAA,CAAE;AAAA,EAWrG,MAAMsC,cAAa;AAAA,IACf,YAAY,MAAM;AACd,8BAAwB,IAAI,IAAI;AAChC,iCAA2B,IAAI,MAAM,IAAI,OAAO,KAAI,CAAE;AACtD,2BAAqB,IAAI,MAAM,MAAM;AACrC,0BAAoB,IAAI,MAAM,EAAE;AAChC,oCAA8B,IAAI,MAAM,KAAK;AAC7C,kCAA4B,IAAI,MAAM,CAAC;AACvC,sCAAgC,IAAI,MAAM,CAAC;AAC3C,0BAAoB,IAAI,MAAM,EAAE;AAChC,mCAA6B,IAAI,MAAM,MAAM;AAC7C,mCAA6B,IAAI,MAAM,IAAI,OAAO,KAAI,CAAE;AACxD,iCAA2B,IAAI,MAAM,CAAC;AACtC,+BAAyB,IAAI,MAAM,MAAM;AACzC,uCAAiC,IAAI,MAAM,CAAC;AAC5C,mCAA6B,IAAI,MAAM,oBAAI,IAAG,CAAE;AAChD,WAAK,UAAU,IAAI,cAAc,QAAQ,aAAc;AAIvD,WAAK,KAAK,KAAK,QAAQ,GAAG,KAAK,KAAK,OAAO;AAK3C,WAAK,MAAM,KAAK,QAAQ,IAAI,KAAK,KAAK,OAAO;AAC7C,uCAAiC,IAAI,MAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAC/D,iCAA2B,IAAI,MAAM,MAAM,KAAK,IAAI,KAAK,CAAC;AAC1D,gCAA0B;AAAA,QAAI;AAAA,QAAM,MAAM;AACtC,cAAI,CAAC5C,wBAAuB,MAAM,+BAA+B,GAAG,GAAG;AACnE,YAAAD,wBAAuB,MAAM,+BAA+B,MAAM,GAAG;AACrE,YAAAF,eAAc,QAAQ,WAAW,MAAMG,wBAAuB,MAAM,yBAAyB,KAAK,oBAAoB,EAAE,KAAK,IAAI,GAAG,CAAC;AAAA;;;MAI5I;AACD,WAAK,WAAc,GAAAiC,uBAAsB,eAAe,EAAE,GAAG,MAAM,UAAU,KAAK,SAAS;AAC3F,WAAK,GAAG,YAAY,CAAC,IAAI,QAAQ;AAC7B,YAAI5B;AACJ,QAAAL,wBAAuB,MAAM,4BAA4B,GAAG,EAAE,KAAK,GAAG,SAAS;AAC/E,QAAAA,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,IAAI,OAAOK,MAAKL,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,IAAI,GAAG,OAAO,QAAQK,QAAO,SAASA,MAAK,KAAK,CAAC;AACjM,QAAAL,wBAAuB,MAAM,2BAA2B,GAAG,EAAE,KAAK,IAAI;AAAA,MAClF,CAAS;AACD,WAAK,GAAG,iBAAiB,CAAC,UAAU;AAChC,YAAIK;AACJ,QAAAL,wBAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,MAAM,mCAAmC,KAAK;AACjH,QAAAD,wBAAuB,MAAM,mCAAmCM,MAAKL,wBAAuB,MAAM,kCAAkC,GAAG,GAAGK,OAAMA,MAAK,GAAG;AAAA,MACpK,CAAS;AACD,WAAK,GAAG,cAAc,CAAC,QAAQ,QAAQ,SAAS;AAC5C,YAAIA;AACJ,QAAAL,wBAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,wHAAwH;AAAA,UAC5L,mBAAmB,KAAK,QAAQ;AAAA,UAChC,SAAY,GAAAR,UAAS,KAAK,MAAM;AAAA,UAChC,SAAY,GAAAA,UAAS,KAAK,MAAM;AAAA,UAChC,UAAU,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAAA,QAC3E,CAAa;AACD,QAAAO,wBAAuB,MAAM,mCAAmCM,MAAKL,wBAAuB,MAAM,kCAAkC,GAAG,GAAGK,OAAMA,MAAK,GAAG;AAAA,MACpK,CAAS;AACD,WAAK,GAAG,cAAc,CAAC,UAAU;AAC7B,QAAAL,wBAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,kCAAkC,KAAK;AAC/G,QAAAA,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,QAAS;AACzE,YAAI,KAAK,QAAQ,wCAAwC,KACrDA,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,kBAC5D,KAAK,QAAQ,uCAAuC;AACxD,eAAK,QAAQ,KAAK,cAAc,IAAI,MAAM,QACtC,wBACAA,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,gBAAgB,QAAQ,CAAC,IACzF,GAAG,CAAC;AACR,eAAK,IAAK;AAAA,eAET;AACD,UAAAA,wBAAuB,MAAM,2BAA2B,GAAG,EAAE,KAAK,IAAI;AAAA;MAEtF,CAAS;AACD,UAAI,KAAK,QAAQ,uBAAuB,GAAG;AACvC,QAAAD,wBAAuB,MAAM,8BAA8BF,eAAc,QAAQ,YAAY,MAAMG,wBAAuB,MAAM,2BAA2B,GAAG,EAAE,KAAK,IAAI,GAAG,KAAK,QAAQ,oBAAoB,GAAG,GAAG;AACnN,QAAAA,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,MAAK;AAAA;AAEzE,MAAAD,wBAAuB,MAAM,sBAAsB,KAAK,QAAQ,QAAQ,GAAG;AAC3E,MAAAI,gBAAe,QAAQ,KAAK,cAAcH,wBAAuB,MAAM,kCAAkC,GAAG,CAAC;AAC7G,MAAAG,gBAAe,QAAQ,KAAK,QAAQH,wBAAuB,MAAM,4BAA4B,GAAG,CAAC;AAAA;IAErG,IAAI,QAAQ;AACR,aAAOA,wBAAuB,MAAM,0BAA0B,GAAG,KAAK;AAAA;;;;;;;IAQ1E,IAAI,aAAa,MAAM;AACnB,MAAAA,wBAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,sBAAsB,EAAE,WAAU,CAAE;AAC5G,UAAIA,wBAAuB,MAAM,0BAA0B,GAAG,KAAK,MAAM;AACrE,aAAK,QAAQ,KAAK,WAAW;AAC7B,YAAIlB,UAAS,KAAKkB,wBAAuB,MAAM,8BAA8B,GAAG,GAAGH,eAAc,QAAQ,aAAa;AACtH,QAAAE,wBAAuB,MAAM,8BAA8B,QAAW,GAAG;AACzE,QAAAI,gBAAe,QAAQ,eAAe,cAAcH,wBAAuB,MAAM,kCAAkC,GAAG,CAAC;AACvH,QAAAG,gBAAe,QAAQ,eAAe,QAAQH,wBAAuB,MAAM,4BAA4B,GAAG,CAAC;AAC3G,QAAAD,wBAAuB,MAAM,0BAA0B,IAAIE,YAAW,SAAQ,EAAG,QAAQ,KAAK,oBAAoB,UAAU,EAAE,KAAK,MAAM;AACrI,eAAK,QAAQ,KAAK,KAAK;AAAA,QACvC,CAAa,CAAC,GAAG,GAAG;AAAA;AAEZ,aAAOD,wBAAuB,MAAM,0BAA0B,GAAG;AAAA;;;;;;;IAQrE,YAAY,MAAM;AACd,UAAI,KAAK,OAAO;AACZ,aAAK,OAAO,IAAI,MAAM,4CAA4C,KAAK,OAAO,CAAC;AAAA;AAEnF,MAAAA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,KAAK,IAAI;AAGhE,MAAAA,wBAAuB,MAAM,2BAA2B,GAAG,EAAE,KAAK,IAAI;AAGtE,aAAO,KAAK;AAAA;;;;IAKhB,IAAI,SAAS;AACT,aAAO,KAAK,qBAAqB,KAAK,KAAK,kBAAkB;AAAA;;;;IAKjE,IAAI,mBAAmB;AACnB,aAAOA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE;AAAA;;;;IAKlE,IAAI,mBAAmB;AACnB,aAAOA,wBAAuB,MAAM,4BAA4B,GAAG,EAAE;AAAA;;;;IAKzE,IAAI,mBAAmB;AACnB,aAAOA,wBAAuB,MAAM,4BAA4B,GAAG;AAAA;;;;IAKvE,IAAI,YAAY;AACZ,aAAOA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE;AAAA;;;;IAKlE,IAAI,gBAAgB;AAChB,cAAO,GAAIgC,SAAQ;AAAA,QAAOhC,wBAAuB,MAAM,qBAAqB,GAAG;AAAA;AAAA,QAE/E,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,GAAG,UAAU,CAAC,GAAG;AAAA,MAAI;AAAA;IAElD,IAAI,oBAAoB;AACpB,cAAO,GAAIgC,SAAQ;AAAA,QAAOhC,wBAAuB,MAAM,qBAAqB,GAAG;AAAA;AAAA,QAE/E,CAAC,OAAO,GAAG,YAAY,CAAC,GAAG;AAAA,MAAM;AAAA;;;;IAKrC,IAAI,eAAe;AACf,aAAOA,wBAAuB,MAAM,qBAAqB,GAAG;AAAA;;;;IAKhE,IAAI,eAAe;AACf,aAAOA,wBAAuB,MAAM,qBAAqB,GAAG,EACvD,IAAI,CAAC,OAAO,GAAG,WAAW,EAC1B,OAAO,CAAC,OAAO,MAAM,IAAI;AAAA;;;;IAKlC,IAAI,qBAAqB;AACrB,aAAOA,wBAAuB,MAAM,kCAAkC,GAAG;AAAA;;;;;;IAO7E,OAAO;AACH,YAAM,MAAM,CAAE;AACd,iBAAW,QAAQ,CAAC,GAAGA,wBAAuB,MAAM,qBAAqB,GAAG,CAAC,GAAG;AAC5E,YAAI,QAAQ,QAAQ,KAAK,QAAO,GAAI;AAChC,cAAI,KAAK,KAAK,GAAG;AAAA;;AAGzB,aAAO;AAAA;;;;IAKX,QAAQ;AACJ,UAAIK;AACJ,YAAM,kBAAiB,GAAI2B,SAAQ,OAAOhC,wBAAuB,MAAM,qBAAqB,GAAG,GAAG,CAAC,OAAO,GAAG,KAAK;AAClH,aAAO;AAAA,QACH,kBAAkBA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE;AAAA,QACzE,kBAAkBA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE;AAAA,QACzE;AAAA,QACA,cAAc,KAAK,QAAQ;AAAA,QAC3B,oBAAoBA,wBAAuB,MAAM,kCAAkC,GAAG;AAAA,QACtF,yBAAyBA,wBAAuB,MAAM,8BAA8B,GAAG,EAAE;AAAA,QACzF,mBAAmB,KAAK,IAAI,GAAGA,wBAAuB,MAAM,6BAA6B,GAAG,IAAI,KAAK,IAAG,CAAE;AAAA,QAC1G,kBAAkB,KAAK;AAAA,QACvB,gBAAgB,KAAK;AAAA,QACrB,QAAQA,wBAAuB,MAAM,0BAA0B,GAAG,KAAK;AAAA,QACvE,OAAO,YAAYK,MAAKL,wBAAuB,MAAM,0BAA0B,GAAG,OAAO,QAAQK,QAAO,SAAS,SAASA,IAAG;AAAA,MAChI;AAAA;;;;IAKL,qBAAqB,KAAK;AACtB,UAAIA;AACJ,cAAQA,MAAKL,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,IAAI,GAAG,OAAO,QAAQK,QAAO,SAASA,MAAK;AAAA;IAE5H,IAAI,iBAAiB;AACjB,iBAAWvB,UAAS,aAAa,CAAC,GAAGkB,wBAAuB,MAAM,8BAA8B,GAAG,EAAE,QAAO,CAAE,CAAC;AAAA;;;;;IAMnH,MAAM,oBAAoB,aAAa,MAAM;AACzC,YAAM,QAAQ,CAAC,GAAGA,wBAAuB,MAAM,qBAAqB,GAAG,CAAC;AACxE,MAAAA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,SAAS;AAChE,YAAM,QAAQ,IAAI,MAAM,IAAI,CAAC,SAAS,KACjC,IAAI,YAAY,QAAQ,EACxB,MAAM,CAAC,QAAQ,KAAK,QAAQ,KAAK,aAAgB,GAAAkC,SAAQ,SAAS,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAAA;;;;;;IAOxF,YAAY,UAAU;AAClB,WAAK,QAAQ,WAAW;AAExB,MAAAlC,wBAAuB,MAAM,2BAA2B,GAAG,EAAE,KAAK,IAAI;AAAA;;;;;;;;IAS1E,cAAc;AACV,MAAAA,wBAAuB,MAAM,yBAAyB,KAAK,4BAA4B,EAAE,KAAK,IAAI;AAClG,YAAM,cAAc,CAAE;AACtB,UAAI,aAAa,KAAK,IAAI,GAAGA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,SAAS,KAAK,QAAQ,QAAQ;AAClH,UAAIgC,SAAQ,eAAehC,wBAAuB,MAAM,qBAAqB,GAAG,GAAG,CAAC,SAAS;AACzF,YAAIK;AAIJ,YAAI,KAAK,MAAM;AAKX,gBAAM,OAAOA,MAAK,KAAK,mBAAmB,QAAQA,QAAO,SAASA,MAAM,EAAE,cAAc,IAAI,YAAY;AACxG,cAAI,OAAO,MAAM;AACb,wBAAY,KAAK,KAAK,IAAI,MAAM,GAAG,CAAC;AACpC,mBAAO;AAAA;AAEX,eAAK,oBAAqB;AAAA;AAE9B,eAAO;AAAA,MACnB,CAAS;AACD,aAAO,QAAQ,IAAI,WAAW;AAAA;;AAGtC,EAAAf,SAAA,eAAuBsD;AACvB,+BAA6B,oBAAI,WAAW,uBAAuB,oBAAI,QAAO,GAAI,sBAAsB,oBAAI,QAAS,GAAE,gCAAgC,oBAAI,QAAO,GAAI,8BAA8B,oBAAI,QAAS,GAAE,kCAAkC,oBAAI,QAAO,GAAI,sBAAsB,oBAAI,QAAS,GAAE,+BAA+B,oBAAI,WAAW,+BAA+B,oBAAI,QAAO,GAAI,6BAA6B,oBAAI,QAAO,GAAI,2BAA2B,oBAAI,QAAS,GAAE,mCAAmC,oBAAI,QAAO,GAAI,+BAA+B,oBAAI,QAAS,GAAE,mCAAmC,oBAAI,QAAO,GAAI,6BAA6B,oBAAI,QAAS,GAAE,4BAA4B,oBAAI,WAAW,0BAA0B,oBAAI,QAAO,GAAI,uBAAuB,SAASC,wBAAuB;AAChyB,IAAA9C,wBAAuB,MAAM,+BAA+B,OAAO,GAAG;AACtE,SAAK,YAAa;AAClB,WAAOC,wBAAuB,MAAM,yBAAyB,KAAK,0BAA0B,EAAE,KAAK,IAAI,GAAG;AAAA;AAG1G,IAAAA,wBAAuB,MAAM,yBAAyB,KAAK,6BAA6B,EAAE,KAAK,IAAI;AAAA,EACvG,GAAG,+BAA+B,SAAS8C,gCAA+B;AACtE,QAAI,KAAK,QAAQ,qBACb,KAAK,QAAQ,yBAAyB,KACtC9C,wBAAuB,MAAM,iCAAiC,GAAG,IAAI,KAAK,QAAQ,yBAAyB,KAAK,OAAO;AACvH,MAAAD,wBAAuB,MAAM,iCAAiC,KAAK,IAAG,GAAI,GAAG;AAC7E,WAAK,KAAK,KAAM;AAAA;EAEvB,GAAE,6BAA6B,SAASgD,4BAA2B,UAAU,GAAG;AAC7E,QAAI/C,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,WAAW,KAAK,KAAK,SAAS,UAAU;AAC/F,aAAO;AACX,UAAM,YAAYA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK;AAE9F,QAAI,aAAa,MAAM;AACnB,aAAO;AAAA;AAEX,UAAM,OAAOA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,MAAO;AAC3E,QAAI,QAAQ,MAAM;AACd,WAAK,QAAQ,KAAK,iBAAiB,IAAI,MAAM,sBAAsB,CAAC;AACpE,aAAO;AAAA;AAEX,UAAM,YAAY,UAAU,SAAS,IAAI;AACzC,QAAI,CAAC,WAAW;AAGZ,MAAAA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,KAAK,IAAI;AAGhE,aAAOA,wBAAuB,MAAM,yBAAyB,KAAK+C,2BAA0B,EAAE,KAAK,MAAM,SAAS;AAAA;AAEtH,IAAA/C,wBAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,MAAM,gDAAgD;AAAA,MACrH,WAAW,UAAU;AAAA,MACrB;AAAA,IACR,CAAK;AACD,WAAO;AAAA,EACX,GAAG,8BAA8B,SAASgD,+BAA8B;AAGpE,WAAO,KAAK,IAAI,KAAO,KAAK,QAAQ,kBAAkB;AAAA,EAC1D,GAAG,6BAA6B,SAASC,8BAA6B;AAClE,UAAM,oBAAoB,KAAK,QAAQ,WAAWjD,wBAAuB,MAAM,qBAAqB,GAAG,EAAE;AAGzG,UAAM,oBAAoBA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,SAAS,KAAK;AAC/F,UAAM,WAAW,KAAK,IAAI,GAAG,KAAK,IAAI,mBAAmB,iBAAiB,CAAC;AAC3E,WAAO,KAAK,QAAQ,+BAA+B;AAAA;AAAA,MAE3C;AAAA;AAAA;AAAA,MAEA,KAAK,IAAI,GAAG,QAAQ;AAAA;AAAA,EAChC,GAAG,gCAAgC,eAAekD,iCAAgC;AAC9E,QAAI7C;AACJ,QAAI,eAAeL,wBAAuB,MAAM,yBAAyB,KAAK,0BAA0B,EAAE,KAAK,IAAI;AACnH,QAAI,KAAK,SAASA,wBAAuB,MAAM,6BAA6B,GAAG,IAAI,KAAK,SAAS,iBAAiB,GAAG;AACjH;AAAA;AAGJ,IAAAD,wBAAuB,MAAM,6BAA6B,KAAK,IAAG,IAAKC,wBAAuB,MAAM,yBAAyB,KAAK,2BAA2B,EAAE,KAAK,IAAI,GAAG,GAAG;AAC9K,aAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACnC,UAAI,KAAK,OAAO;AACZ;AAAA;AAGJ,MAAAD,wBAAuB,MAAM,6BAA6B,KAAK,IAAG,IAAKC,wBAAuB,MAAM,yBAAyB,KAAK,2BAA2B,EAAE,KAAK,IAAI,GAAG,GAAG;AAC9K,MAAAD,wBAAuB,MAAM,6BAA6BM,MAAKL,wBAAuB,MAAM,4BAA4B,GAAG,GAAGK,OAAMA,MAAK,GAAG;AAC5I,UAAI;AACA,cAAM,OAAOL,wBAAuB,MAAM,yBAAyB,KAAK,0BAA0B,EAAE,KAAK,IAAI;AAC7G,cAAM,SAAS,OAAO,GAAGoC,WAAU,eAAe,MAAM,KAAK,QAAQ,kBAAkB;AACvF,YAAI,WAAWA,WAAU,SAAS;AAC9B,eAAK,KACA,KAAK,CAAC,OAAO;AACd,iBAAK,GAAG,IAAI,OAAO,YAAY;AAC/B,iBAAK,QAAQ,KAAK,eAAe,GAAGF,SAAQ,SAAS,gCACjD,KAAK,QAAQ,qBACb,IAAI,GAAG,EAAE;AAAA,UAChB,CAAA,EACI,MAAM,CAAC,QAAQ;AAGhB,iBAAK,QAAQ,KAAK,eAAe,GAAGA,SAAQ,SAAS,GAAG,CAAC;AAAA,UAC7E,CAAiB;AAAA,eAEA;AACD,UAAAlC,wBAAuB,MAAM,sBAAsB,GAAG,EAAE,KAAK,IAAI,EAAE,MAAM,iEAAiE,EAAE,KAAK,OAAO,IAAG,CAAE;AAAA;AAIjK,uBAAe,KAAK,IAAIA,wBAAuB,MAAM,yBAAyB,KAAK,0BAA0B,EAAE,KAAK,IAAI,GAAG,YAAY;AAAA,eAEpI,KAAK;AACR,aAAK,QAAQ,KAAK,eAAc,GAAIkC,SAAQ,SAAS,GAAG,CAAC;AAAA;;AAKjE,UAAMiB,SAAQ,KAAK,IAAI,KAAK,KAAK,QAAQ,0BAA0B;AACnE,IAAApD,wBAAuB,MAAM,6BAA6B,KAAK,IAAK,IAAGoD,QAAO,GAAG;AAEjF,IAAAtD,eAAc,QAAQ,WAAWG,wBAAuB,MAAM,2BAA2B,GAAG,GAAGmD,MAAK,EAAE,MAAO;AAAA,EACjH,GAAG;AAAA,EAEH,eAAeC,8BAA6B;AAGxC,UAAM,OAAO,MAAM,KAAK,QAAQ,eAAgB;AAChD,UAAM,SAAS,IAAI,eAAe,aAAa,MAAM,KAAK,SAASpD,wBAAuB,MAAM,2BAA2B,GAAG,CAAC;AAC/H,IAAAA,wBAAuB,MAAM,qBAAqB,GAAG,EAAE,KAAK,MAAM;AAClE,WAAO;AAAA,EACV;;;;;ACtdD,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5C,QAAA,WAAGqD;AACJ,QAAA,UAAG;AACL,QAAA,QAAG;AACY,QAAA,uBAAG;AAC/B,SAASA,WAAS1B,IAAG;AACjB,SAAO,OAAOA,OAAM,YAAY,SAASA,EAAC;AAC9C;AACA,SAAS,QAAQA,IAAG;AAChB,MAAIA,MAAK;AACL;AACJ,MAAI0B,WAAS1B,EAAC;AACV,WAAOA;AACX,MAAI;AACA,WAAO,WAAW,OAAOA,EAAC,EAAE,KAAI,CAAE;AAAA,EAC1C,QACU;AACF,WAAO;AAAA,EACf;AACA;AACA,SAAS,MAAMA,IAAG;AACd,MAAIA,MAAK;AACL;AACJ,MAAI0B,WAAS1B,EAAC,GAAG;AAEb,WAAO,KAAK,MAAMA,EAAC;AAAA,EAC3B;AACI,MAAI;AACA,WAAO,SAAS,OAAOA,EAAC,EAAE,KAAI,CAAE;AAAA,EACxC,QACU;AACF,WAAO;AAAA,EACf;AACA;AAaA,SAAS,qBAAqB,OAAO,WAAW;AAE5C,MAAI,CAAC0B,WAAS,KAAK;AACf,UAAM,IAAI,MAAM,wBAAwB;AAC5C,MAAI,YAAY;AACZ,UAAM,IAAI,MAAM,gCAAgC;AACpD,MAAI,UAAU;AACV,WAAO;AACX,QAAM,aAAa,KAAK,IAAI,IAAI,SAAS;AACzC,SAAO,KAAK,IAAI,KAAK,IAAI,OAAO,UAC1B,IACA,KAAK,MAAM,QAAQ,UAAU,IAAI;AAC3C;;AC1DA,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/C,MAAA,QAAG;AAOhB,SAAS,MAAM1B,IAAG,GAAG;AACjB,SAAO,MAAM,KAAK,EAAE,QAAQA,GAAC,GAAI,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC;AACnD;ACVA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5C,QAAA,WAAG2B;AACN,QAAA,QAAG;AACA,QAAA,WAAG;AACG,QAAA,iBAAG;AACP,QAAA,aAAG;AACA,QAAA,gBAAG;AACb,QAAA,MAAG;AACC,QAAA,UAAG;AACN,QAAA,OAAG;AACH,QAAA,OAAG;AACI,QAAA,cAAG;AACH,QAAA,cAAG;AACJ,QAAA,aAAG;AACrB,MAAMC,aAAWxE;AACjB,MAAM,UAAUQ;AAChB,SAAS+D,WAAS,GAAG;AACjB,SAAO,OAAO,MAAM;AACxB;AACA,MAAM,UAAS,GAAI,QAAQ,OAAO,IAAI,CAAC,OAAM,GAAI,QAAQ,OAAO,GAAG,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC;AACtF,MAAM,UAAS,GAAI,QAAQ,OAAO,IAAI,CAAC,OAAM,GAAI,QAAQ,OAAO,GAAG,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC;AACtF,SAAS,MAAMrE,IAAG;AACd,SAAOA,MAAK,QAAQ,OAAOA,EAAC,EAAE,KAAI,EAAG,WAAW;AACpD;AACA,SAAS,SAASA,IAAG;AACjB,SAAO,CAAC,MAAMA,EAAC;AACnB;AAIA,SAAS,eAAeA,IAAG;AACvB,SAAOqE,WAASrE,EAAC,KAAKA,GAAE,KAAI,EAAG,SAAS;AAC5C;AACA,SAAS,WAAWA,IAAG;AACnB,MAAIA,MAAK;AACL;AACJ,EAAAA,KAAI,OAAOA,EAAC,EAAE,KAAM;AACpB,SAAOA,GAAE,WAAW,IAAI,SAAYA;AACxC;AACA,SAAS,cAAc,KAAK;AACxB,SAAO,IAAI,OAAO,QAAQ;AAC9B;AACA,SAAS,QAAQ,SAASa,QAAO;AAC7B,MAAIA,UAAS;AACT,WAAO;AAEX,UAAQ,YAAY,MAAM,SAAS,QAAQ,KAAK,MAAMA,MAAK,CAAC;AAChE;AAEA,SAAS,IAAIb,IAAG;AACZ,SAAOA,MAAK,OAAO,KAAK,OAAOA,EAAC;AACpC;AAEA,SAAS,QAAQ,GAAG,QAAQ,SAAS;AACjC,MAAI,KAAK,YAAasE,WAAS,UAAU,CAAC,KAAK,MAAM,CAAC;AAClD,QAAI;AACR,QAAMtE,KAAI,OAAO,CAAC;AAClB,OAAQsE,GAAAA,WAAS,UAAU,CAAC,KAAK,IAAI,KAAK,YAAY,KAAK;AAEvD,WAAO,MAAM,QAAQ,SAAS,SAAStE,GAAE,MAAM,IAAI,KAAK,IAAI,CAAC;AAAA,EACrE,OACS;AACD,WAAO,QAAQ,SAAS,SAASA,GAAE,MAAM,IAAIA;AAAA,EACrD;AACA;AACA,SAAS,QAAQ,SAAS;AACtB,SAAO,QAAQ,IAAI,CAAC,MAAM,QAAQ,GAAG,GAAG,GAAG,CAAC;AAChD;AACA,SAAS,QAAQ,SAAS;AACtB,SAAO,QAAQ,IAAI,CAAC,MAAM,QAAQ,GAAG,GAAG,GAAG,CAAC;AAChD;AAIA,SAAS,YAAYA,IAAG,QAAQ;AAC5B,SAAO,IAAIA,EAAC,EAAE,YAAa,EAAC,WAAW,OAAO,YAAa,CAAA,IACrDA,GAAE,MAAM,OAAO,MAAM,IACrBA;AACV;AACA,SAAS,YAAYA,IAAG,QAAQ;AAC5B,QAAM,MAAM,IAAIA,EAAC;AACjB,SAAO,IAAI,SAAS,MAAM,IAAI,IAAI,MAAM,GAAG,CAAC,OAAO,MAAM,IAAI;AACjE;AAIA,SAAS,cAAc,KAAK;AACxB,SAAO,IACF,KAAK,IAAI,EACT,MAAM,OAAO,EACb,IAAI,CAAC,OAAO,GAAG,KAAM,CAAA,EACrB,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC;AACrC;AC5FA,OAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC1C,OAAA,aAAG;AACR,OAAA,QAAG;AACL,OAAA,MAAG;AACC,OAAA,UAAG;AACG,OAAA,gBAAG;AACZ,OAAA,OAAG;AACQ,OAAA,kBAAG;AACZ,OAAA,SAAG;AACF,OAAA,UAAG;AAClB,MAAMO,aAAWT;AACjB,SAAS,WAAW,KAAK;AACrB,SAAQ,OAAO,QACX,OAAO,QAAQ,YACf,OAAO,IAAI,OAAO,QAAQ,MAAM;AACxC;AACA,SAAS,MAAM,KAAK;AAChB,SAAO,MAAM,QAAQ,GAAG,IAAI,MAAM;AACtC;AACA,SAAS,IAAI,KAAK;AACd,SAAO,MAAM,QAAQ,GAAG,IAClB,MACA,OAAO,OACH,CAAA,QACIS,WAAS,UAAU,GAAG,IACtB,CAAC,GAAG,IACJ,WAAW,GAAG,IACV,MAAM,KAAK,GAAG,IACd,CAAC,GAAG;AAC1B;AACA,SAAS,QAAQ,OAAO;AACpB,SAAO,MAAM,OAAO,CAAC,SAAS,QAAQ,IAAI;AAC9C;AAKA,SAAS,cAAc,KAAK,QAAQ;AAChC,MAAI,IAAI;AACR,MAAI,QAAQ,CAAC,IAAI,MAAM;AACnB,QAAI,OAAO,EAAE,GAAG;AACZ,UAAI,MAAM;AACN,YAAI,CAAC,IAAI;AACb;AAAA,IACZ;AAAA,EACA,CAAK;AACD,MAAI,SAAS;AACb,SAAO;AACX;AACA,SAAS,KAAK,KAAK;AACf,SAAO,IAAI,OAAO,CAAC,KAAK,OAAO;AAC3B,QAAI,IAAI,QAAQ,EAAE,MAAM;AACpB,UAAI,KAAK,EAAE;AACf,WAAO;AAAA,EACV,GAAE,EAAE;AACT;AAEA,SAAS,gBAAgB,GAAG,GAAG;AAC3B,SAAQ,KAAK,QACT,KAAK,QACL,EAAE,WAAW,EAAE,UACf,EAAE,MAAM,CAAC,IAAI,QAAQ,OAAO,EAAE,GAAG,CAAC;AAC1C;AAQA,SAAS,OAAO,KAAK,GAAG;AACpB,SAAQ,IAAI,GAAG,EAAE,OAAO,CAAC,OAAO,MAAM,IAAI,EACrC,IAAI,CAAC,UAAU;AAAA,IAChB;AAAA,IACA,KAAK,EAAE,IAAI;AAAA,EACnB,EAAM,EACG,OAAO,CAAC,OAAO,GAAG,OAAO,IAAI,EAE7B,KAAK,CAAC,GAAG,MAAM,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,EAChC,IAAI,CAAC,OAAO,GAAG,IAAI;AAC5B;AACA,SAAS,IAAI,GAAG,GAAG;AAEf,MAAI,KAAK,QAAQ,KAAK;AAClB,WAAO;AAGX,MAAI,KAAK;AACL,WAAO;AACX,MAAI,KAAK;AACL,WAAO;AACX,QAAM,QAAQ,OAAO;AACrB,QAAM,QAAQ,OAAO;AACrB,OAAK,UAAU,YAAY,UAAU,cAChC,UAAU,YAAY,UAAU,WAAW;AAE5C,WAAO,OAAO,CAAC,EAAE,cAAc,OAAO,CAAC,CAAC;AAAA,EAChD;AACI,SAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK;AACpC;AACA,SAAS,QAAQ,UAAU,GAAG;AAC1B,MAAI;AACJ,MAAI;AACJ,aAAW,MAAM,UAAU;AACvB,UAAM,MAAM,EAAE,EAAE;AAChB,QAAI,OAAO,SAAS,OAAO,QAAQ,MAAM,MAAM;AAC3C,YAAM;AACN,eAAS;AAAA,IACrB;AAAA,EACA;AACI,SAAO;AACX;;AC/GA,OAAO,eAAe,YAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACvC,WAAA,gBAAG;AACxB,SAAS,cAAc,GAAG,YAAY;AAClC,MAAI,UAAU;AACd,QAAM,IAAI,YAAY;AAClB,QAAI;AACA,aAAO,MAAM,EAAG;AAAA,IAC5B,SACe,KAAK;AACR,UAAI,UAAU,YAAY;AACtB;AACA,eAAO,EAAG;AAAA,MAC1B,OACiB;AACD,cAAM;AAAA,MACtB;AAAA,IACA;AAAA,EACK;AACD,SAAO,EAAG;AACd;;;;ACnBA,OAAO,eAAe,WAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC3C,UAAA,YAAG;AACpB,MAAMA,aAAWT;AAEjB,MAAM,YAAY;AAMlB,SAAS,UAAU,KAAK;AACpB,MAAI,OAAO;AACP,WAAO;AACX,QAAM,OAAO,eAAe,QAAQ,IAAI,WAAU,GAAIS,WAAS,KAAK,GAAG,GAAG,KAAM;AAChF,UAAO,GAAIA,WAAS,OAAO,GAAG,KAAK,UAAU,KAAK,GAAG;AACzD;ACfA,IAAIuC,oBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,MAAM;AAAA,EACnE;AACI,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAImE,uBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIoE,iBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAE;AACf,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG0C,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvIyB,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAeE,gBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACxCA,eAAA,eAAG;AACvB,MAAM,KAAKD,eAAa1E,YAAwB;AAChD,MAAM,cAAcQ;AACpB,MAAMC,aAAWC;AACjB,MAAM,wBAAwB;AAC9B,MAAM,gBAAN,MAAM,sBAAqB,GAAG,KAAK;AAAA,EAa/B,YAAY,MAAM,SAAS;AACvB,UAAM,cAAa,cAAc,MAAM,OAAO,GAAG,CAAC,QAAQ,QAAQ,WAAW,sBAAK,oCAAL,WAAa,QAAQ,QAAQ,OAAO;AAdzH;AACI;AACA;AASA,kCAAS,CAAE;AACX,oCAAW,CAAE;AAGT,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA,EACvB;AAAA,EAdI,OAAO,cAAc,MAAM,SAAS;AAChC,UAAM,SAAS,KAAK,OAAO,CAAC,OAAO,KAAKD,WAAS,OAAO,EAAE,CAAC;AAC3D,SAAI,mCAAS,uBAAsB,MAAM;AACrC,aAAO,KAAK,oBAAoB;AAAA,IAC5C;AACQ,WAAO,KAAK,UAAU;AACtB,WAAO,OAAO,KAAK,IAAI,IAAI;AAAA,EACnC;AAAA,EAQI,SAAS,KAAK;AACV,QAAI,sBAAsB,KAAK,IAAI,SAAU,CAAA,GAAG;AAK5C,YAAM,IAAI,MAAM,IAAI,UAAU;AAAA,IAC1C;AACQ,UAAM,SAAS,GAAG;AAAA,EAC1B;AAiBA;AA5CA;AA4BI,YAAO,SAAC,QAAQ,QAAQ,QAAQ;AAC5B,MAAI;AACJ,OAAQA,GAAAA,WAAS,UAAU,MAAM,KAAK,CAAC,QAAQ;AAC3C,eAAW,SAAYA,GAAAA,WAAS,YAAY,UAAU,EAAE,GAAG;AACvD,cAAQ,YAAY,WAAW,IAAI,GAAG;AAClC,aAAK,SAAS,KAAK,IAAI;AAAA,MAC3C,WACyB,iBAAiB,KAAK,IAAI,GAAG;AAClC,aAAK,OAAO,KAAK,IAAI;AAErB,0BAAU,IAAI,MAAM,KAAK,QAAQ,aAAa,EAAE,CAAC;AAAA,MACrE;AAAA,IACA;AAAA,EACA;AACQ,SAAO,KAAK,MAAM,QAAQ,KAAK;AACvC;AA3CA,IAAM,eAAN;AA6CoBkE,eAAA,eAAG;;;;AC1EvB,OAAO,eAAe,MAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChD,KAAA,OAAG;AACf,SAAS,KAAK,OAAO;AACjB,MAAI,UAAU;AACd,MAAI;AACJ,MAAI;AACJ,SAAO,MAAM;AACT,QAAI,CAAC,SAAS;AACV,UAAI;AACA,kBAAU;AACV,iBAAS,MAAO;AAAA,MAChC,SACmB,GAAG;AACN,gBAAQ;AACR,cAAM;AAAA,MACtB;AAAA,IACA;AACQ,QAAI,SAAS;AACT,YAAM;AACV,WAAO;AAAA,EACV;AACL;ACrBA,IAAI3B,oBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,MAAM;AAAA,EACnE;AACI,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAImE,uBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIoE,iBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAE;AACf,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG0C,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvIyB,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC7C,QAAA,UAAG;AAClB,MAAMG,QAAMF,eAAa1E,YAAkB;AAC3C,MAAM,SAASQ;AACf,QAAA,WAAkB,GAAI,OAAO,MAAM,MAAMoE,MAAI,SAAU,MAAK,OAAO;AC3BnE,OAAO,eAAe,qBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC7B,oBAAA,0BAAG;AAClC,MAAMC,cAAY7E;AAgBlB,oBAAA,2BAAsC6E,GAAAA,YAAU,SAAO,IACjD,CAAC,YAAY,eAAe,IAC5B,CAAE;ACpBR,IAAIxE,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,OAAO,eAAewE,wBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChCA,uBAAA,uBAAG;AAC/B,MAAMC,gBAAc1E,kBAAgBL,YAAoB;AACxD,MAAM2E,mBAAiBnE;AACvB,MAAMwE,0BAAwBtE;AAC9B,MAAMD,aAAWY;AACjB,MAAM,WAAW;AAKjB,MAAM,6BAA6BsD,iBAAe,aAAa;AAAA,EAC3D,YAAY,MAAM,SAAS;AACvB,UAAM,MAAM,OAAO;AAAA,EAC3B;AAAA,EACI,OAAO,IAAI,SAAS,QAAQ,SAAS,SAAS;AAC1C,UAAM,OAAO;AAAA,MACT,GAAGK,wBAAsB;AAAA,MACzB;AAAA,MACA,MAAM;AAAA,MACN;AAAA;AAAA;AAAA,MAGA,QAAQD,cAAY,QAAQ,QAAQ,OAAO;AAAA,MAC3CA,cAAY,QAAQ,QAAQ,MAAM;AAAA,IACrC;AACD,WAAO,IAAI,qBAAqB,MAAM,OAAO;AAAA,EACrD;AAAA,EACI,MAAM,QAAQ,KAAK;AACf,UAAM7E,MAAI,GAAIO,WAAS,KAAK,MAAM,EAAE,KAAM;AAC1C,UAAM,IAAI,SAAS,KAAKP,EAAC;AACzB,QAAI,OAAO,MAAM;AACb,YAAM;AAAA,IAClB,WACiB,KAAK,MAAM;AAChB,YAAM,IAAI,MAAM,0CAA0C,SAAS,GAAG;AAAA,IAClF,WACiB,EAAE,CAAC,MAAM,KAAK;AACnB;AAAA,IACZ,OACa;AAED,aAAOA;AAAA,IACnB;AAAA,EACA;AACA;AAC4B4E,uBAAA,uBAAG;;ACjD/B,IAAIzE,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,OAAO,eAAe2E,sBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAClCA,qBAAA,qBAAG;AAC7B,MAAMF,gBAAc1E,kBAAgBL,YAAoB;AACxD,MAAM2E,mBAAiBnE;AACvB,MAAMwE,0BAAwBtE;AAC9B,MAAMD,aAAWY;AAKjB,MAAM,2BAA2BsD,iBAAe,aAAa;AAAA,EAEzD,YAAY,SAAS,MAAM,SAAS;AAChC,UAAM,MAAM,OAAO;AAFvB;AAGI,SAAK,UAAU;AAAA,EACvB;AAAA,EACI,OAAO,IAAI,SAAS,QAAQ,SAAS;AAGjC,UAAM,OAAO,CAAC,GAAGK,wBAAsB,yBAAyB,SAAS,MAAM,MAAM,OAAO;AAC5F,SAAK,KAAKD,cAAY,QAAQ,QAAQ,MAAM,CAAC;AAC7C,WAAO,IAAI,mBAAmB,SAAS,MAAM,OAAO;AAAA,EAC5D;AAAA,EACI,MAAM,MAAM,KAAK;;AACb,QAAI;AACA,YAAM,OAAMzD,MAAA,KAAK,MAAM,IAAI,MAAf,gBAAAA,IAAmB;AAE/B;AACI,cAAM,SAAS,OAAO,IAAI,KAAK,OAAO,CAAC;AACvC,YAAI,UAAU;AACV,iBAAO;AAAA,MACd;AACD,iBAAW,KAAK,OAAO,KAAK,GAAG,GAAG;AAC9B,YAAI,EAAE,YAAa,MAAK,KAAK,QAAQ,YAAW,GAAI;AAChD,gBAAM,SAAS,OAAO,IAAI,CAAC,CAAC;AAC5B,cAAI,UAAU;AACV,mBAAO;AAAA,QAC/B;AAAA,MACA;AAAA,IACA,SACe,QAAQ;AACX,qBAAQ,GAAIb,WAAS,UAAU,IAAI,IAC7B,IAAI,MAAM,IAAI,IACd,kBAAkB,QACd,SACA,IAAI,MAAM,OAAO,MAAM,CAAC;AAAA,IAC9C;AACQ,WAAO,OAAO,IAAI,MAAM,KAAK,UAAU,YAAY;AAAA,EAC3D;AACA;AAC0BwE,qBAAA,qBAAG;AAC7B,MAAM,YAAY;AAClB,SAAS,OAAO,MAAM;AAClB,SAAO,QAAQ,QAAQ,CAAC,KAAK,WAAW,SAAS,IAC3C,SACA,OAAO,KAAK,KAAK,UAAU,UAAU,MAAM,GAAG,QAAQ;AAChE;;;AC3DA,OAAO,eAAe,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC3C,SAAA,YAAG;AACpB,MAAM,SAAS,CAAC,QAAQ,OAAO,KAAK,IAAI;AACxC,MAAM,QAAQ,CAAC,SAAS,MAAM,KAAK,KAAK;AACxC,SAAS,UAAU,OAAO;AACtB,MAAI,SAAS;AACT,WAAO;AACX,MAAI,OAAO,UAAU;AACjB,WAAO;AACX,QAAM/E,KAAI,OAAO,KAAK,EAAE,KAAI,EAAG,YAAa;AAC5C,SAAO,OAAO,SAASA,EAAC,IAAI,OAAO,MAAM,SAASA,EAAC,IAAI,QAAQ;AACnE;;ACXA,OAAO,eAAe,oBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAClC,mBAAA,qBAAG;AAC7B,mBAAA,qBAA6B;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EACA;AAAA,EACA;AAAA;AACJ;;ACZA,OAAO,eAAe,qBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACjC,oBAAA,sBAAG;AAEH,oBAAA,sBAAG,CAAC,cAAc,QAAQ,MAAM,GAAG;;ACH9D,IAAI8C,oBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,MAAM;AAAA,EACnE;AACI,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAImE,uBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIoE,iBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAE;AACf,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG0C,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvIyB,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAe,iBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACrC,gBAAA,kBAAG;AAC1B,MAAM,MAAMC,eAAa1E,YAAkB;AACpB,gBAAA,kBAAG,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,KAAI,EAAG,SAAS,CAAC,CAAC;;;;;;AC1BvE,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/C,MAAA,QAAG;AAChB,MAAM,YAAYA;AAClB,MAAM,aAAaQ;AACnB,MAAM,cAAcE;AACpB,MAAM,iBAAiBW;AACvB,MAAMwD,cAAYjD;AAClB,MAAMnB,aAAWoB;AACjB,eAAe,MAAM,cAAc;AAC/B,OAAI,GAAI,YAAY,YAAY,YAAY,KAAM,MAAM,MAAM,YAAY,GAAI;AAC1E,WAAO;AAAA,EACf;AACI,QAAM,QAAO,GAAI,YAAY,UAAU,YAAY;AACnD,aAAW,WAAWpB,WAAS,KAAK,eAAe,IAAI,IAAI,EAAE,MAAM,YAAY,SAAS,GAAG;AACvF,UAAM,YAAe,GAAA,YAAY,MAAM,KAAK,IAAI;AAChD,QAAI,MAAM,MAAM,QAAQ,GAAG;AACvB,aAAO;AAAA,IACnB;AAAA,EACA;AACI;AACJ;AACA,eAAe,MAAM,UAAU;AAC3B,OAAI,GAAIoE,YAAU,SAAU;AACxB,YAAW,GAAA,UAAU,YAAY,QAAQ;AAC7C,MAAI;AACA,WAAO,GAAG,WAAW,QAAQ,UAAU,UAAU,UAAU,OAAO,UAAU,UAAU,IAAI;AAC1F,WAAO;AAAA,EACf,QACU;AACF,WAAO;AAAA,EACf;AACA;AC/BA,IAAI7B,oBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,MAAM;AAAA,EACnE;AACI,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAImE,uBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIoE,iBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAE;AACf,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG0C,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvIyB,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAe,cAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACxC,aAAA,eAAG;AACvB,MAAM,MAAMC,eAAa1E,YAAkB;AAC3C,MAAMkF,UAAQR,eAAalE,YAAoB;AAC/C,MAAM,YAAYE;AAClB,MAAM,UAAUW;AAChB,SAAS,gBAAgB;AACrB,SAAO,yBAAwB,GAAI,UAAU,SAAO,IAAM,QAAQ;AACtE;AACA,SAAS,WAAW,EAAE,SAAS,IAAI,OAAM,IAAM,CAAA,GAAI;AAC/C,QAAM,KAAK,SAAS,cAAe;AACnC,MAAI;AAEA,WAAO8D,gBAAQ,EAAE;AAAA,EACzB,SACW,OAAO;AACV,qCAAQ,KAAK,KAAK,eAAe;AACjC;AAAA,EACR;AACA;AA2BA,eAAe,aAAa,QAAQ;AAChC,QAAM7F,QAAO,WAAW,EAAE,QAAQ,IAAI,OAAM,CAAE;AAG9C,QAAM,mBAAmBA,SAAA,gBAAAA,MACnB,MAAM4F,QAAM,KACb,IAAI,CAAC,OAAQ,OAAO,aAAa,sBAAsB,IACvD,KAAKA,QAAM;AAGhB,MAAI,oBAAoB,QAAQ,IAAI,WAAW,gBAAgB,GAAG;AAC9D,WAAO;AAAA,EACf;AACI,MAAI5F,SAAQ,QAAQ,IAAI,WAAWA,KAAI,GAAG;AACtC,WAAOA;AAAA,EACf;AACI,mCAAQ,KAAK,iCAAiC;AAE9C,QAAM,uBAAuB,QAAQ;AACrC,MAAI,wBAAwB,MAAM;AAC9B,UAAM,YAAY4F,QAAM,KAAK,sBAAsB,cAAa,GAAI,OAAO,eAAkB,GAAA,UAAU,SAAU,IAAG,SAAS,GAAG;AAChI,QAAI,IAAI,WAAW,SAAS,GAAG;AAC3B,aAAO;AAAA,IACnB,OACa;AACD,uCAAQ,KAAK,+DAA+D;AAAA,IACxF;AAAA,EACA;AAEI,QAAM,WAAW,OAAM,GAAI,QAAQ,OAAO,UAAU;AACpD,MAAI,YAAY,MAAM;AAClB,WAAO;AAAA,EACf;AACI,QAAM,IAAI,MAAM,oEAAoE;AACxF;;;;ACxGA,WAAS,SAAS,GAAE,GAAE;AAAC,QAAI,IAAE,49+DAA29+D,IAAE,CAAC,kBAAiB,gBAAe,sBAAqB,kBAAiB,iBAAgB,iBAAgB,iBAAgB,iBAAgB,iBAAgB,mBAAkB,sBAAqB,oBAAmB,gBAAe,qBAAoB,gBAAe,kBAAiB,gBAAe,wBAAuB,mBAAkB,iBAAgB,mBAAkB,mBAAkB,mBAAkB,iBAAgB,uBAAsB,eAAc,kBAAiB,mBAAkB,iBAAgB,mBAAkB,gBAAe,qBAAoB,eAAc,iBAAgB,qBAAoB,iBAAgB,iBAAgB,iBAAgB,iBAAgB,kBAAiB,oBAAmB,mBAAkB,kBAAiB,mBAAkB,iBAAgB,qBAAoB,sBAAqB,qBAAoB,mBAAkB,kBAAiB,gBAAe,mBAAkB,gBAAe,qBAAoB,oBAAmB,mBAAkB,qBAAoB,kCAAiC,+BAA8B,6BAA4B,2BAA0B,8BAA6B,6BAA4B,kCAAiC,2BAA0B,8BAA6B,8BAA6B,6BAA4B,6BAA4B,iBAAgB,oBAAmB,oBAAmB,iBAAgB,0BAAyB,oBAAmB,iBAAgB,kBAAiB,wBAAuB,qBAAoB,kBAAiB,iBAAgB,yBAAwB,wBAAuB,kBAAiB,mBAAkB,mBAAkB,kBAAiB,mBAAkB,qBAAoB,yBAAwB,sBAAqB,mBAAkB,kBAAiB,mBAAkB,wBAAuB,kBAAiB,wBAAuB,kBAAiB,mBAAkB,oBAAmB,oBAAmB,oBAAmB,uBAAsB,uBAAsB,qBAAoB,qBAAoB,qBAAoB,sBAAqB,sBAAqB,qBAAoB,qBAAoB,kBAAiB,mBAAkB,kBAAiB,sBAAqB,gCAA+B,wBAAuB,2BAA0B,8BAA6B,6BAA4B,6BAA4B,2BAA0B,kBAAiB,mBAAkB,mBAAkB,kBAAiB,+BAA8B,+BAA8B,sBAAqB,kBAAiB,gBAAe,uBAAsB,yBAAwB,kBAAiB,mBAAkB,kBAAiB,mBAAkB,sBAAqB,qBAAoB,oBAAmB,qBAAoB,kBAAiB,uBAAsB,oBAAmB,mBAAkB,qBAAoB,sBAAqB,sBAAqB,kBAAiB,oBAAmB,gBAAe,mBAAkB,+BAA8B,kCAAiC,gBAAe,mBAAkB,kBAAiB,sBAAqB,mBAAkB,0BAAyB,yBAAwB,uBAAsB,uBAAsB,wBAAuB,wBAAuB,kBAAiB,kBAAiB,sBAAqB,oBAAmB,oBAAmB,yBAAwB,qBAAoB,wBAAuB,iBAAgB,yBAAwB,oBAAmB,oBAAmB,oBAAmB,qBAAoB,sBAAqB,yBAAwB,uBAAsB,iBAAgB,mBAAkB,mBAAkB,mBAAkB,qBAAoB,sBAAqB,oBAAmB,mBAAkB,oBAAmB,oBAAmB,6BAA4B,wBAAuB,qBAAoB,sBAAqB,sBAAqB,oBAAmB,oBAAmB,qBAAoB,uBAAsB,aAAY,eAAc,cAAa,eAAc,cAAa,eAAc,iBAAgB,eAAc,gBAAe,gBAAe,aAAY,gBAAe,gBAAe,eAAc,gBAAe,eAAc,cAAa,gBAAe,iBAAgB,cAAa,aAAY,cAAa,iBAAgB,kBAAiB,aAAY,eAAc,oBAAmB,kBAAiB,aAAY,gBAAe,gBAAe,iBAAgB,kBAAiB,cAAa,kBAAiB,gBAAe,kBAAiB,iBAAgB,gBAAe,oBAAmB,qBAAoB,gBAAe,eAAc,cAAa,gBAAe,iBAAgB,eAAc,eAAc,gBAAe,qBAAoB,oBAAmB,aAAY,aAAY,mBAAkB,kBAAiB,kBAAiB,cAAa,iBAAgB,kBAAiB,eAAc,iBAAgB,kBAAiB,cAAa,iBAAgB,kBAAiB,sBAAqB,eAAc,iBAAgB,gBAAe,eAAc,gBAAe,cAAa,cAAa,oBAAmB,eAAc,iBAAgB,kBAAiB,oBAAmB,gBAAe,eAAc,sBAAqB,gBAAe,mBAAkB,oBAAmB,mBAAkB,uBAAsB,kBAAiB,oBAAmB,sBAAqB,0BAAyB,sBAAqB,oBAAmB,sBAAqB,sBAAqB,yBAAwB,oBAAmB,mBAAkB,oBAAmB,uBAAsB,uBAAsB,mBAAkB,oBAAmB,WAAU,aAAY,cAAa,cAAa,cAAa,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,cAAa,cAAa,cAAa,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,aAAY,WAAU,oBAAmB,kBAAiB,oBAAmB,iBAAgB,mBAAkB,iBAAgB,qBAAoB,mBAAkB,oBAAmB,mBAAkB,mBAAkB,mBAAkB,qBAAoB,iBAAgB,oBAAmB,mBAAkB,mBAAkB,sBAAqB,mBAAkB,iBAAgB,sBAAqB,gBAAe,eAAc,iBAAgB,oBAAmB,iBAAgB,qBAAoB,iBAAgB,gBAAe,oBAAmB,gBAAe,iBAAgB,iBAAgB,eAAc,gBAAe,oBAAmB,iBAAgB,eAAc,eAAc,iBAAgB,qBAAoB,mBAAkB,kBAAiB,qBAAoB,iBAAgB,gBAAe,oBAAmB,kBAAiB,iBAAgB,oBAAmB,gBAAe,iBAAgB,kBAAiB,oBAAmB,iBAAgB,iBAAgB,iBAAgB,uBAAsB,iBAAgB,oBAAmB,gBAAe,iBAAgB,oBAAmB,eAAc,mBAAkB,oBAAmB,kBAAiB,kBAAiB,gBAAe,oBAAmB,wBAAuB,mBAAkB,iBAAgB,kBAAiB,iBAAgB,mBAAkB,gBAAe,oBAAmB,qBAAoB,mBAAkB,uBAAsB,gBAAe,oBAAmB,kBAAiB,sBAAqB,kBAAiB,qBAAoB,kBAAiB,qBAAoB,kBAAiB,iBAAgB,gBAAe,mBAAkB,kBAAiB,qBAAoB,iBAAgB,oBAAmB,mBAAkB,wBAAuB,qBAAoB,kBAAiB,kBAAiB,kBAAiB,qBAAoB,gBAAe,gBAAgB;AAAE,QAAG,IAAE,CAAC,GAAE,EAAE,QAAM,IAAE,CAAC,MAAI,KAAG,MAAI,QAAM,KAAG,KAAG,KAAK,OAAM,IAAI,WAAW,qBAAqB;AAAE,QAAG,MAAI,EAAE,QAAM;AAAU,aAAQ,IAAE,IAAG,IAAE,MAAI,MAAI,KAAG,oBAAmB,IAAE,MAAI,KAAG,KAAG,oBAAmB,IAAE,IAAE,GAAE,IAAE,IAAE,GAAE,IAAE,KAAG,IAAE,IAAE,GAAE,IAAE,KAAG,EAAE,WAAW,CAAC,IAAE,EAAE,WAAW,IAAE,CAAC,IAAE,MAAK,IAAE,EAAE,SAAO,OAAM,KAAE,KAAG,EAAE,WAAW,IAAE,KAAG,IAAE,IAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,KAAG,IAAE,KAAG,MAAI,KAAG,IAAE,KAAG,IAAE,KAAG,IAAE,KAAG,MAAI,IAAI,IAAE,EAAE,WAAW,IAAE,CAAC,IAAE;AAAK,WAAO,EAAE,IAAE,EAAE,SAAO,IAAI;AAAA,EAAC;AAA8B,EAAAE,QAAA,UAAe;;;ACCtmvE,IAAI,kBAAmB9E,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAK;AAC7D;AACA,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/C,MAAA,QAAG;AAChB,MAAM,cAAc,gBAAgBN,SAAoC;AAIxE,SAAS,MAAM,KAAK,KAAK;AACrB,aAAW,YAAY,SAAS,KAAK,GAAG;AAC5C;;ACXA,OAAO,eAAeqF,eAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACzCA,cAAA,cAAG;AACtB,MAAMV,mBAAiB3E;AACvB,MAAM,eAAN,MAAM,qBAAoB2E,iBAAe,aAAa;AAAA,EAElD,YAAY,SAAS;AACjB,UAAM,CAAC,MAAM,GAAG,OAAO;AAAA,EAC/B;AAAA,EACI,MAAM,OAAO;AACT,UAAM,QAAQ,MAAM,KAAM;AAC1B,QAAI,aAAY,aAAa,KAAK,KAAK,GAAG;AACtC,aAAO;AAAA,IACnB,OACa;AACD,YAAM,IAAI,MAAM,sBAAsB,KAAK,EAAE;AAAA,IACzD;AAAA,EACA;AACA;AAbI,cADE,cACK,gBAAe;AAD1B,IAAM,cAAN;AAemBU,cAAA,cAAG;AAAA;AClBtB,MAAIrC,mBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,QAAM;AAAA;AAE/D,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA;AAEf,MAAImE,sBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,WAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AAAA,EACtE,IAAK,SAAS,GAAG,GAAG;AAChB,MAAE,SAAS,IAAI;AAAA,EACnB;AACA,MAAIoE,gBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,QAAI,OAAO,IAAI,WAAY,QAAO;AAClC,QAAI,SAAS,CAAE;AACf,QAAI,OAAO;AAAM,eAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG,CAAA0C,iBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvI,IAAAyB,oBAAmB,QAAQ,GAAG;AAC9B,WAAO;AAAA,EACV;AACD,SAAO,eAAclE,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,EAAAA,SAAiC,yBAAAA,SAAA,gBAAwB;AACzD,EAAAA,SAAA,yCAAiD;AACjD,QAAM+E,MAAKZ,cAAa1E,YAAwB;AAChD,QAAM,cAAcQ;AACpB,QAAM,YAAYE;AAClB,QAAM,uBAAuBW;AAC7B,QAAM,wBAAwBO;AAC9B,QAAM,oBAAoBC;AAC1B,QAAM,iBAAiBC;AACvB,QAAM,UAAUC;AAChB,QAAM8C,aAAY7C;AAClB,QAAM,gBAAgBC;AACtB,QAAM,aAAY,GAAI,YAAY,UAAU,mBAAmB;AAC/D,WAAS,OAAO;AAAA,EAAA;AAChB,EAAA1B,SAAwB,gBAAA;AAAA,IACpB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM,QAAQ;AAAA,IACd,OAAO,QAAQ;AAAA,EAClB;AACD,WAAS,SAAS;AACd,YAAW,GAAA,YAAY,UAAU,mBAAmB,EAAE,UAAUA,SAAQ,gBAAgB+E,IAAG;AAAA;AAM/F,EAAA/E,SAAiC,yBAAA,OAAO,OAAO;AAAA,IAC3C,GAAG,IAAI+E,IAAG,oBAAqB;AAAA,IAC/B,UAAU,kBAAkB;AAAA,IAC5B,oBAAoB;AAAA,IACpB,oBAAoB;AAAA,IACpB,mBAAmB;AAAA;AAAA,IAEnB,mBAAmB;AAAA,IACnB,sBAAsB;AAAA,IACtB,aAAa;AAAA,IACb,cAAc,eAAe;AAAA,IAC7B,cAAc,sBAAsB;AAAA,IACpC,aAAa,CAAE;AAAA,IACf,WAAW,KAAKT,WAAU,SAAU;AAAA,IACpC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,gBAAgB,IAAI,cAAc,YAAW,EAAG;AAAA,IAChD,2BAA2B;AAAA,IAC3B,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,OAAO,QAAQ;AAAA,IACf,aAAa;AAAA,IACb,sBAAsB;AAAA,IACtB,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,6BAA6B;AAAA;AAAA,IAC7B,gCAAgC,CAAC,GAAG,qBAAqB,kBAAkB;AAAA,IAC3E,4BAA4B;AAAA;AAAA,IAC5B;AAAA,IACA,aAAa;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcH;AAAA,IACD,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAE;AAAA,IACb,iCAAiC;AAAA,IACjC,gCAAgC;AAAA;AAAA,EACpC,CAAC;AAID,WAAS,uCAAuC,GAAG;AAE/C,WAAO,UAAa,GAAA,UAAU,WAAW,EAAE,eAAe;AAAA,IAEtD,aAAa,KAAK,OAAO,EAAE,IAAI,CAAC,IAC9B,KACA;AAAA;;;ACtHV,OAAO,eAAe,mBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACnC,kBAAA,oBAAG;AAC5B,kBAAA,oBAA4B,CAAC,OAAO;;ACFpC,OAAO,eAAe,iBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC7B,gBAAA,0BAAG;AAClC,SAAS,wBAAwB,SAAS;AACtC,MAAI,QAAQ,iBAAiB,QAAQ,QAAQ,uBAAuB,MAAM;AACtE,YAAQ,gBAAgB,QAAQ,sBAAsB,QAAQ;AAAA,EACtE;AACI,SAAO;AACX;;ACPA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5C,QAAA,WAAG;AACP,QAAA,OAAG;AACG,QAAA,aAAG;AACF,QAAA,cAAG;AACV,QAAA,OAAG;AACD,QAAA,SAAG;AACjB,SAAS,SAAS,KAAK;AACnB,SAAO,OAAO,QAAQ,YAAY,QAAQ;AAC9C;AACA,SAAS,KAAK,GAAG;AACb,SAAO,KAAK,OACN,CAAA,IACA,OAAO,KAAK,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAA,GAAI,qBAAqB,KAAK,GAAG,EAAE,CAAC;AAC7E;AACA,SAAS,WAAW,KAAK;AACrB,SAAO,OAAO,QAAQ;AAC1B;AACA,SAAS,YAAY,KAAK,KAAK;AAC3B,MAAI,OAAO,QAAQ,IAAI,WAAW;AAC9B,WAAO;AAEX,aAAW,MAAM,IAAI,OAAO,CAACU,QAAOA,OAAM,IAAI,GAAG;AAC7C,QAAI,MAAM,QAAQ,MAAM,QAAQ,EAAE,GAAG;AACjC,YAAM,CAAC,GAAG,CAAC,IAAI;AAEf,UAAI,KAAK,QAAQ,MAAM,QAAW;AAC9B,YAAI,OAAO,QAAQ;AACf,gBAAM,CAAE;AACZ,YAAI,CAAC,IAAI;AAAA,MACzB;AAAA,IACA;AAAA,EACA;AACI,SAAO;AACX;AACA,SAAS,KAAK,MAAM,YAAY;AAC5B,MAAI,KAAK;AACL,WAAO,CAAE;AACb,QAAM,SAAS,EAAE,GAAG,EAAG;AACvB,aAAW,MAAM,YAAY;AACzB,WAAO,OAAO,EAAE;AAAA,EACxB;AACI,SAAO;AACX;AAUA,SAAS,OAAO,GAAG;AACf,SAAO,OAAO,KAAK,CAAC;AACxB;;ACvDA,OAAO,eAAe,MAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChD,KAAA,OAAGC;AACf,SAASA,OAAK,QAAQ,UAAU;AAC5B,MAAI,OAAO;AACP,WAAO;AACX,QAAM,SAAS,CAAE;AACjB,aAAW,OAAO,UAAU;AACxB,UAAM,IAAI,IAAI,GAAG;AACjB,QAAI,MAAM;AACN,aAAO,GAAG,IAAI,IAAI,GAAG;AAAA,EACjC;AACI,SAAO;AACX;;;ACZA,OAAO,eAAe,mBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACnC,kBAAA,oBAAG;AAC5B,MAAMvC,YAAUjD;AAChB,MAAMS,aAAWD;AACjB,SAAS,kBAAkB,MAAM,GAAG;AAChC,SAAO;AAAA,IACH,SAAYyC,GAAAA,UAAQ,OAAUxC,GAAAA,WAAS,eAAe,CAAC,uBAAG,OAAO,GAAG,KAAK,MAAM,CAAC,CAAC;AAAA,IACjF,WAAcwC,GAAAA,UAAQ,OAAUxC,GAAAA,WAAS,eAAe,CAAC,uBAAG,SAAS,GAAG,KAAK,QAAQ,CAAC,CAAC;AAAA,EAC1F;AACL;ACTA,IAAIuC,oBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,MAAM;AAAA,EACnE;AACI,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAImE,uBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIoE,iBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAE;AACf,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG0C,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvIyB,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAegB,eAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACzCA,cAAA,cAAG;AACtB,MAAM,kBAAkBzF;AACxB,MAAMkF,UAAQR,eAAalE,YAAoB;AAC/C,MAAM,sBAAsBE;AAC5B,MAAMiE,mBAAiBtD;AACvB,MAAM2D,0BAAwBpD;AAC9B,MAAM,oBAAoB+C,iBAAe,aAAa;AAAA,EAWlD,YAAY,YAAY,MAAM,SAAS;AACnC,UAAM,MAAM,OAAO;AAXvB;AACA;AAWI,SAAK,aAAa;AAClB,SAAK,OAAO;AAAA,EACpB;AAAA,EAZI,OAAO,IAAI,UAAU,eAAe,CAAA,GAAI,SAAS;AAC7C,UAAM,OAAO,CAAC,GAAGK,wBAAsB,yBAAyB,GAAG,YAAY;AAC/E,QAAI,CAAC,KAAK,SAAS,OAAO;AACtB,WAAK,KAAK,OAAO;AACrB,UAAM,aAAaE,QAAM,QAAQ,QAAQ;AACzC,SAAK,KAAK,UAAU;AACpB,WAAO,IAAI,YAAY,YAAY,MAAM,OAAO;AAAA,EACxD;AAAA,EAMI,WAAW;AACP,WAAO,gBAAgB,KAAK,aAAa;AAAA,EACjD;AAAA,EACI,MAAM,MAAM,KAAK;AACb,QAAI;AACA,YAAM,OAAO,KAAK,MAAM,IAAI,EAAE,CAAC;AAC/B,YAAM,EAAE,QAAQ,cAAc,GAAG,oBAAoB,mBAAmB,MAAM,IAAI;AAClF,WAAK,SAAS;AACd,WAAK,WAAW;AAChB,aAAO;AAAA,IACnB,SACe,WAAW;AACd,OAAI,GAAA,gBAAgB,QAAS,EAAC,MAAM,wCAAwC,EAAE,MAAM;AACpF,YAAM,OAAO;AAAA,IACzB;AAAA,EACA;AACA;AACmBO,cAAA,cAAG;;;AC/DtB,OAAO,eAAeC,eAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACzCA,cAAA,cAAG;AACtB,MAAMlB,aAAWxE;AAEjB,MAAM;AAAA;AAAA;AAAA;AAAA,EAIN;AAAA;AACA,MAAM,YAAY;AAAA,EAGd,YAAY,OAAO,UAAU;AAF7B;AACA;AAEI,SAAK,QAAQ;AACb,SAAK,WAAW;AAAA,EACxB;AAAA,EACI,SAAS;AACL,WAAO;AAAA,MACH,OAAO;AAAA,MACP,OAAO,KAAK;AAAA,MACZ,UAAU,KAAK;AAAA,IAClB;AAAA,EACT;AAAA,EACI,OAAO,SAAS,MAAM;AAClB,WAAO,IAAI,YAAY,KAAK,OAAO,KAAK,QAAQ;AAAA,EACxD;AAAA,EACI,OAAO,aAAa,UAAU;AAC1B,UAAM,IAAI,SAAS,MAAM,aAAa;AACtC,QAAI,KAAK,MAAM;AACX,YAAM,SAAQ,GAAIwE,WAAS,OAAO,EAAE,CAAC,CAAC;AACtC,UAAI,SAAS,MAAM;AACf,eAAO,IAAI,YAAY,OAAO,QAAQ;AAAA,MACtD;AAAA,IACA;AACQ;AAAA,EACR;AACA;AACmBkB,cAAA,cAAG;;;ACpCtB,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAO5D,MAAM,mBAAmB,MAAM;AAAA;AAK/B,MAAM,6BAA6B,WAAW;AAAA,EAC5C,YAAY,QAAQ;AAClB,UAAM,qBAAqB,OAAO,UAAS,CAAE,EAAE;AAAA,EACnD;AACA;AAKA,MAAM,6BAA6B,WAAW;AAAA,EAC5C,YAAY,QAAQ;AAClB,UAAM,qBAAqB,OAAO,UAAS,CAAE,EAAE;AAAA,EACnD;AACA;AAKA,MAAM,6BAA6B,WAAW;AAAA,EAC5C,YAAY,QAAQ;AAClB,UAAM,qBAAqB,OAAO,UAAS,CAAE,EAAE;AAAA,EACnD;AACA;AAKA,MAAM,sCAAsC,WAAW;AAAA;AAKvD,MAAM,yBAAyB,WAAW;AAAA,EACxC,YAAY,MAAM;AAChB,UAAM,gBAAgB,IAAI,EAAE;AAAA,EAChC;AACA;AAKA,MAAM,6BAA6B,WAAW;AAAA;AAK9C,MAAM,4BAA4B,WAAW;AAAA,EAC3C,cAAc;AACZ,UAAM,2BAA2B;AAAA,EACrC;AACA;AAMA,MAAM,IAAI,WACR,IAAI,SACJ,IAAI;AACN,MAAM,aAAa;AAAA,EACjB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AACP;AACA,MAAM,WAAW;AAAA,EACf,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AACP;AACA,MAAM,wBAAwB;AAAA,EAC5B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AACX;AACA,MAAM,YAAY;AAAA,EAChB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AACP;AACA,MAAM,YAAY;AAAA,EAChB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AACX;AACA,MAAM,cAAc;AAAA,EAClB,MAAM;AAAA,EACN,QAAQ;AACV;AACA,MAAM,oBAAoB;AAAA,EACxB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AACV;AACA,MAAM,yBAAyB;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,cAAc;AAChB;AACA,MAAM,wBAAwB;AAAA,EAC5B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,cAAc;AAChB;AACA,MAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,WAAW;AACb;AACA,MAAM,uBAAuB;AAAA,EAC3B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,WAAW;AACb;AACA,MAAM,4BAA4B;AAAA,EAChC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,cAAc;AAChB;AACA,MAAM,2BAA2B;AAAA,EAC/B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,cAAc;AAChB;AACA,MAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AACV;AACA,MAAM,8BAA8B;AAAA,EAClC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AACV;AACA,MAAM,eAAe;AAAA,EACnB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AACV;AACA,MAAM,4BAA4B;AAAA,EAChC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AACV;AACA,MAAM,4BAA4B;AAAA,EAChC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AACV;AACA,MAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,cAAc;AAChB;AACA,MAAM,6BAA6B;AAAA,EACjC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,cAAc;AAChB;AACA,MAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,cAAc;AAChB;AACA,MAAM,6BAA6B;AAAA,EACjC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,cAAc;AAChB;AAKA,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT,IAAI,OAAO;AACT,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,OAAO;AACT,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,cAAc;AAChB,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,WAAW,IAAI,MAAM;AACnB,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,aAAa,IAAI,QAAQ;AACvB,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,IAAI;AACT,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,WAAW;AAChB,UAAM,IAAI,oBAAqB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,UAAU;AACZ,UAAM,IAAI,oBAAqB;AAAA,EACnC;AACA;AAEA,IAAI,cAAc;AAMlB,MAAM,mBAAmB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5B,WAAW,WAAW;AACpB,QAAI,gBAAgB,MAAM;AACxB,oBAAc,IAAI,WAAY;AAAA,IACpC;AACI,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,IAAI,OAAO;AACT,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,IAAI,OAAO;AACT,WAAO,IAAI,KAAK,iBAAiB,gBAAiB,EAAC;AAAA,EACvD;AAAA;AAAA,EAGE,IAAI,cAAc;AAChB,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,WAAW,IAAI;AAAA,IACb;AAAA,IACA;AAAA,EACJ,GAAK;AACD,WAAO,cAAc,IAAI,QAAQ,MAAM;AAAA,EAC3C;AAAA;AAAA,EAGE,aAAa,IAAI,QAAQ;AACvB,WAAO,aAAa,KAAK,OAAO,EAAE,GAAG,MAAM;AAAA,EAC/C;AAAA;AAAA,EAGE,OAAO,IAAI;AACT,WAAO,CAAC,IAAI,KAAK,EAAE,EAAE,kBAAmB;AAAA,EAC5C;AAAA;AAAA,EAGE,OAAO,WAAW;AAChB,WAAO,UAAU,SAAS;AAAA,EAC9B;AAAA;AAAA,EAGE,IAAI,UAAU;AACZ,WAAO;AAAA,EACX;AACA;AAEA,IAAI,WAAW,CAAE;AACjB,SAAS,QAAQ,MAAM;AACrB,MAAI,CAAC,SAAS,IAAI,GAAG;AACnB,aAAS,IAAI,IAAI,IAAI,KAAK,eAAe,SAAS;AAAA,MAChD,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,KAAK;AAAA,IACX,CAAK;AAAA,EACL;AACE,SAAO,SAAS,IAAI;AACtB;AACA,MAAM,YAAY;AAAA,EAChB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AACV;AACA,SAAS,YAAY,KAAK,MAAM;AAC9B,QAAM,YAAY,IAAI,OAAO,IAAI,EAAE,QAAQ,WAAW,EAAE,GACtD,SAAS,kDAAkD,KAAK,SAAS,GACzE,GAAG,QAAQ,MAAM,OAAO,SAAS,OAAO,SAAS,OAAO,IAAI;AAC9D,SAAO,CAAC,OAAO,QAAQ,MAAM,SAAS,OAAO,SAAS,OAAO;AAC/D;AACA,SAAS,YAAY,KAAK,MAAM;AAC9B,QAAM,YAAY,IAAI,cAAc,IAAI;AACxC,QAAM,SAAS,CAAE;AACjB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACN,IAAQ,UAAU,CAAC;AACf,UAAM,MAAM,UAAU,IAAI;AAC1B,QAAI,SAAS,OAAO;AAClB,aAAO,GAAG,IAAI;AAAA,IACpB,WAAe,CAAC,YAAY,GAAG,GAAG;AAC5B,aAAO,GAAG,IAAI,SAAS,OAAO,EAAE;AAAA,IACtC;AAAA,EACA;AACE,SAAO;AACT;AACA,IAAI,gBAAgB,CAAE;AAKtB,MAAM,iBAAiB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAK1B,OAAO,OAAO,MAAM;AAClB,QAAI,CAAC,cAAc,IAAI,GAAG;AACxB,oBAAc,IAAI,IAAI,IAAI,SAAS,IAAI;AAAA,IAC7C;AACI,WAAO,cAAc,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,OAAO,aAAa;AAClB,oBAAgB,CAAE;AAClB,eAAW,CAAE;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,OAAO,iBAAiBxF,IAAG;AACzB,WAAO,KAAK,YAAYA,EAAC;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,OAAO,YAAY,MAAM;AACvB,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACb;AACI,QAAI;AACF,UAAI,KAAK,eAAe,SAAS;AAAA,QAC/B,UAAU;AAAA,MACX,CAAA,EAAE,OAAQ;AACX,aAAO;AAAA,IACR,SAAQ,GAAG;AACV,aAAO;AAAA,IACb;AAAA,EACA;AAAA,EACE,YAAY,MAAM;AAChB,UAAO;AAEP,SAAK,WAAW;AAEhB,SAAK,QAAQ,SAAS,YAAY,IAAI;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,OAAO;AACT,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,cAAc;AAChB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,WAAW,IAAI;AAAA,IACb;AAAA,IACA;AAAA,EACJ,GAAK;AACD,WAAO,cAAc,IAAI,QAAQ,QAAQ,KAAK,IAAI;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,aAAa,IAAI,QAAQ;AACvB,WAAO,aAAa,KAAK,OAAO,EAAE,GAAG,MAAM;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,IAAI;AACT,UAAM,OAAO,IAAI,KAAK,EAAE;AACxB,QAAI,MAAM,IAAI,EAAG,QAAO;AACxB,UAAM,MAAM,QAAQ,KAAK,IAAI;AAC7B,QAAI,CAAC,MAAM,OAAO,KAAK,QAAQ,MAAM,QAAQ,MAAM,IAAI,IAAI,gBAAgB,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,IAAI;AACzH,QAAI,WAAW,MAAM;AACnB,aAAO,CAAC,KAAK,IAAI,IAAI,IAAI;AAAA,IAC/B;AAGI,UAAM,eAAe,SAAS,KAAK,IAAI;AACvC,UAAM,QAAQ,aAAa;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACnB,CAAK;AACD,QAAI,OAAO,CAAC;AACZ,UAAM,OAAO,OAAO;AACpB,YAAQ,QAAQ,IAAI,OAAO,MAAO;AAClC,YAAQ,QAAQ,SAAS,KAAK;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,WAAW;AAChB,WAAO,UAAU,SAAS,UAAU,UAAU,SAAS,KAAK;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EAChB;AACA;AAIA,IAAI,cAAc,CAAE;AACpB,SAAS,YAAY,WAAW,OAAO,IAAI;AACzC,QAAM,MAAM,KAAK,UAAU,CAAC,WAAW,IAAI,CAAC;AAC5C,MAAI,MAAM,YAAY,GAAG;AACzB,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,KAAK,WAAW,WAAW,IAAI;AACzC,gBAAY,GAAG,IAAI;AAAA,EACvB;AACE,SAAO;AACT;AACA,IAAI,cAAc,CAAE;AACpB,SAAS,aAAa,WAAW,OAAO,IAAI;AAC1C,QAAM,MAAM,KAAK,UAAU,CAAC,WAAW,IAAI,CAAC;AAC5C,MAAI,MAAM,YAAY,GAAG;AACzB,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,KAAK,eAAe,WAAW,IAAI;AAC7C,gBAAY,GAAG,IAAI;AAAA,EACvB;AACE,SAAO;AACT;AACA,IAAI,eAAe,CAAE;AACrB,SAAS,aAAa,WAAW,OAAO,IAAI;AAC1C,QAAM,MAAM,KAAK,UAAU,CAAC,WAAW,IAAI,CAAC;AAC5C,MAAI,MAAM,aAAa,GAAG;AAC1B,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,KAAK,aAAa,WAAW,IAAI;AAC3C,iBAAa,GAAG,IAAI;AAAA,EACxB;AACE,SAAO;AACT;AACA,IAAI,eAAe,CAAE;AACrB,SAAS,aAAa,WAAW,OAAO,IAAI;AAC1C,QAAM;AAAA,IACJ;AAAA,IACA,GAAG;AAAA,EACJ,IAAG;AACJ,QAAM,MAAM,KAAK,UAAU,CAAC,WAAW,YAAY,CAAC;AACpD,MAAI,MAAM,aAAa,GAAG;AAC1B,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,KAAK,mBAAmB,WAAW,IAAI;AACjD,iBAAa,GAAG,IAAI;AAAA,EACxB;AACE,SAAO;AACT;AACA,IAAI,iBAAiB;AACrB,SAAS,eAAe;AACtB,MAAI,gBAAgB;AAClB,WAAO;AAAA,EACX,OAAS;AACL,qBAAiB,IAAI,KAAK,eAAc,EAAG,gBAAiB,EAAC;AAC7D,WAAO;AAAA,EACX;AACA;AACA,IAAI,gBAAgB,CAAE;AACtB,SAAS,kBAAkB,WAAW;AACpC,MAAI,OAAO,cAAc,SAAS;AAClC,MAAI,CAAC,MAAM;AACT,UAAM,SAAS,IAAI,KAAK,OAAO,SAAS;AAExC,WAAO,iBAAiB,SAAS,OAAO,YAAW,IAAK,OAAO;AAC/D,kBAAc,SAAS,IAAI;AAAA,EAC/B;AACE,SAAO;AACT;AACA,SAAS,kBAAkB,WAAW;AAYpC,QAAM,SAAS,UAAU,QAAQ,KAAK;AACtC,MAAI,WAAW,IAAI;AACjB,gBAAY,UAAU,UAAU,GAAG,MAAM;AAAA,EAC7C;AACE,QAAM,SAAS,UAAU,QAAQ,KAAK;AACtC,MAAI,WAAW,IAAI;AACjB,WAAO,CAAC,SAAS;AAAA,EACrB,OAAS;AACL,QAAI;AACJ,QAAI;AACJ,QAAI;AACF,gBAAU,aAAa,SAAS,EAAE,gBAAiB;AACnD,oBAAc;AAAA,IACf,SAAQ,GAAG;AACV,YAAM,UAAU,UAAU,UAAU,GAAG,MAAM;AAC7C,gBAAU,aAAa,OAAO,EAAE,gBAAiB;AACjD,oBAAc;AAAA,IACpB;AACI,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACN,IAAQ;AACJ,WAAO,CAAC,aAAa,iBAAiB,QAAQ;AAAA,EAClD;AACA;AACA,SAAS,iBAAiB,WAAW,iBAAiB,gBAAgB;AACpE,MAAI,kBAAkB,iBAAiB;AACrC,QAAI,CAAC,UAAU,SAAS,KAAK,GAAG;AAC9B,mBAAa;AAAA,IACnB;AACI,QAAI,gBAAgB;AAClB,mBAAa,OAAO,cAAc;AAAA,IACxC;AACI,QAAI,iBAAiB;AACnB,mBAAa,OAAO,eAAe;AAAA,IACzC;AACI,WAAO;AAAA,EACX,OAAS;AACL,WAAO;AAAA,EACX;AACA;AACA,SAAS,UAAU,GAAG;AACpB,QAAM,KAAK,CAAE;AACb,WAAS,IAAI,GAAG,KAAK,IAAI,KAAK;AAC5B,UAAM,KAAKyF,WAAS,IAAI,MAAM,GAAG,CAAC;AAClC,OAAG,KAAK,EAAE,EAAE,CAAC;AAAA,EACjB;AACE,SAAO;AACT;AACA,SAAS,YAAY,GAAG;AACtB,QAAM,KAAK,CAAE;AACb,WAAS,IAAI,GAAG,KAAK,GAAG,KAAK;AAC3B,UAAM,KAAKA,WAAS,IAAI,MAAM,IAAI,KAAK,CAAC;AACxC,OAAG,KAAK,EAAE,EAAE,CAAC;AAAA,EACjB;AACE,SAAO;AACT;AACA,SAAS,UAAU,KAAK,QAAQ,WAAW,QAAQ;AACjD,QAAM,OAAO,IAAI,YAAa;AAC9B,MAAI,SAAS,SAAS;AACpB,WAAO;AAAA,EACX,WAAa,SAAS,MAAM;AACxB,WAAO,UAAU,MAAM;AAAA,EAC3B,OAAS;AACL,WAAO,OAAO,MAAM;AAAA,EACxB;AACA;AACA,SAAS,oBAAoB,KAAK;AAChC,MAAI,IAAI,mBAAmB,IAAI,oBAAoB,QAAQ;AACzD,WAAO;AAAA,EACX,OAAS;AACL,WAAO,IAAI,oBAAoB,UAAU,CAAC,IAAI,UAAU,IAAI,OAAO,WAAW,IAAI,KAAK,IAAI,KAAK,eAAe,IAAI,IAAI,EAAE,gBAAe,EAAG,oBAAoB;AAAA,EACnK;AACA;AAMA,MAAM,oBAAoB;AAAA,EACxB,YAAY,MAAM,aAAa,MAAM;AACnC,SAAK,QAAQ,KAAK,SAAS;AAC3B,SAAK,QAAQ,KAAK,SAAS;AAC3B,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACT,IAAQ;AACJ,QAAI,CAAC,eAAe,OAAO,KAAK,SAAS,EAAE,SAAS,GAAG;AACrD,YAAM,WAAW;AAAA,QACf,aAAa;AAAA,QACb,GAAG;AAAA,MACJ;AACD,UAAI,KAAK,QAAQ,EAAG,UAAS,uBAAuB,KAAK;AACzD,WAAK,MAAM,aAAa,MAAM,QAAQ;AAAA,IAC5C;AAAA,EACA;AAAA,EACE,OAAO,GAAG;AACR,QAAI,KAAK,KAAK;AACZ,YAAM,QAAQ,KAAK,QAAQ,KAAK,MAAM,CAAC,IAAI;AAC3C,aAAO,KAAK,IAAI,OAAO,KAAK;AAAA,IAClC,OAAW;AAEL,YAAM,QAAQ,KAAK,QAAQ,KAAK,MAAM,CAAC,IAAI,QAAQ,GAAG,CAAC;AACvD,aAAO,SAAS,OAAO,KAAK,KAAK;AAAA,IACvC;AAAA,EACA;AACA;AAMA,MAAM,kBAAkB;AAAA,EACtB,YAAY,IAAI,MAAM,MAAM;AAC1B,SAAK,OAAO;AACZ,SAAK,eAAe;AACpB,QAAI,IAAI;AACR,QAAI,KAAK,KAAK,UAAU;AAEtB,WAAK,KAAK;AAAA,IACX,WAAU,GAAG,KAAK,SAAS,SAAS;AAOnC,YAAM,YAAY,MAAM,GAAG,SAAS;AACpC,YAAM,UAAU,aAAa,IAAI,WAAW,SAAS,KAAK,UAAU,SAAS;AAC7E,UAAI,GAAG,WAAW,KAAK,SAAS,OAAO,OAAO,EAAE,OAAO;AACrD,YAAI;AACJ,aAAK,KAAK;AAAA,MAClB,OAAa;AAGL,YAAI;AACJ,aAAK,KAAK,GAAG,WAAW,IAAI,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK;AAAA,UACtD,SAAS,GAAG;AAAA,QACtB,CAAS;AACD,aAAK,eAAe,GAAG;AAAA,MAC/B;AAAA,IACK,WAAU,GAAG,KAAK,SAAS,UAAU;AACpC,WAAK,KAAK;AAAA,IACX,WAAU,GAAG,KAAK,SAAS,QAAQ;AAClC,WAAK,KAAK;AACV,UAAI,GAAG,KAAK;AAAA,IAClB,OAAW;AAGL,UAAI;AACJ,WAAK,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK;AAAA,QAC/B,SAAS,GAAG;AAAA,MACpB,CAAO;AACD,WAAK,eAAe,GAAG;AAAA,IAC7B;AACI,UAAM,WAAW;AAAA,MACf,GAAG,KAAK;AAAA,IACT;AACD,aAAS,WAAW,SAAS,YAAY;AACzC,SAAK,MAAM,aAAa,MAAM,QAAQ;AAAA,EAC1C;AAAA,EACE,SAAS;AACP,QAAI,KAAK,cAAc;AAGrB,aAAO,KAAK,gBAAgB,IAAI,CAAC;AAAA,QAC/B;AAAA,MACR,MAAY,KAAK,EAAE,KAAK,EAAE;AAAA,IAC1B;AACI,WAAO,KAAK,IAAI,OAAO,KAAK,GAAG,UAAU;AAAA,EAC7C;AAAA,EACE,gBAAgB;AACd,UAAM,QAAQ,KAAK,IAAI,cAAc,KAAK,GAAG,UAAU;AACvD,QAAI,KAAK,cAAc;AACrB,aAAO,MAAM,IAAI,UAAQ;AACvB,YAAI,KAAK,SAAS,gBAAgB;AAChC,gBAAM,aAAa,KAAK,aAAa,WAAW,KAAK,GAAG,IAAI;AAAA,YAC1D,QAAQ,KAAK,GAAG;AAAA,YAChB,QAAQ,KAAK,KAAK;AAAA,UAC9B,CAAW;AACD,iBAAO;AAAA,YACL,GAAG;AAAA,YACH,OAAO;AAAA,UACR;AAAA,QACX,OAAe;AACL,iBAAO;AAAA,QACjB;AAAA,MACA,CAAO;AAAA,IACP;AACI,WAAO;AAAA,EACX;AAAA,EACE,kBAAkB;AAChB,WAAO,KAAK,IAAI,gBAAiB;AAAA,EACrC;AACA;AAKA,MAAM,iBAAiB;AAAA,EACrB,YAAY,MAAM,WAAW,MAAM;AACjC,SAAK,OAAO;AAAA,MACV,OAAO;AAAA,MACP,GAAG;AAAA,IACJ;AACD,QAAI,CAAC,aAAa,eAAe;AAC/B,WAAK,MAAM,aAAa,MAAM,IAAI;AAAA,IACxC;AAAA,EACA;AAAA,EACE,OAAO5E,QAAO,MAAM;AAClB,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK,IAAI,OAAOA,QAAO,IAAI;AAAA,IACxC,OAAW;AACL,aAAO,mBAAmB,MAAMA,QAAO,KAAK,KAAK,SAAS,KAAK,KAAK,UAAU,MAAM;AAAA,IAC1F;AAAA,EACA;AAAA,EACE,cAAcA,QAAO,MAAM;AACzB,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK,IAAI,cAAcA,QAAO,IAAI;AAAA,IAC/C,OAAW;AACL,aAAO,CAAE;AAAA,IACf;AAAA,EACA;AACA;AACA,MAAM,uBAAuB;AAAA,EAC3B,UAAU;AAAA,EACV,aAAa;AAAA,EACb,SAAS,CAAC,GAAG,CAAC;AAChB;AAMA,MAAM,OAAO;AAAA,EACX,OAAO,SAAS,MAAM;AACpB,WAAO,OAAO,OAAO,KAAK,QAAQ,KAAK,iBAAiB,KAAK,gBAAgB,KAAK,cAAc,KAAK,WAAW;AAAA,EACpH;AAAA,EACE,OAAO,OAAO,QAAQ,iBAAiB,gBAAgB,cAAc,cAAc,OAAO;AACxF,UAAM,kBAAkB,UAAU,SAAS;AAE3C,UAAM,UAAU,oBAAoB,cAAc,UAAU,aAAY;AACxE,UAAM,mBAAmB,mBAAmB,SAAS;AACrD,UAAM,kBAAkB,kBAAkB,SAAS;AACnD,UAAM,gBAAgB,qBAAqB,YAAY,KAAK,SAAS;AACrE,WAAO,IAAI,OAAO,SAAS,kBAAkB,iBAAiB,eAAe,eAAe;AAAA,EAChG;AAAA,EACE,OAAO,aAAa;AAClB,qBAAiB;AACjB,kBAAc,CAAE;AAChB,mBAAe,CAAE;AACjB,mBAAe,CAAE;AAAA,EACrB;AAAA,EACE,OAAO,WAAW;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAG,IAAI;AACN,WAAO,OAAO,OAAO,QAAQ,iBAAiB,gBAAgB,YAAY;AAAA,EAC9E;AAAA,EACE,YAAY,QAAQ,WAAW,gBAAgB,cAAc,iBAAiB;AAC5E,UAAM,CAAC,cAAc,uBAAuB,oBAAoB,IAAI,kBAAkB,MAAM;AAC5F,SAAK,SAAS;AACd,SAAK,kBAAkB,aAAa,yBAAyB;AAC7D,SAAK,iBAAiB,kBAAkB,wBAAwB;AAChE,SAAK,eAAe;AACpB,SAAK,OAAO,iBAAiB,KAAK,QAAQ,KAAK,iBAAiB,KAAK,cAAc;AACnF,SAAK,gBAAgB;AAAA,MACnB,QAAQ,CAAE;AAAA,MACV,YAAY,CAAA;AAAA,IACb;AACD,SAAK,cAAc;AAAA,MACjB,QAAQ,CAAE;AAAA,MACV,YAAY,CAAA;AAAA,IACb;AACD,SAAK,gBAAgB;AACrB,SAAK,WAAW,CAAE;AAClB,SAAK,kBAAkB;AACvB,SAAK,oBAAoB;AAAA,EAC7B;AAAA,EACE,IAAI,cAAc;AAChB,QAAI,KAAK,qBAAqB,MAAM;AAClC,WAAK,oBAAoB,oBAAoB,IAAI;AAAA,IACvD;AACI,WAAO,KAAK;AAAA,EAChB;AAAA,EACE,cAAc;AACZ,UAAM,eAAe,KAAK,UAAW;AACrC,UAAM,kBAAkB,KAAK,oBAAoB,QAAQ,KAAK,oBAAoB,YAAY,KAAK,mBAAmB,QAAQ,KAAK,mBAAmB;AACtJ,WAAO,gBAAgB,iBAAiB,OAAO;AAAA,EACnD;AAAA,EACE,MAAM,MAAM;AACV,QAAI,CAAC,QAAQ,OAAO,oBAAoB,IAAI,EAAE,WAAW,GAAG;AAC1D,aAAO;AAAA,IACb,OAAW;AACL,aAAO,OAAO,OAAO,KAAK,UAAU,KAAK,iBAAiB,KAAK,mBAAmB,KAAK,iBAAiB,KAAK,kBAAkB,KAAK,gBAAgB,qBAAqB,KAAK,YAAY,KAAK,KAAK,cAAc,KAAK,eAAe,KAAK;AAAA,IACjP;AAAA,EACA;AAAA,EACE,cAAc,OAAO,IAAI;AACvB,WAAO,KAAK,MAAM;AAAA,MAChB,GAAG;AAAA,MACH,aAAa;AAAA,IACnB,CAAK;AAAA,EACL;AAAA,EACE,kBAAkB,OAAO,IAAI;AAC3B,WAAO,KAAK,MAAM;AAAA,MAChB,GAAG;AAAA,MACH,aAAa;AAAA,IACnB,CAAK;AAAA,EACL;AAAA,EACE,OAAO,QAAQ,SAAS,OAAO;AAC7B,WAAO,UAAU,MAAM,QAAQ,QAAQ,MAAM;AAC3C,YAAM,OAAO,SAAS;AAAA,QAClB,OAAO;AAAA,QACP,KAAK;AAAA,MACf,IAAY;AAAA,QACF,OAAO;AAAA,MACR,GACD,YAAY,SAAS,WAAW;AAClC,UAAI,CAAC,KAAK,YAAY,SAAS,EAAE,MAAM,GAAG;AACxC,aAAK,YAAY,SAAS,EAAE,MAAM,IAAI,UAAU,QAAM,KAAK,QAAQ,IAAI,MAAM,OAAO,CAAC;AAAA,MAC7F;AACM,aAAO,KAAK,YAAY,SAAS,EAAE,MAAM;AAAA,IAC/C,CAAK;AAAA,EACL;AAAA,EACE,SAAS,QAAQ,SAAS,OAAO;AAC/B,WAAO,UAAU,MAAM,QAAQ,UAAU,MAAM;AAC7C,YAAM,OAAO,SAAS;AAAA,QAClB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,MACf,IAAY;AAAA,QACF,SAAS;AAAA,MACV,GACD,YAAY,SAAS,WAAW;AAClC,UAAI,CAAC,KAAK,cAAc,SAAS,EAAE,MAAM,GAAG;AAC1C,aAAK,cAAc,SAAS,EAAE,MAAM,IAAI,YAAY,QAAM,KAAK,QAAQ,IAAI,MAAM,SAAS,CAAC;AAAA,MACnG;AACM,aAAO,KAAK,cAAc,SAAS,EAAE,MAAM;AAAA,IACjD,CAAK;AAAA,EACL;AAAA,EACE,YAAY;AACV,WAAO,UAAU,MAAM,QAAW,MAAM,WAAW,MAAM;AAGvD,UAAI,CAAC,KAAK,eAAe;AACvB,cAAM,OAAO;AAAA,UACX,MAAM;AAAA,UACN,WAAW;AAAA,QACZ;AACD,aAAK,gBAAgB,CAAC4E,WAAS,IAAI,MAAM,IAAI,IAAI,CAAC,GAAGA,WAAS,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC,EAAE,IAAI,QAAM,KAAK,QAAQ,IAAI,MAAM,WAAW,CAAC;AAAA,MAC1I;AACM,aAAO,KAAK;AAAA,IAClB,CAAK;AAAA,EACL;AAAA,EACE,KAAK,QAAQ;AACX,WAAO,UAAU,MAAM,QAAQ,MAAM,MAAM;AACzC,YAAM,OAAO;AAAA,QACX,KAAK;AAAA,MACN;AAID,UAAI,CAAC,KAAK,SAAS,MAAM,GAAG;AAC1B,aAAK,SAAS,MAAM,IAAI,CAACA,WAAS,IAAI,KAAK,GAAG,CAAC,GAAGA,WAAS,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,QAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,CAAC;AAAA,MAC3H;AACM,aAAO,KAAK,SAAS,MAAM;AAAA,IACjC,CAAK;AAAA,EACL;AAAA,EACE,QAAQ,IAAI,UAAU,OAAO;AAC3B,UAAM,KAAK,KAAK,YAAY,IAAI,QAAQ,GACtC,UAAU,GAAG,cAAe,GAC5B,WAAW,QAAQ,KAAK,OAAK,EAAE,KAAK,YAAa,MAAK,KAAK;AAC7D,WAAO,WAAW,SAAS,QAAQ;AAAA,EACvC;AAAA,EACE,gBAAgB,OAAO,IAAI;AAGzB,WAAO,IAAI,oBAAoB,KAAK,MAAM,KAAK,eAAe,KAAK,aAAa,IAAI;AAAA,EACxF;AAAA,EACE,YAAY,IAAI,WAAW,IAAI;AAC7B,WAAO,IAAI,kBAAkB,IAAI,KAAK,MAAM,QAAQ;AAAA,EACxD;AAAA,EACE,aAAa,OAAO,IAAI;AACtB,WAAO,IAAI,iBAAiB,KAAK,MAAM,KAAK,UAAW,GAAE,IAAI;AAAA,EACjE;AAAA,EACE,cAAc,OAAO,IAAI;AACvB,WAAO,YAAY,KAAK,MAAM,IAAI;AAAA,EACtC;AAAA,EACE,YAAY;AACV,WAAO,KAAK,WAAW,QAAQ,KAAK,OAAO,YAAa,MAAK,WAAW,IAAI,KAAK,eAAe,KAAK,IAAI,EAAE,gBAAe,EAAG,OAAO,WAAW,OAAO;AAAA,EAC1J;AAAA,EACE,kBAAkB;AAChB,QAAI,KAAK,cAAc;AACrB,aAAO,KAAK;AAAA,IAClB,WAAe,CAAC,qBAAqB;AAC/B,aAAO;AAAA,IACb,OAAW;AACL,aAAO,kBAAkB,KAAK,MAAM;AAAA,IAC1C;AAAA,EACA;AAAA,EACE,iBAAiB;AACf,WAAO,KAAK,gBAAe,EAAG;AAAA,EAClC;AAAA,EACE,wBAAwB;AACtB,WAAO,KAAK,gBAAe,EAAG;AAAA,EAClC;AAAA,EACE,iBAAiB;AACf,WAAO,KAAK,gBAAe,EAAG;AAAA,EAClC;AAAA,EACE,OAAO,OAAO;AACZ,WAAO,KAAK,WAAW,MAAM,UAAU,KAAK,oBAAoB,MAAM,mBAAmB,KAAK,mBAAmB,MAAM;AAAA,EAC3H;AAAA,EACE,WAAW;AACT,WAAO,UAAU,KAAK,MAAM,KAAK,KAAK,eAAe,KAAK,KAAK,cAAc;AAAA,EACjF;AACA;AAEA,IAAI,YAAY;AAMhB,MAAM,wBAAwB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,WAAW,cAAc;AACvB,QAAI,cAAc,MAAM;AACtB,kBAAY,IAAI,gBAAgB,CAAC;AAAA,IACvC;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,SAASC,SAAQ;AACtB,WAAOA,YAAW,IAAI,gBAAgB,cAAc,IAAI,gBAAgBA,OAAM;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,OAAO,eAAe1F,IAAG;AACvB,QAAIA,IAAG;AACL,YAAM,IAAIA,GAAE,MAAM,uCAAuC;AACzD,UAAI,GAAG;AACL,eAAO,IAAI,gBAAgB,aAAa,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAAA,MAC3D;AAAA,IACA;AACI,WAAO;AAAA,EACX;AAAA,EACE,YAAY0F,SAAQ;AAClB,UAAO;AAEP,SAAK,QAAQA;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,OAAO;AACT,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,OAAO;AACT,WAAO,KAAK,UAAU,IAAI,QAAQ,MAAM,aAAa,KAAK,OAAO,QAAQ,CAAC;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,WAAW;AACb,QAAI,KAAK,UAAU,GAAG;AACpB,aAAO;AAAA,IACb,OAAW;AACL,aAAO,UAAU,aAAa,CAAC,KAAK,OAAO,QAAQ,CAAC;AAAA,IAC1D;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,aAAa;AACX,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,aAAa,IAAI,QAAQ;AACvB,WAAO,aAAa,KAAK,OAAO,MAAM;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,cAAc;AAChB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,SAAS;AACP,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,WAAW;AAChB,WAAO,UAAU,SAAS,WAAW,UAAU,UAAU,KAAK;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,UAAU;AACZ,WAAO;AAAA,EACX;AACA;AAMA,MAAM,oBAAoB,KAAK;AAAA,EAC7B,YAAY,UAAU;AACpB,UAAO;AAEP,SAAK,WAAW;AAAA,EACpB;AAAA;AAAA,EAGE,IAAI,OAAO;AACT,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAGE,IAAI,cAAc;AAChB,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,aAAa;AACX,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,eAAe;AACb,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,SAAS;AACP,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,SAAS;AACP,WAAO;AAAA,EACX;AAAA;AAAA,EAGE,IAAI,UAAU;AACZ,WAAO;AAAA,EACX;AACA;AAKA,SAAS,cAAc,OAAOC,cAAa;AACzC,MAAI,YAAY,KAAK,KAAK,UAAU,MAAM;AACxC,WAAOA;AAAA,EACX,WAAa,iBAAiB,MAAM;AAChC,WAAO;AAAA,EACX,WAAa,SAAS,KAAK,GAAG;AAC1B,UAAM,UAAU,MAAM,YAAa;AACnC,QAAI,YAAY,UAAW,QAAOA;AAAA,aAAqB,YAAY,WAAW,YAAY,SAAU,QAAO,WAAW;AAAA,aAAkB,YAAY,SAAS,YAAY,MAAO,QAAO,gBAAgB;AAAA,QAAiB,QAAO,gBAAgB,eAAe,OAAO,KAAK,SAAS,OAAO,KAAK;AAAA,EACnS,WAAa,SAAS,KAAK,GAAG;AAC1B,WAAO,gBAAgB,SAAS,KAAK;AAAA,EACzC,WAAa,OAAO,UAAU,YAAY,YAAY,SAAS,OAAO,MAAM,WAAW,YAAY;AAG/F,WAAO;AAAA,EACX,OAAS;AACL,WAAO,IAAI,YAAY,KAAK;AAAA,EAChC;AACA;AAEA,MAAM,mBAAmB;AAAA,EACvB,MAAM;AAAA,EACN,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,UAAU;AAAA,EACV,MAAM;AAAA,EACN,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACR;AACA,MAAM,wBAAwB;AAAA,EAC5B,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,SAAS,CAAC,MAAM,IAAI;AAAA,EACpB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,UAAU,CAAC,OAAO,KAAK;AAAA,EACvB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,SAAS,CAAC,MAAM,IAAI;AAAA,EACpB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AAAA,EACjB,MAAM,CAAC,MAAM,IAAI;AACnB;AACA,MAAM,eAAe,iBAAiB,QAAQ,QAAQ,YAAY,EAAE,EAAE,MAAM,EAAE;AAC9E,SAAS,YAAY,KAAK;AACxB,MAAI,QAAQ,SAAS,KAAK,EAAE;AAC5B,MAAI,MAAM,KAAK,GAAG;AAChB,YAAQ;AACR,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,UAAI,IAAI,CAAC,EAAE,OAAO,iBAAiB,OAAO,MAAM,IAAI;AAClD,iBAAS,aAAa,QAAQ,IAAI,CAAC,CAAC;AAAA,MAC5C,OAAa;AACL,mBAAW,OAAO,uBAAuB;AACvC,gBAAM,CAAC,KAAK,GAAG,IAAI,sBAAsB,GAAG;AAC5C,cAAI,QAAQ,OAAO,QAAQ,KAAK;AAC9B,qBAAS,OAAO;AAAA,UAC5B;AAAA,QACA;AAAA,MACA;AAAA,IACA;AACI,WAAO,SAAS,OAAO,EAAE;AAAA,EAC7B,OAAS;AACL,WAAO;AAAA,EACX;AACA;AAGA,IAAI,kBAAkB,CAAE;AACxB,SAAS,uBAAuB;AAC9B,oBAAkB,CAAE;AACtB;AACA,SAAS,WAAW;AAAA,EAClB;AACF,GAAG,SAAS,IAAI;AACd,QAAM,KAAK,mBAAmB;AAC9B,MAAI,CAAC,gBAAgB,EAAE,GAAG;AACxB,oBAAgB,EAAE,IAAI,CAAE;AAAA,EAC5B;AACE,MAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,GAAG;AAChC,oBAAgB,EAAE,EAAE,MAAM,IAAI,IAAI,OAAO,GAAG,iBAAiB,EAAE,CAAC,GAAG,MAAM,EAAE;AAAA,EAC/E;AACE,SAAO,gBAAgB,EAAE,EAAE,MAAM;AACnC;AAEA,IAAI,MAAM,MAAM,KAAK,IAAK,GACxB,cAAc,UACd,gBAAgB,MAChB,yBAAyB,MACzB,wBAAwB,MACxB,qBAAqB,IACrB,gBACA,sBAAsB;AAKxB,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKb,WAAW,MAAM;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,WAAW,IAAIjD,IAAG;AAChB,UAAMA;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW,YAAY,MAAM;AAC3B,kBAAc;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW,cAAc;AACvB,WAAO,cAAc,aAAa,WAAW,QAAQ;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,gBAAgB;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,cAAc,QAAQ;AAC/B,oBAAgB;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,yBAAyB;AAClC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,uBAAuB,iBAAiB;AACjD,6BAAyB;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,wBAAwB;AACjC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,sBAAsB,gBAAgB;AAC/C,4BAAwB;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,WAAW,sBAAsB;AAC/B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,WAAW,oBAAoB,cAAc;AAC3C,0BAAsB,qBAAqB,YAAY;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,qBAAqB;AAC9B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,WAAW,mBAAmB,YAAY;AACxC,yBAAqB,aAAa;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,iBAAiB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,eAAe,GAAG;AAC3B,qBAAiB;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,OAAO,cAAc;AACnB,WAAO,WAAY;AACnB,aAAS,WAAY;AACrB+C,eAAS,WAAY;AACrB,yBAAsB;AAAA,EAC1B;AACA;AAEA,MAAM,QAAQ;AAAA,EACZ,YAAY,QAAQ,aAAa;AAC/B,SAAK,SAAS;AACd,SAAK,cAAc;AAAA,EACvB;AAAA,EACE,YAAY;AACV,QAAI,KAAK,aAAa;AACpB,aAAO,GAAG,KAAK,MAAM,KAAK,KAAK,WAAW;AAAA,IAChD,OAAW;AACL,aAAO,KAAK;AAAA,IAClB;AAAA,EACA;AACA;AAEA,MAAM,gBAAgB,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAC1E,aAAa,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACrE,SAAS,eAAe,MAAM,OAAO;AACnC,SAAO,IAAI,QAAQ,qBAAqB,iBAAiB,KAAK,aAAa,OAAO,KAAK,UAAU,IAAI,oBAAoB;AAC3H;AACA,SAAS,UAAU,MAAM,OAAO,KAAK;AACnC,QAAM,IAAI,IAAI,KAAK,KAAK,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC;AACjD,MAAI,OAAO,OAAO,QAAQ,GAAG;AAC3B,MAAE,eAAe,EAAE,eAAc,IAAK,IAAI;AAAA,EAC9C;AACE,QAAM,KAAK,EAAE,UAAW;AACxB,SAAO,OAAO,IAAI,IAAI;AACxB;AACA,SAAS,eAAe,MAAM,OAAO,KAAK;AACxC,SAAO,OAAO,WAAW,IAAI,IAAI,aAAa,eAAe,QAAQ,CAAC;AACxE;AACA,SAAS,iBAAiB,MAAM,SAAS;AACvC,QAAM,QAAQ,WAAW,IAAI,IAAI,aAAa,eAC5C,SAAS,MAAM,UAAU,OAAK,IAAI,OAAO,GACzC,MAAM,UAAU,MAAM,MAAM;AAC9B,SAAO;AAAA,IACL,OAAO,SAAS;AAAA,IAChB;AAAA,EACD;AACH;AACA,SAAS,kBAAkB,YAAY,aAAa;AAClD,UAAQ,aAAa,cAAc,KAAK,IAAI;AAC9C;AAMA,SAAS,gBAAgB,SAAS,qBAAqB,GAAG,cAAc,GAAG;AACzE,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACN,IAAQ,SACJ,UAAU,eAAe,MAAM,OAAO,GAAG,GACzC,UAAU,kBAAkB,UAAU,MAAM,OAAO,GAAG,GAAG,WAAW;AACtE,MAAI,aAAa,KAAK,OAAO,UAAU,UAAU,KAAK,sBAAsB,CAAC,GAC3E;AACF,MAAI,aAAa,GAAG;AAClB,eAAW,OAAO;AAClB,iBAAa,gBAAgB,UAAU,oBAAoB,WAAW;AAAA,EAC1E,WAAa,aAAa,gBAAgB,MAAM,oBAAoB,WAAW,GAAG;AAC9E,eAAW,OAAO;AAClB,iBAAa;AAAA,EACjB,OAAS;AACL,eAAW;AAAA,EACf;AACE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG,WAAW,OAAO;AAAA,EACtB;AACH;AACA,SAAS,gBAAgB,UAAU,qBAAqB,GAAG,cAAc,GAAG;AAC1E,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACN,IAAQ,UACJ,gBAAgB,kBAAkB,UAAU,UAAU,GAAG,kBAAkB,GAAG,WAAW,GACzF,aAAa,WAAW,QAAQ;AAClC,MAAI,UAAU,aAAa,IAAI,UAAU,gBAAgB,IAAI,oBAC3D;AACF,MAAI,UAAU,GAAG;AACf,WAAO,WAAW;AAClB,eAAW,WAAW,IAAI;AAAA,EAC9B,WAAa,UAAU,YAAY;AAC/B,WAAO,WAAW;AAClB,eAAW,WAAW,QAAQ;AAAA,EAClC,OAAS;AACL,WAAO;AAAA,EACX;AACE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM,iBAAiB,MAAM,OAAO;AAClC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG,WAAW,QAAQ;AAAA,EACvB;AACH;AACA,SAAS,mBAAmB,UAAU;AACpC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAM;AACJ,QAAM,UAAU,eAAe,MAAM,OAAO,GAAG;AAC/C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,GAAG,WAAW,QAAQ;AAAA,EACvB;AACH;AACA,SAAS,mBAAmB,aAAa;AACvC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM;AACJ,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM,iBAAiB,MAAM,OAAO;AAClC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG,WAAW,WAAW;AAAA,EAC1B;AACH;AAQA,SAAS,oBAAoB,KAAK,KAAK;AACrC,QAAM,oBAAoB,CAAC,YAAY,IAAI,YAAY,KAAK,CAAC,YAAY,IAAI,eAAe,KAAK,CAAC,YAAY,IAAI,aAAa;AAC/H,MAAI,mBAAmB;AACrB,UAAM,iBAAiB,CAAC,YAAY,IAAI,OAAO,KAAK,CAAC,YAAY,IAAI,UAAU,KAAK,CAAC,YAAY,IAAI,QAAQ;AAC7G,QAAI,gBAAgB;AAClB,YAAM,IAAI,8BAA8B,gEAAgE;AAAA,IAC9G;AACI,QAAI,CAAC,YAAY,IAAI,YAAY,EAAG,KAAI,UAAU,IAAI;AACtD,QAAI,CAAC,YAAY,IAAI,eAAe,EAAG,KAAI,aAAa,IAAI;AAC5D,QAAI,CAAC,YAAY,IAAI,aAAa,EAAG,KAAI,WAAW,IAAI;AACxD,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO,IAAI;AACX,WAAO;AAAA,MACL,oBAAoB,IAAI,sBAAuB;AAAA,MAC/C,aAAa,IAAI,eAAc;AAAA,IAChC;AAAA,EACL,OAAS;AACL,WAAO;AAAA,MACL,oBAAoB;AAAA,MACpB,aAAa;AAAA,IACd;AAAA,EACL;AACA;AACA,SAAS,mBAAmB,KAAK,qBAAqB,GAAG,cAAc,GAAG;AACxE,QAAM,YAAY,UAAU,IAAI,QAAQ,GACtC,YAAY,eAAe,IAAI,YAAY,GAAG,gBAAgB,IAAI,UAAU,oBAAoB,WAAW,CAAC,GAC5G,eAAe,eAAe,IAAI,SAAS,GAAG,CAAC;AACjD,MAAI,CAAC,WAAW;AACd,WAAO,eAAe,YAAY,IAAI,QAAQ;AAAA,EAClD,WAAa,CAAC,WAAW;AACrB,WAAO,eAAe,QAAQ,IAAI,UAAU;AAAA,EAChD,WAAa,CAAC,cAAc;AACxB,WAAO,eAAe,WAAW,IAAI,OAAO;AAAA,EAC7C,MAAM,QAAO;AAChB;AACA,SAAS,sBAAsB,KAAK;AAClC,QAAM,YAAY,UAAU,IAAI,IAAI,GAClC,eAAe,eAAe,IAAI,SAAS,GAAG,WAAW,IAAI,IAAI,CAAC;AACpE,MAAI,CAAC,WAAW;AACd,WAAO,eAAe,QAAQ,IAAI,IAAI;AAAA,EAC1C,WAAa,CAAC,cAAc;AACxB,WAAO,eAAe,WAAW,IAAI,OAAO;AAAA,EAC7C,MAAM,QAAO;AAChB;AACA,SAAS,wBAAwB,KAAK;AACpC,QAAM,YAAY,UAAU,IAAI,IAAI,GAClC,aAAa,eAAe,IAAI,OAAO,GAAG,EAAE,GAC5C,WAAW,eAAe,IAAI,KAAK,GAAG,YAAY,IAAI,MAAM,IAAI,KAAK,CAAC;AACxE,MAAI,CAAC,WAAW;AACd,WAAO,eAAe,QAAQ,IAAI,IAAI;AAAA,EAC1C,WAAa,CAAC,YAAY;AACtB,WAAO,eAAe,SAAS,IAAI,KAAK;AAAA,EAC5C,WAAa,CAAC,UAAU;AACpB,WAAO,eAAe,OAAO,IAAI,GAAG;AAAA,EACrC,MAAM,QAAO;AAChB;AACA,SAAS,mBAAmB,KAAK;AAC/B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAM;AACJ,QAAM,YAAY,eAAe,MAAM,GAAG,EAAE,KAAK,SAAS,MAAM,WAAW,KAAK,WAAW,KAAK,gBAAgB,GAC9G,cAAc,eAAe,QAAQ,GAAG,EAAE,GAC1C,cAAc,eAAe,QAAQ,GAAG,EAAE,GAC1C,mBAAmB,eAAe,aAAa,GAAG,GAAG;AACvD,MAAI,CAAC,WAAW;AACd,WAAO,eAAe,QAAQ,IAAI;AAAA,EACtC,WAAa,CAAC,aAAa;AACvB,WAAO,eAAe,UAAU,MAAM;AAAA,EAC1C,WAAa,CAAC,aAAa;AACvB,WAAO,eAAe,UAAU,MAAM;AAAA,EAC1C,WAAa,CAAC,kBAAkB;AAC5B,WAAO,eAAe,eAAe,WAAW;AAAA,EACjD,MAAM,QAAO;AAChB;AAcA,SAAS,YAAY,GAAG;AACtB,SAAO,OAAO,MAAM;AACtB;AACA,SAAS,SAAS,GAAG;AACnB,SAAO,OAAO,MAAM;AACtB;AACA,SAAS,UAAU,GAAG;AACpB,SAAO,OAAO,MAAM,YAAY,IAAI,MAAM;AAC5C;AACA,SAAS,SAAS,GAAG;AACnB,SAAO,OAAO,MAAM;AACtB;AACA,SAAS,OAAO,GAAG;AACjB,SAAO,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AAC/C;AAIA,SAAS,cAAc;AACrB,MAAI;AACF,WAAO,OAAO,SAAS,eAAe,CAAC,CAAC,KAAK;AAAA,EAC9C,SAAQ,GAAG;AACV,WAAO;AAAA,EACX;AACA;AACA,SAAS,oBAAoB;AAC3B,MAAI;AACF,WAAO,OAAO,SAAS,eAAe,CAAC,CAAC,KAAK,WAAW,cAAc,KAAK,OAAO,aAAa,iBAAiB,KAAK,OAAO;AAAA,EAC7H,SAAQ,GAAG;AACV,WAAO;AAAA,EACX;AACA;AAIA,SAAS,WAAW,OAAO;AACzB,SAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC9C;AACA,SAAS,OAAO,KAAK,IAAI,SAAS;AAChC,MAAI,IAAI,WAAW,GAAG;AACpB,WAAO;AAAA,EACX;AACE,SAAO,IAAI,OAAO,CAAC,MAAM,SAAS;AAChC,UAAM,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI;AAC5B,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACb,WAAe,QAAQ,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG;AAChD,aAAO;AAAA,IACb,OAAW;AACL,aAAO;AAAA,IACb;AAAA,EACA,GAAK,IAAI,EAAE,CAAC;AACZ;AACA,SAAS,KAAK,KAAKG,OAAM;AACvB,SAAOA,MAAK,OAAO,CAAC,GAAG,MAAM;AAC3B,MAAE,CAAC,IAAI,IAAI,CAAC;AACZ,WAAO;AAAA,EACR,GAAE,EAAE;AACP;AACA,SAAS,eAAe,KAAK,MAAM;AACjC,SAAO,OAAO,UAAU,eAAe,KAAK,KAAK,IAAI;AACvD;AACA,SAAS,qBAAqB,UAAU;AACtC,MAAI,YAAY,MAAM;AACpB,WAAO;AAAA,EACX,WAAa,OAAO,aAAa,UAAU;AACvC,UAAM,IAAI,qBAAqB,iCAAiC;AAAA,EACpE,OAAS;AACL,QAAI,CAAC,eAAe,SAAS,UAAU,GAAG,CAAC,KAAK,CAAC,eAAe,SAAS,aAAa,GAAG,CAAC,KAAK,CAAC,MAAM,QAAQ,SAAS,OAAO,KAAK,SAAS,QAAQ,KAAK,OAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,GAAG;AACvL,YAAM,IAAI,qBAAqB,uBAAuB;AAAA,IAC5D;AACI,WAAO;AAAA,MACL,UAAU,SAAS;AAAA,MACnB,aAAa,SAAS;AAAA,MACtB,SAAS,MAAM,KAAK,SAAS,OAAO;AAAA,IACrC;AAAA,EACL;AACA;AAIA,SAAS,eAAe,OAAO,QAAQ,KAAK;AAC1C,SAAO,UAAU,KAAK,KAAK,SAAS,UAAU,SAAS;AACzD;AAGA,SAAS,SAAS,GAAGlD,IAAG;AACtB,SAAO,IAAIA,KAAI,KAAK,MAAM,IAAIA,EAAC;AACjC;AACA,SAAS,SAAS,OAAOA,KAAI,GAAG;AAC9B,QAAM,QAAQ,QAAQ;AACtB,MAAI;AACJ,MAAI,OAAO;AACT,aAAS,OAAO,KAAK,CAAC,OAAO,SAASA,IAAG,GAAG;AAAA,EAChD,OAAS;AACL,cAAU,KAAK,OAAO,SAASA,IAAG,GAAG;AAAA,EACzC;AACE,SAAO;AACT;AACA,SAAS,aAAa,QAAQ;AAC5B,MAAI,YAAY,MAAM,KAAK,WAAW,QAAQ,WAAW,IAAI;AAC3D,WAAO;AAAA,EACX,OAAS;AACL,WAAO,SAAS,QAAQ,EAAE;AAAA,EAC9B;AACA;AACA,SAAS,cAAc,QAAQ;AAC7B,MAAI,YAAY,MAAM,KAAK,WAAW,QAAQ,WAAW,IAAI;AAC3D,WAAO;AAAA,EACX,OAAS;AACL,WAAO,WAAW,MAAM;AAAA,EAC5B;AACA;AACA,SAAS,YAAY,UAAU;AAE7B,MAAI,YAAY,QAAQ,KAAK,aAAa,QAAQ,aAAa,IAAI;AACjE,WAAO;AAAA,EACX,OAAS;AACL,UAAM,IAAI,WAAW,OAAO,QAAQ,IAAI;AACxC,WAAO,KAAK,MAAM,CAAC;AAAA,EACvB;AACA;AACA,SAAS,QAAQ,QAAQ,QAAQ,aAAa,OAAO;AACnD,QAAM,SAAS,MAAM,QACnB,UAAU,aAAa,KAAK,QAAQ,KAAK;AAC3C,SAAO,QAAQ,SAAS,MAAM,IAAI;AACpC;AAIA,SAAS,WAAW,MAAM;AACxB,SAAO,OAAO,MAAM,MAAM,OAAO,QAAQ,KAAK,OAAO,QAAQ;AAC/D;AACA,SAAS,WAAW,MAAM;AACxB,SAAO,WAAW,IAAI,IAAI,MAAM;AAClC;AACA,SAAS,YAAY,MAAM,OAAO;AAChC,QAAM,WAAW,SAAS,QAAQ,GAAG,EAAE,IAAI,GACzC,UAAU,QAAQ,QAAQ,YAAY;AACxC,MAAI,aAAa,GAAG;AAClB,WAAO,WAAW,OAAO,IAAI,KAAK;AAAA,EACtC,OAAS;AACL,WAAO,CAAC,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,WAAW,CAAC;AAAA,EAC1E;AACA;AAGA,SAAS,aAAa,KAAK;AACzB,MAAI,IAAI,KAAK,IAAI,IAAI,MAAM,IAAI,QAAQ,GAAG,IAAI,KAAK,IAAI,MAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW;AAGpG,MAAI,IAAI,OAAO,OAAO,IAAI,QAAQ,GAAG;AACnC,QAAI,IAAI,KAAK,CAAC;AAId,MAAE,eAAe,IAAI,MAAM,IAAI,QAAQ,GAAG,IAAI,GAAG;AAAA,EACrD;AACE,SAAO,CAAC;AACV;AAGA,SAAS,gBAAgB,MAAM,oBAAoB,aAAa;AAC9D,QAAM,QAAQ,kBAAkB,UAAU,MAAM,GAAG,kBAAkB,GAAG,WAAW;AACnF,SAAO,CAAC,QAAQ,qBAAqB;AACvC;AACA,SAAS,gBAAgB,UAAU,qBAAqB,GAAG,cAAc,GAAG;AAC1E,QAAM,aAAa,gBAAgB,UAAU,oBAAoB,WAAW;AAC5E,QAAM,iBAAiB,gBAAgB,WAAW,GAAG,oBAAoB,WAAW;AACpF,UAAQ,WAAW,QAAQ,IAAI,aAAa,kBAAkB;AAChE;AACA,SAAS,eAAe,MAAM;AAC5B,MAAI,OAAO,IAAI;AACb,WAAO;AAAA,EACX,MAAS,QAAO,OAAO,SAAS,qBAAqB,OAAO,OAAO,MAAO;AAC1E;AAIA,SAAS,cAAc,IAAI,cAAc,QAAQ,WAAW,MAAM;AAChE,QAAM,OAAO,IAAI,KAAK,EAAE,GACtB,WAAW;AAAA,IACT,WAAW;AAAA,IACX,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,EACT;AACH,MAAI,UAAU;AACZ,aAAS,WAAW;AAAA,EACxB;AACE,QAAM,WAAW;AAAA,IACf,cAAc;AAAA,IACd,GAAG;AAAA,EACJ;AACD,QAAM,SAAS,IAAI,KAAK,eAAe,QAAQ,QAAQ,EAAE,cAAc,IAAI,EAAE,KAAK,OAAK,EAAE,KAAK,YAAa,MAAK,cAAc;AAC9H,SAAO,SAAS,OAAO,QAAQ;AACjC;AAGA,SAAS,aAAa,YAAY,cAAc;AAC9C,MAAI,UAAU,SAAS,YAAY,EAAE;AAGrC,MAAI,OAAO,MAAM,OAAO,GAAG;AACzB,cAAU;AAAA,EACd;AACE,QAAM,SAAS,SAAS,cAAc,EAAE,KAAK,GAC3C,eAAe,UAAU,KAAK,OAAO,GAAG,SAAS,EAAE,IAAI,CAAC,SAAS;AACnE,SAAO,UAAU,KAAK;AACxB;AAIA,SAAS,SAAS,OAAO;AACvB,QAAM,eAAe,OAAO,KAAK;AACjC,MAAI,OAAO,UAAU,aAAa,UAAU,MAAM,OAAO,MAAM,YAAY,EAAG,OAAM,IAAI,qBAAqB,sBAAsB,KAAK,EAAE;AAC1I,SAAO;AACT;AACA,SAAS,gBAAgB,KAAK,YAAY;AACxC,QAAM,aAAa,CAAE;AACrB,aAAW,KAAK,KAAK;AACnB,QAAI,eAAe,KAAK,CAAC,GAAG;AAC1B,YAAM,IAAI,IAAI,CAAC;AACf,UAAI,MAAM,UAAa,MAAM,KAAM;AACnC,iBAAW,WAAW,CAAC,CAAC,IAAI,SAAS,CAAC;AAAA,IAC5C;AAAA,EACA;AACE,SAAO;AACT;AASA,SAAS,aAAagD,SAAQ,QAAQ;AACpC,QAAM,QAAQ,KAAK,MAAM,KAAK,IAAIA,UAAS,EAAE,CAAC,GAC5C,UAAU,KAAK,MAAM,KAAK,IAAIA,UAAS,EAAE,CAAC,GAC1C,OAAOA,WAAU,IAAI,MAAM;AAC7B,UAAQ,QAAM;AAAA,IACZ,KAAK;AACH,aAAO,GAAG,IAAI,GAAG,SAAS,OAAO,CAAC,CAAC,IAAI,SAAS,SAAS,CAAC,CAAC;AAAA,IAC7D,KAAK;AACH,aAAO,GAAG,IAAI,GAAG,KAAK,GAAG,UAAU,IAAI,IAAI,OAAO,KAAK,EAAE;AAAA,IAC3D,KAAK;AACH,aAAO,GAAG,IAAI,GAAG,SAAS,OAAO,CAAC,CAAC,GAAG,SAAS,SAAS,CAAC,CAAC;AAAA,IAC5D;AACE,YAAM,IAAI,WAAW,gBAAgB,MAAM,sCAAsC;AAAA,EACvF;AACA;AACA,SAAS,WAAW,KAAK;AACvB,SAAO,KAAK,KAAK,CAAC,QAAQ,UAAU,UAAU,aAAa,CAAC;AAC9D;AAMA,MAAM,aAAa,CAAC,WAAW,YAAY,SAAS,SAAS,OAAO,QAAQ,QAAQ,UAAU,aAAa,WAAW,YAAY,UAAU;AAC5I,MAAM,cAAc,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AACvG,MAAM,eAAe,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAChF,SAAS,OAAO,QAAQ;AACtB,UAAQ,QAAM;AAAA,IACZ,KAAK;AACH,aAAO,CAAC,GAAG,YAAY;AAAA,IACzB,KAAK;AACH,aAAO,CAAC,GAAG,WAAW;AAAA,IACxB,KAAK;AACH,aAAO,CAAC,GAAG,UAAU;AAAA,IACvB,KAAK;AACH,aAAO,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,IAAI;AAAA,IACvE,KAAK;AACH,aAAO,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,IAChF;AACE,aAAO;AAAA,EACb;AACA;AACA,MAAM,eAAe,CAAC,UAAU,WAAW,aAAa,YAAY,UAAU,YAAY,QAAQ;AAClG,MAAM,gBAAgB,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AACtE,MAAM,iBAAiB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACzD,SAAS,SAAS,QAAQ;AACxB,UAAQ,QAAM;AAAA,IACZ,KAAK;AACH,aAAO,CAAC,GAAG,cAAc;AAAA,IAC3B,KAAK;AACH,aAAO,CAAC,GAAG,aAAa;AAAA,IAC1B,KAAK;AACH,aAAO,CAAC,GAAG,YAAY;AAAA,IACzB,KAAK;AACH,aAAO,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,IAC3C;AACE,aAAO;AAAA,EACb;AACA;AACA,MAAM,YAAY,CAAC,MAAM,IAAI;AAC7B,MAAM,WAAW,CAAC,iBAAiB,aAAa;AAChD,MAAM,YAAY,CAAC,MAAM,IAAI;AAC7B,MAAM,aAAa,CAAC,KAAK,GAAG;AAC5B,SAAS,KAAK,QAAQ;AACpB,UAAQ,QAAM;AAAA,IACZ,KAAK;AACH,aAAO,CAAC,GAAG,UAAU;AAAA,IACvB,KAAK;AACH,aAAO,CAAC,GAAG,SAAS;AAAA,IACtB,KAAK;AACH,aAAO,CAAC,GAAG,QAAQ;AAAA,IACrB;AACE,aAAO;AAAA,EACb;AACA;AACA,SAAS,oBAAoB,IAAI;AAC/B,SAAO,UAAU,GAAG,OAAO,KAAK,IAAI,CAAC;AACvC;AACA,SAAS,mBAAmB,IAAI,QAAQ;AACtC,SAAO,SAAS,MAAM,EAAE,GAAG,UAAU,CAAC;AACxC;AACA,SAAS,iBAAiB,IAAI,QAAQ;AACpC,SAAO,OAAO,MAAM,EAAE,GAAG,QAAQ,CAAC;AACpC;AACA,SAAS,eAAe,IAAI,QAAQ;AAClC,SAAO,KAAK,MAAM,EAAE,GAAG,OAAO,IAAI,IAAI,CAAC;AACzC;AACA,SAAS,mBAAmB,MAAM7E,QAAO,UAAU,UAAU,SAAS,OAAO;AAC3E,QAAM,QAAQ;AAAA,IACZ,OAAO,CAAC,QAAQ,KAAK;AAAA,IACrB,UAAU,CAAC,WAAW,MAAM;AAAA,IAC5B,QAAQ,CAAC,SAAS,KAAK;AAAA,IACvB,OAAO,CAAC,QAAQ,KAAK;AAAA,IACrB,MAAM,CAAC,OAAO,OAAO,MAAM;AAAA,IAC3B,OAAO,CAAC,QAAQ,KAAK;AAAA,IACrB,SAAS,CAAC,UAAU,MAAM;AAAA,IAC1B,SAAS,CAAC,UAAU,MAAM;AAAA,EAC3B;AACD,QAAM,WAAW,CAAC,SAAS,WAAW,SAAS,EAAE,QAAQ,IAAI,MAAM;AACnE,MAAI,YAAY,UAAU,UAAU;AAClC,UAAM,QAAQ,SAAS;AACvB,YAAQA,QAAK;AAAA,MACX,KAAK;AACH,eAAO,QAAQ,aAAa,QAAQ,MAAM,IAAI,EAAE,CAAC,CAAC;AAAA,MACpD,KAAK;AACH,eAAO,QAAQ,cAAc,QAAQ,MAAM,IAAI,EAAE,CAAC,CAAC;AAAA,MACrD,KAAK;AACH,eAAO,QAAQ,UAAU,QAAQ,MAAM,IAAI,EAAE,CAAC,CAAC;AAAA,IACvD;AAAA,EACA;AAEE,QAAM,WAAW,OAAO,GAAGA,QAAO,EAAE,KAAKA,SAAQ,GAC/C,WAAW,KAAK,IAAIA,MAAK,GACzB,WAAW,aAAa,GACxB,WAAW,MAAM,IAAI,GACrB,UAAU,SAAS,WAAW,SAAS,CAAC,IAAI,SAAS,CAAC,KAAK,SAAS,CAAC,IAAI,WAAW,MAAM,IAAI,EAAE,CAAC,IAAI;AACvG,SAAO,WAAW,GAAG,QAAQ,IAAI,OAAO,SAAS,MAAM,QAAQ,IAAI,OAAO;AAC5E;AAEA,SAAS,gBAAgB,QAAQ,eAAe;AAC9C,MAAIb,KAAI;AACR,aAAW,SAAS,QAAQ;AAC1B,QAAI,MAAM,SAAS;AACjB,MAAAA,MAAK,MAAM;AAAA,IACjB,OAAW;AACL,MAAAA,MAAK,cAAc,MAAM,GAAG;AAAA,IAClC;AAAA,EACA;AACE,SAAOA;AACT;AACA,MAAM,yBAAyB;AAAA,EAC7B,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,MAAM;AACR;AAMA,MAAM,UAAU;AAAA,EACd,OAAO,OAAO,QAAQ,OAAO,IAAI;AAC/B,WAAO,IAAI,UAAU,QAAQ,IAAI;AAAA,EACrC;AAAA,EACE,OAAO,YAAY,KAAK;AAItB,QAAI,UAAU,MACZ,cAAc,IACd,YAAY;AACd,UAAM,SAAS,CAAE;AACjB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAM,IAAI,IAAI,OAAO,CAAC;AACtB,UAAI,MAAM,KAAK;AACb,YAAI,YAAY,SAAS,GAAG;AAC1B,iBAAO,KAAK;AAAA,YACV,SAAS,aAAa,QAAQ,KAAK,WAAW;AAAA,YAC9C,KAAK;AAAA,UACjB,CAAW;AAAA,QACX;AACQ,kBAAU;AACV,sBAAc;AACd,oBAAY,CAAC;AAAA,MACd,WAAU,WAAW;AACpB,uBAAe;AAAA,MACvB,WAAiB,MAAM,SAAS;AACxB,uBAAe;AAAA,MACvB,OAAa;AACL,YAAI,YAAY,SAAS,GAAG;AAC1B,iBAAO,KAAK;AAAA,YACV,SAAS,QAAQ,KAAK,WAAW;AAAA,YACjC,KAAK;AAAA,UACjB,CAAW;AAAA,QACX;AACQ,sBAAc;AACd,kBAAU;AAAA,MAClB;AAAA,IACA;AACI,QAAI,YAAY,SAAS,GAAG;AAC1B,aAAO,KAAK;AAAA,QACV,SAAS,aAAa,QAAQ,KAAK,WAAW;AAAA,QAC9C,KAAK;AAAA,MACb,CAAO;AAAA,IACP;AACI,WAAO;AAAA,EACX;AAAA,EACE,OAAO,uBAAuB,OAAO;AACnC,WAAO,uBAAuB,KAAK;AAAA,EACvC;AAAA,EACE,YAAY,QAAQ,YAAY;AAC9B,SAAK,OAAO;AACZ,SAAK,MAAM;AACX,SAAK,YAAY;AAAA,EACrB;AAAA,EACE,wBAAwB,IAAI,MAAM;AAChC,QAAI,KAAK,cAAc,MAAM;AAC3B,WAAK,YAAY,KAAK,IAAI,kBAAmB;AAAA,IACnD;AACI,UAAM,KAAK,KAAK,UAAU,YAAY,IAAI;AAAA,MACxC,GAAG,KAAK;AAAA,MACR,GAAG;AAAA,IACT,CAAK;AACD,WAAO,GAAG,OAAQ;AAAA,EACtB;AAAA,EACE,YAAY,IAAI,OAAO,IAAI;AACzB,WAAO,KAAK,IAAI,YAAY,IAAI;AAAA,MAC9B,GAAG,KAAK;AAAA,MACR,GAAG;AAAA,IACT,CAAK;AAAA,EACL;AAAA,EACE,eAAe,IAAI,MAAM;AACvB,WAAO,KAAK,YAAY,IAAI,IAAI,EAAE,OAAQ;AAAA,EAC9C;AAAA,EACE,oBAAoB,IAAI,MAAM;AAC5B,WAAO,KAAK,YAAY,IAAI,IAAI,EAAE,cAAe;AAAA,EACrD;AAAA,EACE,eAAe,UAAU,MAAM;AAC7B,UAAM,KAAK,KAAK,YAAY,SAAS,OAAO,IAAI;AAChD,WAAO,GAAG,IAAI,YAAY,SAAS,MAAM,SAAQ,GAAI,SAAS,IAAI,UAAU;AAAA,EAChF;AAAA,EACE,gBAAgB,IAAI,MAAM;AACxB,WAAO,KAAK,YAAY,IAAI,IAAI,EAAE,gBAAiB;AAAA,EACvD;AAAA,EACE,IAAI0C,IAAG,IAAI,GAAG;AAEZ,QAAI,KAAK,KAAK,aAAa;AACzB,aAAO,SAASA,IAAG,CAAC;AAAA,IAC1B;AACI,UAAM,OAAO;AAAA,MACX,GAAG,KAAK;AAAA,IACT;AACD,QAAI,IAAI,GAAG;AACT,WAAK,QAAQ;AAAA,IACnB;AACI,WAAO,KAAK,IAAI,gBAAgB,IAAI,EAAE,OAAOA,EAAC;AAAA,EAClD;AAAA,EACE,yBAAyB,IAAI,KAAK;AAChC,UAAM,eAAe,KAAK,IAAI,YAAa,MAAK,MAC9C,uBAAuB,KAAK,IAAI,kBAAkB,KAAK,IAAI,mBAAmB,WAC9E,SAAS,CAAC,MAAM,YAAY,KAAK,IAAI,QAAQ,IAAI,MAAM,OAAO,GAC9DmD,gBAAe,UAAQ;AACrB,UAAI,GAAG,iBAAiB,GAAG,WAAW,KAAK,KAAK,QAAQ;AACtD,eAAO;AAAA,MACjB;AACQ,aAAO,GAAG,UAAU,GAAG,KAAK,aAAa,GAAG,IAAI,KAAK,MAAM,IAAI;AAAA,IAChE,GACD,WAAW,MAAM,eAAe,oBAAoB,EAAE,IAAI,OAAO;AAAA,MAC/D,MAAM;AAAA,MACN,WAAW;AAAA,IACZ,GAAE,WAAW,GACd,QAAQ,CAAC,QAAQ,eAAe,eAAe,iBAAiB,IAAI,MAAM,IAAI,OAAO,aAAa;AAAA,MAChG,OAAO;AAAA,IACf,IAAU;AAAA,MACF,OAAO;AAAA,MACP,KAAK;AAAA,IACN,GAAE,OAAO,GACV,UAAU,CAAC,QAAQ,eAAe,eAAe,mBAAmB,IAAI,MAAM,IAAI,OAAO,aAAa;AAAA,MACpG,SAAS;AAAA,IACjB,IAAU;AAAA,MACF,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,IACN,GAAE,SAAS,GACZ,aAAa,WAAS;AACpB,YAAM,aAAa,UAAU,uBAAuB,KAAK;AACzD,UAAI,YAAY;AACd,eAAO,KAAK,wBAAwB,IAAI,UAAU;AAAA,MAC5D,OAAe;AACL,eAAO;AAAA,MACjB;AAAA,IACO,GACD,MAAM,YAAU,eAAe,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,MACjE,KAAK;AAAA,IACN,GAAE,KAAK,GACR,gBAAgB,WAAS;AAEvB,cAAQ,OAAK;AAAA,QAEX,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,WAAW;AAAA,QAChC,KAAK;AAAA,QAEL,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,aAAa,CAAC;AAAA,QAEnC,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,MAAM;AAAA,QAC3B,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,QAAQ,CAAC;AAAA,QAE9B,KAAK;AACH,iBAAO,KAAK,IAAI,KAAK,MAAM,GAAG,cAAc,EAAE,GAAG,CAAC;AAAA,QACpD,KAAK;AACH,iBAAO,KAAK,IAAI,KAAK,MAAM,GAAG,cAAc,GAAG,CAAC;AAAA,QAElD,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,MAAM;AAAA,QAC3B,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,QAAQ,CAAC;AAAA,QAE9B,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,OAAO,OAAO,IAAI,KAAK,GAAG,OAAO,EAAE;AAAA,QACxD,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,OAAO,OAAO,IAAI,KAAK,GAAG,OAAO,IAAI,CAAC;AAAA,QAC3D,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,IAAI;AAAA,QACzB,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,MAAM,CAAC;AAAA,QAE5B,KAAK;AAEH,iBAAOA,cAAa;AAAA,YAClB,QAAQ;AAAA,YACR,QAAQ,KAAK,KAAK;AAAA,UAChC,CAAa;AAAA,QACH,KAAK;AAEH,iBAAOA,cAAa;AAAA,YAClB,QAAQ;AAAA,YACR,QAAQ,KAAK,KAAK;AAAA,UAChC,CAAa;AAAA,QACH,KAAK;AAEH,iBAAOA,cAAa;AAAA,YAClB,QAAQ;AAAA,YACR,QAAQ,KAAK,KAAK;AAAA,UAChC,CAAa;AAAA,QACH,KAAK;AAEH,iBAAO,GAAG,KAAK,WAAW,GAAG,IAAI;AAAA,YAC/B,QAAQ;AAAA,YACR,QAAQ,KAAK,IAAI;AAAA,UAC/B,CAAa;AAAA,QACH,KAAK;AAEH,iBAAO,GAAG,KAAK,WAAW,GAAG,IAAI;AAAA,YAC/B,QAAQ;AAAA,YACR,QAAQ,KAAK,IAAI;AAAA,UAC/B,CAAa;AAAA,QAEH,KAAK;AAEH,iBAAO,GAAG;AAAA,QAEZ,KAAK;AACH,iBAAO,SAAU;AAAA,QAEnB,KAAK;AACH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,KAAK;AAAA,UACN,GAAE,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG;AAAA,QAC7B,KAAK;AACH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,KAAK;AAAA,UACnB,GAAe,KAAK,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC;AAAA,QAEhC,KAAK;AAEH,iBAAO,KAAK,IAAI,GAAG,OAAO;AAAA,QAC5B,KAAK;AAEH,iBAAO,QAAQ,SAAS,IAAI;AAAA,QAC9B,KAAK;AAEH,iBAAO,QAAQ,QAAQ,IAAI;AAAA,QAC7B,KAAK;AAEH,iBAAO,QAAQ,UAAU,IAAI;AAAA,QAE/B,KAAK;AAEH,iBAAO,KAAK,IAAI,GAAG,OAAO;AAAA,QAC5B,KAAK;AAEH,iBAAO,QAAQ,SAAS,KAAK;AAAA,QAC/B,KAAK;AAEH,iBAAO,QAAQ,QAAQ,KAAK;AAAA,QAC9B,KAAK;AAEH,iBAAO,QAAQ,UAAU,KAAK;AAAA,QAEhC,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,OAAO;AAAA,YACP,KAAK;AAAA,UACN,GAAE,OAAO,IAAI,KAAK,IAAI,GAAG,KAAK;AAAA,QACjC,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,OAAO;AAAA,YACP,KAAK;AAAA,UACnB,GAAe,OAAO,IAAI,KAAK,IAAI,GAAG,OAAO,CAAC;AAAA,QACpC,KAAK;AAEH,iBAAO,MAAM,SAAS,IAAI;AAAA,QAC5B,KAAK;AAEH,iBAAO,MAAM,QAAQ,IAAI;AAAA,QAC3B,KAAK;AAEH,iBAAO,MAAM,UAAU,IAAI;AAAA,QAE7B,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,OAAO;AAAA,UACR,GAAE,OAAO,IAAI,KAAK,IAAI,GAAG,KAAK;AAAA,QACjC,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,OAAO;AAAA,UACrB,GAAe,OAAO,IAAI,KAAK,IAAI,GAAG,OAAO,CAAC;AAAA,QACpC,KAAK;AAEH,iBAAO,MAAM,SAAS,KAAK;AAAA,QAC7B,KAAK;AAEH,iBAAO,MAAM,QAAQ,KAAK;AAAA,QAC5B,KAAK;AAEH,iBAAO,MAAM,UAAU,KAAK;AAAA,QAE9B,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,MAAM;AAAA,UACP,GAAE,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI;AAAA,QAC/B,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,MAAM;AAAA,UACP,GAAE,MAAM,IAAI,KAAK,IAAI,GAAG,KAAK,WAAW,MAAM,EAAE,GAAG,CAAC;AAAA,QACvD,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,MAAM;AAAA,UACpB,GAAe,MAAM,IAAI,KAAK,IAAI,GAAG,MAAM,CAAC;AAAA,QAClC,KAAK;AAEH,iBAAO,uBAAuB,OAAO;AAAA,YACnC,MAAM;AAAA,UACpB,GAAe,MAAM,IAAI,KAAK,IAAI,GAAG,MAAM,CAAC;AAAA,QAElC,KAAK;AAEH,iBAAO,IAAI,OAAO;AAAA,QACpB,KAAK;AAEH,iBAAO,IAAI,MAAM;AAAA,QACnB,KAAK;AACH,iBAAO,IAAI,QAAQ;AAAA,QACrB,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,SAAS,SAAQ,EAAG,MAAM,EAAE,GAAG,CAAC;AAAA,QACrD,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,UAAU,CAAC;AAAA,QAChC,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,UAAU;AAAA,QAC/B,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,YAAY,CAAC;AAAA,QAClC,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,eAAe;AAAA,QACpC,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,iBAAiB,CAAC;AAAA,QACvC,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,cAAc,SAAQ,EAAG,MAAM,EAAE,GAAG,CAAC;AAAA,QAC1D,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,eAAe,CAAC;AAAA,QACrC,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,OAAO;AAAA,QAC5B,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,SAAS,CAAC;AAAA,QAC/B,KAAK;AAEH,iBAAO,KAAK,IAAI,GAAG,OAAO;AAAA,QAC5B,KAAK;AAEH,iBAAO,KAAK,IAAI,GAAG,SAAS,CAAC;AAAA,QAC/B,KAAK;AACH,iBAAO,KAAK,IAAI,KAAK,MAAM,GAAG,KAAK,GAAI,CAAC;AAAA,QAC1C,KAAK;AACH,iBAAO,KAAK,IAAI,GAAG,EAAE;AAAA,QACvB;AACE,iBAAO,WAAW,KAAK;AAAA,MACnC;AAAA,IACO;AACH,WAAO,gBAAgB,UAAU,YAAY,GAAG,GAAG,aAAa;AAAA,EACpE;AAAA,EACE,yBAAyB,KAAK,KAAK;AACjC,UAAM,eAAe,WAAS;AAC1B,cAAQ,MAAM,CAAC,GAAC;AAAA,QACd,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACnB;AAAA,IACO,GACD,gBAAgB,YAAU,WAAS;AACjC,YAAM,SAAS,aAAa,KAAK;AACjC,UAAI,QAAQ;AACV,eAAO,KAAK,IAAI,OAAO,IAAI,MAAM,GAAG,MAAM,MAAM;AAAA,MAC1D,OAAe;AACL,eAAO;AAAA,MACjB;AAAA,IACO,GACD,SAAS,UAAU,YAAY,GAAG,GAClC,aAAa,OAAO,OAAO,CAAC,OAAO;AAAA,MACjC;AAAA,MACA;AAAA,IACR,MAAY,UAAU,QAAQ,MAAM,OAAO,GAAG,GAAG,EAAE,GAC7C,YAAY,IAAI,QAAQ,GAAG,WAAW,IAAI,YAAY,EAAE,OAAO,OAAK,CAAC,CAAC;AACxE,WAAO,gBAAgB,QAAQ,cAAc,SAAS,CAAC;AAAA,EAC3D;AACA;AAYA,MAAM,YAAY;AAClB,SAAS,kBAAkB,SAAS;AAClC,QAAM,OAAO,QAAQ,OAAO,CAAC,GAAG,MAAM,IAAI,EAAE,QAAQ,EAAE;AACtD,SAAO,OAAO,IAAI,IAAI,GAAG;AAC3B;AACA,SAAS,qBAAqB,YAAY;AACxC,SAAO,OAAK,WAAW,OAAO,CAAC,CAAC,YAAY,YAAY,MAAM,GAAG,OAAO;AACtE,UAAM,CAAC,KAAK,MAAM,IAAI,IAAI,GAAG,GAAG,MAAM;AACtC,WAAO,CAAC;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,IACT,GAAO,QAAQ,YAAY,IAAI;AAAA,EAC/B,GAAK,CAAC,CAAE,GAAE,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC;AAC9B;AACA,SAAS,MAAM7F,OAAM,UAAU;AAC7B,MAAIA,MAAK,MAAM;AACb,WAAO,CAAC,MAAM,IAAI;AAAA,EACtB;AACE,aAAW,CAAC,OAAO,SAAS,KAAK,UAAU;AACzC,UAAM,IAAI,MAAM,KAAKA,EAAC;AACtB,QAAI,GAAG;AACL,aAAO,UAAU,CAAC;AAAA,IACxB;AAAA,EACA;AACE,SAAO,CAAC,MAAM,IAAI;AACpB;AACA,SAAS,eAAe4F,OAAM;AAC5B,SAAO,CAACE,QAAO,WAAW;AACxB,UAAM,MAAM,CAAE;AACd,QAAI;AACJ,SAAK,IAAI,GAAG,IAAIF,MAAK,QAAQ,KAAK;AAChC,UAAIA,MAAK,CAAC,CAAC,IAAI,aAAaE,OAAM,SAAS,CAAC,CAAC;AAAA,IACnD;AACI,WAAO,CAAC,KAAK,MAAM,SAAS,CAAC;AAAA,EAC9B;AACH;AAGA,MAAM,cAAc;AACpB,MAAM,kBAAkB,MAAM,YAAY,MAAM,WAAW,UAAU,MAAM;AAC3E,MAAM,mBAAmB;AACzB,MAAM,eAAe,OAAO,GAAG,iBAAiB,MAAM,GAAG,eAAe,EAAE;AAC1E,MAAM,wBAAwB,OAAO,OAAO,aAAa,MAAM,IAAI;AACnE,MAAM,cAAc;AACpB,MAAM,eAAe;AACrB,MAAM,kBAAkB;AACxB,MAAM,qBAAqB,YAAY,YAAY,cAAc,SAAS;AAC1E,MAAM,wBAAwB,YAAY,QAAQ,SAAS;AAC3D,MAAM,cAAc;AACpB,MAAM,eAAe,OAAO,GAAG,iBAAiB,MAAM,QAAQ,YAAY,MAAM,KAAK,UAAU,MAAM,KAAK;AAC1G,MAAM,wBAAwB,OAAO,OAAO,aAAa,MAAM,IAAI;AACnE,SAAS,IAAIA,QAAO,KAAK,UAAU;AACjC,QAAM,IAAIA,OAAM,GAAG;AACnB,SAAO,YAAY,CAAC,IAAI,WAAW,aAAa,CAAC;AACnD;AACA,SAAS,cAAcA,QAAO,QAAQ;AACpC,QAAM,OAAO;AAAA,IACX,MAAM,IAAIA,QAAO,MAAM;AAAA,IACvB,OAAO,IAAIA,QAAO,SAAS,GAAG,CAAC;AAAA,IAC/B,KAAK,IAAIA,QAAO,SAAS,GAAG,CAAC;AAAA,EAC9B;AACD,SAAO,CAAC,MAAM,MAAM,SAAS,CAAC;AAChC;AACA,SAAS,eAAeA,QAAO,QAAQ;AACrC,QAAM,OAAO;AAAA,IACX,OAAO,IAAIA,QAAO,QAAQ,CAAC;AAAA,IAC3B,SAAS,IAAIA,QAAO,SAAS,GAAG,CAAC;AAAA,IACjC,SAAS,IAAIA,QAAO,SAAS,GAAG,CAAC;AAAA,IACjC,cAAc,YAAYA,OAAM,SAAS,CAAC,CAAC;AAAA,EAC5C;AACD,SAAO,CAAC,MAAM,MAAM,SAAS,CAAC;AAChC;AACA,SAAS,iBAAiBA,QAAO,QAAQ;AACvC,QAAM,QAAQ,CAACA,OAAM,MAAM,KAAK,CAACA,OAAM,SAAS,CAAC,GAC/C,aAAa,aAAaA,OAAM,SAAS,CAAC,GAAGA,OAAM,SAAS,CAAC,CAAC,GAC9D,OAAO,QAAQ,OAAO,gBAAgB,SAAS,UAAU;AAC3D,SAAO,CAAC,CAAE,GAAE,MAAM,SAAS,CAAC;AAC9B;AACA,SAAS,gBAAgBA,QAAO,QAAQ;AACtC,QAAM,OAAOA,OAAM,MAAM,IAAI,SAAS,OAAOA,OAAM,MAAM,CAAC,IAAI;AAC9D,SAAO,CAAC,CAAE,GAAE,MAAM,SAAS,CAAC;AAC9B;AAIA,MAAM,cAAc,OAAO,MAAM,iBAAiB,MAAM,GAAG;AAI3D,MAAM,cAAc;AACpB,SAAS,mBAAmBA,QAAO;AACjC,QAAM,CAAC9F,IAAG,SAAS,UAAU,SAAS,QAAQ,SAAS,WAAW,WAAW,eAAe,IAAI8F;AAChG,QAAM,oBAAoB9F,GAAE,CAAC,MAAM;AACnC,QAAM,kBAAkB,aAAa,UAAU,CAAC,MAAM;AACtD,QAAM,cAAc,CAAC,KAAK,QAAQ,UAAU,QAAQ,WAAc,SAAS,OAAO,qBAAqB,CAAC,MAAM;AAC9G,SAAO,CAAC;AAAA,IACN,OAAO,YAAY,cAAc,OAAO,CAAC;AAAA,IACzC,QAAQ,YAAY,cAAc,QAAQ,CAAC;AAAA,IAC3C,OAAO,YAAY,cAAc,OAAO,CAAC;AAAA,IACzC,MAAM,YAAY,cAAc,MAAM,CAAC;AAAA,IACvC,OAAO,YAAY,cAAc,OAAO,CAAC;AAAA,IACzC,SAAS,YAAY,cAAc,SAAS,CAAC;AAAA,IAC7C,SAAS,YAAY,cAAc,SAAS,GAAG,cAAc,IAAI;AAAA,IACjE,cAAc,YAAY,YAAY,eAAe,GAAG,eAAe;AAAA,EAC3E,CAAG;AACH;AAKA,MAAM,aAAa;AAAA,EACjB,KAAK;AAAA,EACL,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AAAA,EACV,KAAK,KAAK;AACZ;AACA,SAAS,YAAY,YAAY,SAAS,UAAU,QAAQ,SAAS,WAAW,WAAW;AACzF,QAAM,SAAS;AAAA,IACb,MAAM,QAAQ,WAAW,IAAI,eAAe,aAAa,OAAO,CAAC,IAAI,aAAa,OAAO;AAAA,IACzF,OAAO,YAAY,QAAQ,QAAQ,IAAI;AAAA,IACvC,KAAK,aAAa,MAAM;AAAA,IACxB,MAAM,aAAa,OAAO;AAAA,IAC1B,QAAQ,aAAa,SAAS;AAAA,EAC/B;AACD,MAAI,UAAW,QAAO,SAAS,aAAa,SAAS;AACrD,MAAI,YAAY;AACd,WAAO,UAAU,WAAW,SAAS,IAAI,aAAa,QAAQ,UAAU,IAAI,IAAI,cAAc,QAAQ,UAAU,IAAI;AAAA,EACxH;AACE,SAAO;AACT;AAGA,MAAM,UAAU;AAChB,SAAS,eAAe8F,QAAO;AAC7B,QAAM,CAAG,EAAA,YAAY,QAAQ,UAAU,SAAS,SAAS,WAAW,WAAW,WAAW,WAAW,YAAY,YAAY,IAAIA,QAC/H,SAAS,YAAY,YAAY,SAAS,UAAU,QAAQ,SAAS,WAAW,SAAS;AAC3F,MAAIJ;AACJ,MAAI,WAAW;AACb,IAAAA,UAAS,WAAW,SAAS;AAAA,EAC9B,WAAU,WAAW;AACpB,IAAAA,UAAS;AAAA,EACb,OAAS;AACL,IAAAA,UAAS,aAAa,YAAY,YAAY;AAAA,EAClD;AACE,SAAO,CAAC,QAAQ,IAAI,gBAAgBA,OAAM,CAAC;AAC7C;AACA,SAAS,kBAAkB1F,IAAG;AAE5B,SAAOA,GAAE,QAAQ,sBAAsB,GAAG,EAAE,QAAQ,YAAY,GAAG,EAAE,KAAM;AAC7E;AAIA,MAAM,UAAU,8HACd,SAAS,0JACT,QAAQ;AACV,SAAS,oBAAoB8F,QAAO;AAClC,QAAM,CAAG,EAAA,YAAY,QAAQ,UAAU,SAAS,SAAS,WAAW,SAAS,IAAIA,QAC/E,SAAS,YAAY,YAAY,SAAS,UAAU,QAAQ,SAAS,WAAW,SAAS;AAC3F,SAAO,CAAC,QAAQ,gBAAgB,WAAW;AAC7C;AACA,SAAS,aAAaA,QAAO;AAC3B,QAAM,CAAG,EAAA,YAAY,UAAU,QAAQ,SAAS,WAAW,WAAW,OAAO,IAAIA,QAC/E,SAAS,YAAY,YAAY,SAAS,UAAU,QAAQ,SAAS,WAAW,SAAS;AAC3F,SAAO,CAAC,QAAQ,gBAAgB,WAAW;AAC7C;AACA,MAAM,+BAA+B,eAAe,aAAa,qBAAqB;AACtF,MAAM,gCAAgC,eAAe,cAAc,qBAAqB;AACxF,MAAM,mCAAmC,eAAe,iBAAiB,qBAAqB;AAC9F,MAAM,uBAAuB,eAAe,YAAY;AACxD,MAAM,6BAA6B,kBAAkB,eAAe,gBAAgB,kBAAkB,eAAe;AACrH,MAAM,8BAA8B,kBAAkB,oBAAoB,gBAAgB,kBAAkB,eAAe;AAC3H,MAAM,+BAA+B,kBAAkB,uBAAuB,gBAAgB,kBAAkB,eAAe;AAC/H,MAAM,0BAA0B,kBAAkB,gBAAgB,kBAAkB,eAAe;AAMnG,SAAS,aAAa9F,IAAG;AACvB,SAAO,MAAMA,IAAG,CAAC,8BAA8B,0BAA0B,GAAG,CAAC,+BAA+B,2BAA2B,GAAG,CAAC,kCAAkC,4BAA4B,GAAG,CAAC,sBAAsB,uBAAuB,CAAC;AAC7P;AACA,SAAS,iBAAiBA,IAAG;AAC3B,SAAO,MAAM,kBAAkBA,EAAC,GAAG,CAAC,SAAS,cAAc,CAAC;AAC9D;AACA,SAAS,cAAcA,IAAG;AACxB,SAAO,MAAMA,IAAG,CAAC,SAAS,mBAAmB,GAAG,CAAC,QAAQ,mBAAmB,GAAG,CAAC,OAAO,YAAY,CAAC;AACtG;AACA,SAAS,iBAAiBA,IAAG;AAC3B,SAAO,MAAMA,IAAG,CAAC,aAAa,kBAAkB,CAAC;AACnD;AACA,MAAM,qBAAqB,kBAAkB,cAAc;AAC3D,SAAS,iBAAiBA,IAAG;AAC3B,SAAO,MAAMA,IAAG,CAAC,aAAa,kBAAkB,CAAC;AACnD;AACA,MAAM,+BAA+B,eAAe,aAAa,qBAAqB;AACtF,MAAM,uBAAuB,eAAe,YAAY;AACxD,MAAM,kCAAkC,kBAAkB,gBAAgB,kBAAkB,eAAe;AAC3G,SAAS,SAASA,IAAG;AACnB,SAAO,MAAMA,IAAG,CAAC,8BAA8B,0BAA0B,GAAG,CAAC,sBAAsB,+BAA+B,CAAC;AACrI;AAEA,MAAM,YAAY;AAGlB,MAAM,iBAAiB;AAAA,EACnB,OAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO,IAAI;AAAA,IACX,SAAS,IAAI,KAAK;AAAA,IAClB,SAAS,IAAI,KAAK,KAAK;AAAA,IACvB,cAAc,IAAI,KAAK,KAAK,KAAK;AAAA,EAClC;AAAA,EACD,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,SAAS,KAAK;AAAA,IACd,SAAS,KAAK,KAAK;AAAA,IACnB,cAAc,KAAK,KAAK,KAAK;AAAA,EAC9B;AAAA,EACD,OAAO;AAAA,IACL,SAAS;AAAA,IACT,SAAS,KAAK;AAAA,IACd,cAAc,KAAK,KAAK;AAAA,EACzB;AAAA,EACD,SAAS;AAAA,IACP,SAAS;AAAA,IACT,cAAc,KAAK;AAAA,EACpB;AAAA,EACD,SAAS;AAAA,IACP,cAAc;AAAA,EACpB;AACG,GACD,eAAe;AAAA,EACb,OAAO;AAAA,IACL,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO,MAAM;AAAA,IACb,SAAS,MAAM,KAAK;AAAA,IACpB,SAAS,MAAM,KAAK,KAAK;AAAA,IACzB,cAAc,MAAM,KAAK,KAAK,KAAK;AAAA,EACpC;AAAA,EACD,UAAU;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO,KAAK;AAAA,IACZ,SAAS,KAAK,KAAK;AAAA,IACnB,SAAS,KAAK,KAAK,KAAK;AAAA,IACxB,cAAc,KAAK,KAAK,KAAK,KAAK;AAAA,EACnC;AAAA,EACD,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO,KAAK;AAAA,IACZ,SAAS,KAAK,KAAK;AAAA,IACnB,SAAS,KAAK,KAAK,KAAK;AAAA,IACxB,cAAc,KAAK,KAAK,KAAK,KAAK;AAAA,EACnC;AAAA,EACD,GAAG;AACJ,GACD,qBAAqB,SAAW,KAChC,sBAAsB,SAAW,MACjC,iBAAiB;AAAA,EACf,OAAO;AAAA,IACL,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO,qBAAqB;AAAA,IAC5B,MAAM;AAAA,IACN,OAAO,qBAAqB;AAAA,IAC5B,SAAS,qBAAqB,KAAK;AAAA,IACnC,SAAS,qBAAqB,KAAK,KAAK;AAAA,IACxC,cAAc,qBAAqB,KAAK,KAAK,KAAK;AAAA,EACnD;AAAA,EACD,UAAU;AAAA,IACR,QAAQ;AAAA,IACR,OAAO,qBAAqB;AAAA,IAC5B,MAAM,qBAAqB;AAAA,IAC3B,OAAO,qBAAqB,KAAK;AAAA,IACjC,SAAS,qBAAqB,KAAK,KAAK;AAAA,IACxC,SAAS,qBAAqB,KAAK,KAAK,KAAK;AAAA,IAC7C,cAAc,qBAAqB,KAAK,KAAK,KAAK,MAAO;AAAA,EAC1D;AAAA,EACD,QAAQ;AAAA,IACN,OAAO,sBAAsB;AAAA,IAC7B,MAAM;AAAA,IACN,OAAO,sBAAsB;AAAA,IAC7B,SAAS,sBAAsB,KAAK;AAAA,IACpC,SAAS,sBAAsB,KAAK,KAAK;AAAA,IACzC,cAAc,sBAAsB,KAAK,KAAK,KAAK;AAAA,EACpD;AAAA,EACD,GAAG;AACJ;AAGH,MAAM,iBAAiB,CAAC,SAAS,YAAY,UAAU,SAAS,QAAQ,SAAS,WAAW,WAAW,cAAc;AACrH,MAAM,eAAe,eAAe,MAAM,CAAC,EAAE,QAAS;AAGtD,SAAS,QAAQ,KAAK,MAAM,QAAQ,OAAO;AAEzC,QAAM,OAAO;AAAA,IACX,QAAQ,QAAQ,KAAK,SAAS;AAAA,MAC5B,GAAG,IAAI;AAAA,MACP,GAAI,KAAK,UAAU,CAAE;AAAA,IACtB;AAAA,IACD,KAAK,IAAI,IAAI,MAAM,KAAK,GAAG;AAAA,IAC3B,oBAAoB,KAAK,sBAAsB,IAAI;AAAA,IACnD,QAAQ,KAAK,UAAU,IAAI;AAAA,EAC5B;AACD,SAAO,IAAI,SAAS,IAAI;AAC1B;AACA,SAAS,iBAAiB,QAAQ,MAAM;AACtC,MAAI;AACJ,MAAI,OAAO,qBAAqB,KAAK,iBAAiB,OAAO,qBAAqB;AAClF,aAAW,QAAQ,aAAa,MAAM,CAAC,GAAG;AACxC,QAAI,KAAK,IAAI,GAAG;AACd,aAAO,KAAK,IAAI,IAAI,OAAO,IAAI,EAAE,cAAc;AAAA,IACrD;AAAA,EACA;AACE,SAAO;AACT;AAGA,SAAS,gBAAgB,QAAQ,MAAM;AAGrC,QAAM,SAAS,iBAAiB,QAAQ,IAAI,IAAI,IAAI,KAAK;AACzD,iBAAe,YAAY,CAAC,UAAU,YAAY;AAChD,QAAI,CAAC,YAAY,KAAK,OAAO,CAAC,GAAG;AAC/B,UAAI,UAAU;AACZ,cAAM,cAAc,KAAK,QAAQ,IAAI;AACrC,cAAM,OAAO,OAAO,OAAO,EAAE,QAAQ;AAiBrC,cAAM,SAAS,KAAK,MAAM,cAAc,IAAI;AAC5C,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,QAAQ,KAAK,SAAS,OAAO;AAAA,MAC1C;AACM,aAAO;AAAA,IACb,OAAW;AACL,aAAO;AAAA,IACb;AAAA,EACG,GAAE,IAAI;AAIP,iBAAe,OAAO,CAAC,UAAU,YAAY;AAC3C,QAAI,CAAC,YAAY,KAAK,OAAO,CAAC,GAAG;AAC/B,UAAI,UAAU;AACZ,cAAM,WAAW,KAAK,QAAQ,IAAI;AAClC,aAAK,QAAQ,KAAK;AAClB,aAAK,OAAO,KAAK,WAAW,OAAO,QAAQ,EAAE,OAAO;AAAA,MAC5D;AACM,aAAO;AAAA,IACb,OAAW;AACL,aAAO;AAAA,IACb;AAAA,EACG,GAAE,IAAI;AACT;AAGA,SAAS,aAAa,MAAM;AAC1B,QAAM,UAAU,CAAE;AAClB,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,IAAI,GAAG;AAC/C,QAAI,UAAU,GAAG;AACf,cAAQ,GAAG,IAAI;AAAA,IACrB;AAAA,EACA;AACE,SAAO;AACT;AAeA,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,EAIb,YAAY,QAAQ;AAClB,UAAM,WAAW,OAAO,uBAAuB,cAAc;AAC7D,QAAI,SAAS,WAAW,iBAAiB;AACzC,QAAI,OAAO,QAAQ;AACjB,eAAS,OAAO;AAAA,IACtB;AAKI,SAAK,SAAS,OAAO;AAIrB,SAAK,MAAM,OAAO,OAAO,OAAO,OAAQ;AAIxC,SAAK,qBAAqB,WAAW,aAAa;AAIlD,SAAK,UAAU,OAAO,WAAW;AAIjC,SAAK,SAAS;AAId,SAAK,kBAAkB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,OAAO,WAAWa,QAAO,MAAM;AAC7B,WAAO,SAAS,WAAW;AAAA,MACzB,cAAcA;AAAA,IACf,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBE,OAAO,WAAW,KAAK,OAAO,IAAI;AAChC,QAAI,OAAO,QAAQ,OAAO,QAAQ,UAAU;AAC1C,YAAM,IAAI,qBAAqB,+DAA+D,QAAQ,OAAO,SAAS,OAAO,GAAG,EAAE;AAAA,IACxI;AACI,WAAO,IAAI,SAAS;AAAA,MAClB,QAAQ,gBAAgB,KAAK,SAAS,aAAa;AAAA,MACnD,KAAK,OAAO,WAAW,IAAI;AAAA,MAC3B,oBAAoB,KAAK;AAAA,MACzB,QAAQ,KAAK;AAAA,IACnB,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,OAAO,iBAAiB,cAAc;AACpC,QAAI,SAAS,YAAY,GAAG;AAC1B,aAAO,SAAS,WAAW,YAAY;AAAA,IACxC,WAAU,SAAS,WAAW,YAAY,GAAG;AAC5C,aAAO;AAAA,IACb,WAAe,OAAO,iBAAiB,UAAU;AAC3C,aAAO,SAAS,WAAW,YAAY;AAAA,IAC7C,OAAW;AACL,YAAM,IAAI,qBAAqB,6BAA6B,YAAY,YAAY,OAAO,YAAY,EAAE;AAAA,IAC/G;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,OAAO,QAAQ,MAAM,MAAM;AACzB,UAAM,CAAC,MAAM,IAAI,iBAAiB,IAAI;AACtC,QAAI,QAAQ;AACV,aAAO,SAAS,WAAW,QAAQ,IAAI;AAAA,IAC7C,OAAW;AACL,aAAO,SAAS,QAAQ,cAAc,cAAc,IAAI,+BAA+B;AAAA,IAC7F;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBE,OAAO,YAAY,MAAM,MAAM;AAC7B,UAAM,CAAC,MAAM,IAAI,iBAAiB,IAAI;AACtC,QAAI,QAAQ;AACV,aAAO,SAAS,WAAW,QAAQ,IAAI;AAAA,IAC7C,OAAW;AACL,aAAO,SAAS,QAAQ,cAAc,cAAc,IAAI,+BAA+B;AAAA,IAC7F;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,QAAQ,QAAQ,cAAc,MAAM;AACzC,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,qBAAqB,kDAAkD;AAAA,IACvF;AACI,UAAM,UAAU,kBAAkB,UAAU,SAAS,IAAI,QAAQ,QAAQ,WAAW;AACpF,QAAI,SAAS,gBAAgB;AAC3B,YAAM,IAAI,qBAAqB,OAAO;AAAA,IAC5C,OAAW;AACL,aAAO,IAAI,SAAS;AAAA,QAClB;AAAA,MACR,CAAO;AAAA,IACP;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAKE,OAAO,cAAc,MAAM;AACzB,UAAM,aAAa;AAAA,MACjB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,aAAa;AAAA,MACb,cAAc;AAAA,IACf,EAAC,OAAO,KAAK,YAAW,IAAK,IAAI;AAClC,QAAI,CAAC,WAAY,OAAM,IAAI,iBAAiB,IAAI;AAChD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,WAAW,GAAG;AACnB,WAAO,KAAK,EAAE,mBAAmB;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,IAAI,SAAS;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,kBAAkB;AACpB,WAAO,KAAK,UAAU,KAAK,IAAI,kBAAkB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBE,SAAS,KAAK,OAAO,IAAI;AAEvB,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH,OAAO,KAAK,UAAU,SAAS,KAAK,UAAU;AAAA,IAC/C;AACD,WAAO,KAAK,UAAU,UAAU,OAAO,KAAK,KAAK,OAAO,EAAE,yBAAyB,MAAM,GAAG,IAAI;AAAA,EACpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,QAAQ,OAAO,IAAI;AACjB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAMJ,KAAI,eAAe,IAAI,UAAQ;AACnC,YAAM,MAAM,KAAK,OAAO,IAAI;AAC5B,UAAI,YAAY,GAAG,GAAG;AACpB,eAAO;AAAA,MACf;AACM,aAAO,KAAK,IAAI,gBAAgB;AAAA,QAC9B,OAAO;AAAA,QACP,aAAa;AAAA,QACb,GAAG;AAAA,QACH,MAAM,KAAK,MAAM,GAAG,EAAE;AAAA,MAC9B,CAAO,EAAE,OAAO,GAAG;AAAA,IACnB,CAAK,EAAE,OAAO,CAAAiC,OAAKA,EAAC;AAChB,WAAO,KAAK,IAAI,cAAc;AAAA,MAC5B,MAAM;AAAA,MACN,OAAO,KAAK,aAAa;AAAA,MACzB,GAAG;AAAA,IACT,CAAK,EAAE,OAAOjC,EAAC;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW;AACT,QAAI,CAAC,KAAK,QAAS,QAAO,CAAE;AAC5B,WAAO;AAAA,MACL,GAAG,KAAK;AAAA,IACT;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,QAAQ;AAEN,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,QAAIT,KAAI;AACR,QAAI,KAAK,UAAU,EAAG,CAAAA,MAAK,KAAK,QAAQ;AACxC,QAAI,KAAK,WAAW,KAAK,KAAK,aAAa,EAAG,CAAAA,MAAK,KAAK,SAAS,KAAK,WAAW,IAAI;AACrF,QAAI,KAAK,UAAU,EAAG,CAAAA,MAAK,KAAK,QAAQ;AACxC,QAAI,KAAK,SAAS,EAAG,CAAAA,MAAK,KAAK,OAAO;AACtC,QAAI,KAAK,UAAU,KAAK,KAAK,YAAY,KAAK,KAAK,YAAY,KAAK,KAAK,iBAAiB,EAAG,CAAAA,MAAK;AAClG,QAAI,KAAK,UAAU,EAAG,CAAAA,MAAK,KAAK,QAAQ;AACxC,QAAI,KAAK,YAAY,EAAG,CAAAA,MAAK,KAAK,UAAU;AAC5C,QAAI,KAAK,YAAY,KAAK,KAAK,iBAAiB;AAG9C,MAAAA,MAAK,QAAQ,KAAK,UAAU,KAAK,eAAe,KAAM,CAAC,IAAI;AAC7D,QAAIA,OAAM,IAAK,CAAAA,MAAK;AACpB,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBE,UAAU,OAAO,IAAI;AACnB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,SAAS,KAAK,SAAU;AAC9B,QAAI,SAAS,KAAK,UAAU,MAAU,QAAO;AAC7C,WAAO;AAAA,MACL,sBAAsB;AAAA,MACtB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,eAAe;AAAA,IAChB;AACD,UAAM,WAAWyF,WAAS,WAAW,QAAQ;AAAA,MAC3C,MAAM;AAAA,IACZ,CAAK;AACD,WAAO,SAAS,UAAU,IAAI;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,SAAS;AACP,WAAO,KAAK,MAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW;AACT,WAAO,KAAK,MAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,CAAC,OAAO,IAAI,4BAA4B,CAAC,IAAI;AAC3C,QAAI,KAAK,SAAS;AAChB,aAAO,sBAAsB,KAAK,UAAU,KAAK,MAAM,CAAC;AAAA,IAC9D,OAAW;AACL,aAAO,+BAA+B,KAAK,aAAa;AAAA,IAC9D;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW;AACT,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,iBAAiB,KAAK,QAAQ,KAAK,MAAM;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,UAAU;AACR,WAAO,KAAK,SAAU;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,KAAK,UAAU;AACb,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,MAAM,SAAS,iBAAiB,QAAQ,GAC5C,SAAS,CAAE;AACb,eAAW,KAAK,gBAAgB;AAC9B,UAAI,eAAe,IAAI,QAAQ,CAAC,KAAK,eAAe,KAAK,QAAQ,CAAC,GAAG;AACnE,eAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;AAAA,MAC3C;AAAA,IACA;AACI,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACT,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,MAAM,UAAU;AACd,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,MAAM,SAAS,iBAAiB,QAAQ;AAC9C,WAAO,KAAK,KAAK,IAAI,OAAM,CAAE;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,SAAS,IAAI;AACX,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,SAAS,CAAE;AACjB,eAAW,KAAK,OAAO,KAAK,KAAK,MAAM,GAAG;AACxC,aAAO,CAAC,IAAI,SAAS,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;AAAA,IAChD;AACI,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACT,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,IAAI,MAAM;AACR,WAAO,KAAK,SAAS,cAAc,IAAI,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,IAAI,QAAQ;AACV,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,QAAQ;AAAA,MACZ,GAAG,KAAK;AAAA,MACR,GAAG,gBAAgB,QAAQ,SAAS,aAAa;AAAA,IAClD;AACD,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACd,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAG,IAAI;AACN,UAAM,MAAM,KAAK,IAAI,MAAM;AAAA,MACzB;AAAA,MACA;AAAA,IACN,CAAK;AACD,UAAM,OAAO;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACD,WAAO,QAAQ,MAAM,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,GAAG,MAAM;AACP,WAAO,KAAK,UAAU,KAAK,QAAQ,IAAI,EAAE,IAAI,IAAI,IAAI;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBE,YAAY;AACV,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,OAAO,KAAK,SAAU;AAC5B,oBAAgB,KAAK,QAAQ,IAAI;AACjC,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACT,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,UAAU;AACR,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,OAAO,aAAa,KAAK,UAAS,EAAG,WAAU,EAAG,UAAU;AAClE,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACT,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW,OAAO;AAChB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,QAAI,MAAM,WAAW,GAAG;AACtB,aAAO;AAAA,IACb;AACI,YAAQ,MAAM,IAAI,OAAK,SAAS,cAAc,CAAC,CAAC;AAChD,UAAM,QAAQ,CAAE,GACd,cAAc,CAAE,GAChB,OAAO,KAAK,SAAU;AACxB,QAAI;AACJ,eAAW,KAAK,gBAAgB;AAC9B,UAAI,MAAM,QAAQ,CAAC,KAAK,GAAG;AACzB,mBAAW;AACX,YAAI,MAAM;AAGV,mBAAW,MAAM,aAAa;AAC5B,iBAAO,KAAK,OAAO,EAAE,EAAE,CAAC,IAAI,YAAY,EAAE;AAC1C,sBAAY,EAAE,IAAI;AAAA,QAC5B;AAGQ,YAAI,SAAS,KAAK,CAAC,CAAC,GAAG;AACrB,iBAAO,KAAK,CAAC;AAAA,QACvB;AAIQ,cAAM,IAAI,KAAK,MAAM,GAAG;AACxB,cAAM,CAAC,IAAI;AACX,oBAAY,CAAC,KAAK,MAAM,MAAO,IAAI,OAAQ;AAAA,MAG5C,WAAU,SAAS,KAAK,CAAC,CAAC,GAAG;AAC5B,oBAAY,CAAC,IAAI,KAAK,CAAC;AAAA,MAC/B;AAAA,IACA;AAII,eAAW,OAAO,aAAa;AAC7B,UAAI,YAAY,GAAG,MAAM,GAAG;AAC1B,cAAM,QAAQ,KAAK,QAAQ,WAAW,YAAY,GAAG,IAAI,YAAY,GAAG,IAAI,KAAK,OAAO,QAAQ,EAAE,GAAG;AAAA,MAC7G;AAAA,IACA;AACI,oBAAgB,KAAK,QAAQ,KAAK;AAClC,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACT,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,aAAa;AACX,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,KAAK,QAAQ,SAAS,UAAU,SAAS,QAAQ,SAAS,WAAW,WAAW,cAAc;AAAA,EACzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,SAAS;AACP,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,UAAU,CAAE;AAClB,eAAW,KAAK,OAAO,KAAK,KAAK,MAAM,GAAG;AACxC,cAAQ,CAAC,IAAI,KAAK,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,OAAO,CAAC;AAAA,IAC5D;AACI,WAAO,QAAQ,MAAM;AAAA,MACnB,QAAQ;AAAA,IACT,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,OAAO,SAAS,IAAI;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,WAAW;AACb,WAAO,KAAK,UAAU,KAAK,OAAO,YAAY,IAAI;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,OAAO,UAAU,IAAI;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,OAAO,SAAS,IAAI;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,OAAO;AACT,WAAO,KAAK,UAAU,KAAK,OAAO,QAAQ,IAAI;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,OAAO,SAAS,IAAI;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,OAAO,WAAW,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,OAAO,WAAW,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,eAAe;AACjB,WAAO,KAAK,UAAU,KAAK,OAAO,gBAAgB,IAAI;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,UAAU;AACZ,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,gBAAgB;AAClB,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,qBAAqB;AACvB,WAAO,KAAK,UAAU,KAAK,QAAQ,cAAc;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,OAAO;AACZ,QAAI,CAAC,KAAK,WAAW,CAAC,MAAM,SAAS;AACnC,aAAO;AAAA,IACb;AACI,QAAI,CAAC,KAAK,IAAI,OAAO,MAAM,GAAG,GAAG;AAC/B,aAAO;AAAA,IACb;AACI,aAAS,GAAG,IAAI,IAAI;AAElB,UAAI,OAAO,UAAa,OAAO,EAAG,QAAO,OAAO,UAAa,OAAO;AACpE,aAAO,OAAO;AAAA,IACpB;AACI,eAAW,KAAK,gBAAgB;AAC9B,UAAI,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,CAAC,GAAG;AACxC,eAAO;AAAA,MACf;AAAA,IACA;AACI,WAAO;AAAA,EACX;AACA;AAEA,MAAM,YAAY;AAGlB,SAAS,iBAAiB,OAAO,KAAK;AACpC,MAAI,CAAC,SAAS,CAAC,MAAM,SAAS;AAC5B,WAAO,SAAS,QAAQ,0BAA0B;AAAA,EACnD,WAAU,CAAC,OAAO,CAAC,IAAI,SAAS;AAC/B,WAAO,SAAS,QAAQ,wBAAwB;AAAA,EACpD,WAAa,MAAM,OAAO;AACtB,WAAO,SAAS,QAAQ,oBAAoB,qEAAqE,MAAM,MAAK,CAAE,YAAY,IAAI,MAAK,CAAE,EAAE;AAAA,EAC3J,OAAS;AACL,WAAO;AAAA,EACX;AACA;AAcA,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,EAIb,YAAY,QAAQ;AAIlB,SAAK,IAAI,OAAO;AAIhB,SAAK,IAAI,OAAO;AAIhB,SAAK,UAAU,OAAO,WAAW;AAIjC,SAAK,kBAAkB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,QAAQ,QAAQ,cAAc,MAAM;AACzC,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,qBAAqB,kDAAkD;AAAA,IACvF;AACI,UAAM,UAAU,kBAAkB,UAAU,SAAS,IAAI,QAAQ,QAAQ,WAAW;AACpF,QAAI,SAAS,gBAAgB;AAC3B,YAAM,IAAI,qBAAqB,OAAO;AAAA,IAC5C,OAAW;AACL,aAAO,IAAI,SAAS;AAAA,QAClB;AAAA,MACR,CAAO;AAAA,IACP;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,cAAc,OAAO,KAAK;AAC/B,UAAM,aAAa,iBAAiB,KAAK,GACvC,WAAW,iBAAiB,GAAG;AACjC,UAAM,gBAAgB,iBAAiB,YAAY,QAAQ;AAC3D,QAAI,iBAAiB,MAAM;AACzB,aAAO,IAAI,SAAS;AAAA,QAClB,OAAO;AAAA,QACP,KAAK;AAAA,MACb,CAAO;AAAA,IACP,OAAW;AACL,aAAO;AAAA,IACb;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,MAAM,OAAO,UAAU;AAC5B,UAAM,MAAM,SAAS,iBAAiB,QAAQ,GAC5C,KAAK,iBAAiB,KAAK;AAC7B,WAAO,SAAS,cAAc,IAAI,GAAG,KAAK,GAAG,CAAC;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,OAAO,KAAK,UAAU;AAC3B,UAAM,MAAM,SAAS,iBAAiB,QAAQ,GAC5C,KAAK,iBAAiB,GAAG;AAC3B,WAAO,SAAS,cAAc,GAAG,MAAM,GAAG,GAAG,EAAE;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,OAAO,QAAQ,MAAM,MAAM;AACzB,UAAM,CAACzF,IAAG,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,CAAC;AACxC,QAAIA,MAAK,GAAG;AACV,UAAI,OAAO;AACX,UAAI;AACF,gBAAQyF,WAAS,QAAQzF,IAAG,IAAI;AAChC,uBAAe,MAAM;AAAA,MACtB,SAAQ+F,IAAG;AACV,uBAAe;AAAA,MACvB;AACM,UAAI,KAAK;AACT,UAAI;AACF,cAAMN,WAAS,QAAQ,GAAG,IAAI;AAC9B,qBAAa,IAAI;AAAA,MAClB,SAAQM,IAAG;AACV,qBAAa;AAAA,MACrB;AACM,UAAI,gBAAgB,YAAY;AAC9B,eAAO,SAAS,cAAc,OAAO,GAAG;AAAA,MAChD;AACM,UAAI,cAAc;AAChB,cAAM,MAAM,SAAS,QAAQ,GAAG,IAAI;AACpC,YAAI,IAAI,SAAS;AACf,iBAAO,SAAS,MAAM,OAAO,GAAG;AAAA,QAC1C;AAAA,MACO,WAAU,YAAY;AACrB,cAAM,MAAM,SAAS,QAAQ/F,IAAG,IAAI;AACpC,YAAI,IAAI,SAAS;AACf,iBAAO,SAAS,OAAO,KAAK,GAAG;AAAA,QACzC;AAAA,MACA;AAAA,IACA;AACI,WAAO,SAAS,QAAQ,cAAc,cAAc,IAAI,+BAA+B;AAAA,EAC3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,WAAW,GAAG;AACnB,WAAO,KAAK,EAAE,mBAAmB;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,IAAI;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,MAAM;AACR,WAAO,KAAK,UAAU,KAAK,IAAI;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,UAAU;AACZ,WAAO,KAAK,kBAAkB;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,gBAAgB;AAClB,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,qBAAqB;AACvB,WAAO,KAAK,UAAU,KAAK,QAAQ,cAAc;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,OAAO,gBAAgB;AAC5B,WAAO,KAAK,UAAU,KAAK,WAAW,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,MAAM,OAAO,gBAAgB,MAAM;AACjC,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,QAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI;AAC3C,QAAI;AACJ,QAAI,QAAQ,QAAQ,KAAK,gBAAgB;AACvC,YAAM,KAAK,IAAI,YAAY;AAAA,QACzB,QAAQ,MAAM;AAAA,MACtB,CAAO;AAAA,IACP,OAAW;AACL,YAAM,KAAK;AAAA,IACjB;AACI,UAAM,IAAI,QAAQ,MAAM,IAAI;AAC5B,WAAO,KAAK,MAAM,IAAI,KAAK,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,QAAO,MAAO,KAAK,IAAI;EACrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,QAAQ,MAAM;AACZ,WAAO,KAAK,UAAU,KAAK,QAAS,KAAI,KAAK,EAAE,MAAM,CAAC,EAAE,QAAQ,KAAK,GAAG,IAAI,IAAI;AAAA,EACpF;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,UAAU;AACR,WAAO,KAAK,EAAE,QAAS,MAAK,KAAK,EAAE,QAAS;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,QAAQ,UAAU;AAChB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,KAAK,IAAI;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,SAAS,UAAU;AACjB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,SAAS,UAAU;AACjB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,KAAK,KAAK,YAAY,KAAK,IAAI;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,IAAI;AAAA,IACF;AAAA,IACA;AAAA,EACD,IAAG,IAAI;AACN,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,SAAS,cAAc,SAAS,KAAK,GAAG,OAAO,KAAK,CAAC;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW,WAAW;AACpB,QAAI,CAAC,KAAK,QAAS,QAAO,CAAE;AAC5B,UAAM,SAAS,UAAU,IAAI,gBAAgB,EAAE,OAAO,OAAK,KAAK,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,SAAU,IAAG,EAAE,UAAU,GACrH,UAAU,CAAE;AACd,QAAI;AAAA,MACA,GAAAA;AAAA,IACR,IAAU,MACJ,IAAI;AACN,WAAOA,KAAI,KAAK,GAAG;AACjB,YAAM,QAAQ,OAAO,CAAC,KAAK,KAAK,GAC9B,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,KAAK,IAAI;AACrC,cAAQ,KAAK,SAAS,cAAcA,IAAG,IAAI,CAAC;AAC5C,MAAAA,KAAI;AACJ,WAAK;AAAA,IACX;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,QAAQ,UAAU;AAChB,UAAM,MAAM,SAAS,iBAAiB,QAAQ;AAC9C,QAAI,CAAC,KAAK,WAAW,CAAC,IAAI,WAAW,IAAI,GAAG,cAAc,MAAM,GAAG;AACjE,aAAO,CAAE;AAAA,IACf;AACI,QAAI;AAAA,MACA,GAAAA;AAAA,IACR,IAAU,MACJ,MAAM,GACN;AACF,UAAM,UAAU,CAAE;AAClB,WAAOA,KAAI,KAAK,GAAG;AACjB,YAAM,QAAQ,KAAK,MAAM,KAAK,IAAI,SAAS,OAAK,IAAI,GAAG,CAAC;AACxD,aAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,KAAK,IAAI;AACnC,cAAQ,KAAK,SAAS,cAAcA,IAAG,IAAI,CAAC;AAC5C,MAAAA,KAAI;AACJ,aAAO;AAAA,IACb;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,cAAc,eAAe;AAC3B,QAAI,CAAC,KAAK,QAAS,QAAO,CAAE;AAC5B,WAAO,KAAK,QAAQ,KAAK,OAAM,IAAK,aAAa,EAAE,MAAM,GAAG,aAAa;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,SAAS,OAAO;AACd,WAAO,KAAK,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,WAAW,OAAO;AAChB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,CAAC,KAAK,MAAM,CAAC,MAAM;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,SAAS,OAAO;AACd,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,CAAC,MAAM,MAAM,CAAC,KAAK;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,QAAQ,OAAO;AACb,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,OAAO;AACZ,QAAI,CAAC,KAAK,WAAW,CAAC,MAAM,SAAS;AACnC,aAAO;AAAA,IACb;AACI,WAAO,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK,KAAK,EAAE,OAAO,MAAM,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,aAAa,OAAO;AAClB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAMA,KAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,GAC1C,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM;AACxC,QAAIA,MAAK,GAAG;AACV,aAAO;AAAA,IACb,OAAW;AACL,aAAO,SAAS,cAAcA,IAAG,CAAC;AAAA,IACxC;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,MAAM,OAAO;AACX,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAMA,KAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,GAC1C,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM;AACxC,WAAO,SAAS,cAAcA,IAAG,CAAC;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,MAAM,WAAW;AACtB,UAAM,CAAC,OAAO,KAAK,IAAI,UAAU,KAAK,CAAC,GAAG,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,OAAO,OAAO,GAAG,SAAS;AAC5F,UAAI,CAAC,SAAS;AACZ,eAAO,CAAC,OAAO,IAAI;AAAA,MAC3B,WAAiB,QAAQ,SAAS,IAAI,KAAK,QAAQ,WAAW,IAAI,GAAG;AAC7D,eAAO,CAAC,OAAO,QAAQ,MAAM,IAAI,CAAC;AAAA,MAC1C,OAAa;AACL,eAAO,CAAC,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI;AAAA,MAC7C;AAAA,IACA,GAAO,CAAC,CAAA,GAAI,IAAI,CAAC;AACb,QAAI,OAAO;AACT,YAAM,KAAK,KAAK;AAAA,IACtB;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,IAAI,WAAW;AACpB,QAAI,QAAQ,MACV,eAAe;AACjB,UAAM,UAAU,CAAE,GAChB,OAAO,UAAU,IAAI,OAAK,CAAC;AAAA,MACzB,MAAM,EAAE;AAAA,MACR,MAAM;AAAA,IACd,GAAS;AAAA,MACD,MAAM,EAAE;AAAA,MACR,MAAM;AAAA,IACd,CAAO,CAAC,GACF,YAAY,MAAM,UAAU,OAAO,GAAG,IAAI,GAC1C,MAAM,UAAU,KAAK,CAAC,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI;AAChD,eAAW,KAAK,KAAK;AACnB,sBAAgB,EAAE,SAAS,MAAM,IAAI;AACrC,UAAI,iBAAiB,GAAG;AACtB,gBAAQ,EAAE;AAAA,MAClB,OAAa;AACL,YAAI,SAAS,CAAC,UAAU,CAAC,EAAE,MAAM;AAC/B,kBAAQ,KAAK,SAAS,cAAc,OAAO,EAAE,IAAI,CAAC;AAAA,QAC5D;AACQ,gBAAQ;AAAA,MAChB;AAAA,IACA;AACI,WAAO,SAAS,MAAM,OAAO;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,cAAc,WAAW;AACvB,WAAO,SAAS,IAAI,CAAC,IAAI,EAAE,OAAO,SAAS,CAAC,EAAE,IAAI,OAAK,KAAK,aAAa,CAAC,CAAC,EAAE,OAAO,OAAK,KAAK,CAAC,EAAE,SAAS;AAAA,EAC9G;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW;AACT,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,IAAI,KAAK,EAAE,MAAK,CAAE,MAAM,KAAK,EAAE,MAAK,CAAE;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,CAAC,OAAO,IAAI,4BAA4B,CAAC,IAAI;AAC3C,QAAI,KAAK,SAAS;AAChB,aAAO,qBAAqB,KAAK,EAAE,MAAK,CAAE,UAAU,KAAK,EAAE,MAAK,CAAE;AAAA,IACxE,OAAW;AACL,aAAO,+BAA+B,KAAK,aAAa;AAAA,IAC9D;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBE,eAAe,aAAa,YAAY,OAAO,CAAA,GAAI;AACjD,WAAO,KAAK,UAAU,UAAU,OAAO,KAAK,EAAE,IAAI,MAAM,IAAI,GAAG,UAAU,EAAE,eAAe,IAAI,IAAI;AAAA,EACtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,MAAM,MAAM;AACV,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,GAAG,KAAK,EAAE,MAAM,IAAI,CAAC,IAAI,KAAK,EAAE,MAAM,IAAI,CAAC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,YAAY;AACV,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,GAAG,KAAK,EAAE,UAAS,CAAE,IAAI,KAAK,EAAE,UAAS,CAAE;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,UAAU,MAAM;AACd,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,GAAG,KAAK,EAAE,UAAU,IAAI,CAAC,IAAI,KAAK,EAAE,UAAU,IAAI,CAAC;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaE,SAAS,YAAY;AAAA,IACnB,YAAY;AAAA,EACb,IAAG,IAAI;AACN,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,GAAG,KAAK,EAAE,SAAS,UAAU,CAAC,GAAG,SAAS,GAAG,KAAK,EAAE,SAAS,UAAU,CAAC;AAAA,EACnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,WAAW,MAAM,MAAM;AACrB,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO,SAAS,QAAQ,KAAK,aAAa;AAAA,IAChD;AACI,WAAO,KAAK,EAAE,KAAK,KAAK,GAAG,MAAM,IAAI;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,aAAa,OAAO;AAClB,WAAO,SAAS,cAAc,MAAM,KAAK,CAAC,GAAG,MAAM,KAAK,CAAC,CAAC;AAAA,EAC9D;AACA;AAKA,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT,OAAO,OAAO,OAAO,SAAS,aAAa;AACzC,UAAM,QAAQyF,WAAS,IAAG,EAAG,QAAQ,IAAI,EAAE,IAAI;AAAA,MAC7C,OAAO;AAAA,IACb,CAAK;AACD,WAAO,CAAC,KAAK,eAAe,MAAM,WAAW,MAAM,IAAI;AAAA,MACrD,OAAO;AAAA,IACR,CAAA,EAAE;AAAA,EACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,gBAAgB,MAAM;AAC3B,WAAO,SAAS,YAAY,IAAI;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,OAAO,cAAc,OAAO;AAC1B,WAAO,cAAc,OAAO,SAAS,WAAW;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,OAAO,eAAe;AAAA,IACpB,SAAS;AAAA,IACT,SAAS;AAAA,EACV,IAAG,IAAI;AACN,YAAQ,UAAU,OAAO,OAAO,MAAM,GAAG,eAAgB;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,OAAO,0BAA0B;AAAA,IAC/B,SAAS;AAAA,IACT,SAAS;AAAA,EACV,IAAG,IAAI;AACN,YAAQ,UAAU,OAAO,OAAO,MAAM,GAAG,sBAAuB;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,OAAO,mBAAmB;AAAA,IACxB,SAAS;AAAA,IACT,SAAS;AAAA,EACV,IAAG,IAAI;AAEN,YAAQ,UAAU,OAAO,OAAO,MAAM,GAAG,eAAgB,EAAC,MAAO;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBE,OAAO,OAAO,SAAS,QAAQ;AAAA,IAC7B,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,iBAAiB;AAAA,EAClB,IAAG,IAAI;AACN,YAAQ,UAAU,OAAO,OAAO,QAAQ,iBAAiB,cAAc,GAAG,OAAO,MAAM;AAAA,EAC3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeE,OAAO,aAAa,SAAS,QAAQ;AAAA,IACnC,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,iBAAiB;AAAA,EAClB,IAAG,IAAI;AACN,YAAQ,UAAU,OAAO,OAAO,QAAQ,iBAAiB,cAAc,GAAG,OAAO,QAAQ,IAAI;AAAA,EACjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,OAAO,SAAS,SAAS,QAAQ;AAAA,IAC/B,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,SAAS;AAAA,EACV,IAAG,IAAI;AACN,YAAQ,UAAU,OAAO,OAAO,QAAQ,iBAAiB,IAAI,GAAG,SAAS,MAAM;AAAA,EACnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,OAAO,eAAe,SAAS,QAAQ;AAAA,IACrC,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,SAAS;AAAA,EACV,IAAG,IAAI;AACN,YAAQ,UAAU,OAAO,OAAO,QAAQ,iBAAiB,IAAI,GAAG,SAAS,QAAQ,IAAI;AAAA,EACzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,OAAO,UAAU;AAAA,IACf,SAAS;AAAA,EACV,IAAG,IAAI;AACN,WAAO,OAAO,OAAO,MAAM,EAAE,UAAW;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,OAAO,KAAK,SAAS,SAAS;AAAA,IAC5B,SAAS;AAAA,EACV,IAAG,IAAI;AACN,WAAO,OAAO,OAAO,QAAQ,MAAM,SAAS,EAAE,KAAK,MAAM;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,OAAO,WAAW;AAChB,WAAO;AAAA,MACL,UAAU,YAAa;AAAA,MACvB,YAAY,kBAAiB;AAAA,IAC9B;AAAA,EACL;AACA;AAEA,SAAS,QAAQ,SAAS,OAAO;AAC/B,QAAM,cAAc,QAAM,GAAG,MAAM,GAAG;AAAA,IAClC,eAAe;AAAA,EAChB,CAAA,EAAE,QAAQ,KAAK,EAAE,QAAS,GAC3B,KAAK,YAAY,KAAK,IAAI,YAAY,OAAO;AAC/C,SAAO,KAAK,MAAM,SAAS,WAAW,EAAE,EAAE,GAAG,MAAM,CAAC;AACtD;AACA,SAAS,eAAe,QAAQ,OAAO,OAAO;AAC5C,QAAM,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM;AAClN,UAAM,OAAO,QAAQ,GAAG,CAAC;AACzB,YAAQ,OAAO,OAAO,KAAK;AAAA,EAC/B,CAAG,GAAG,CAAC,QAAQ,OAAO,CAAC;AACrB,QAAM,UAAU,CAAE;AAClB,QAAM,UAAU;AAChB,MAAI,aAAa;AAUjB,aAAW,CAAC,MAAM,MAAM,KAAK,SAAS;AACpC,QAAI,MAAM,QAAQ,IAAI,KAAK,GAAG;AAC5B,oBAAc;AACd,cAAQ,IAAI,IAAI,OAAO,QAAQ,KAAK;AACpC,kBAAY,QAAQ,KAAK,OAAO;AAChC,UAAI,YAAY,OAAO;AAErB,gBAAQ,IAAI;AACZ,iBAAS,QAAQ,KAAK,OAAO;AAK7B,YAAI,SAAS,OAAO;AAElB,sBAAY;AAEZ,kBAAQ,IAAI;AACZ,mBAAS,QAAQ,KAAK,OAAO;AAAA,QACvC;AAAA,MACA,OAAa;AACL,iBAAS;AAAA,MACjB;AAAA,IACA;AAAA,EACA;AACE,SAAO,CAAC,QAAQ,SAAS,WAAW,WAAW;AACjD;AACA,SAAS,KAAM,SAAS,OAAO,OAAO,MAAM;AAC1C,MAAI,CAAC,QAAQ,SAAS,WAAW,WAAW,IAAI,eAAe,SAAS,OAAO,KAAK;AACpF,QAAM,kBAAkB,QAAQ;AAChC,QAAM,kBAAkB,MAAM,OAAO,OAAK,CAAC,SAAS,WAAW,WAAW,cAAc,EAAE,QAAQ,CAAC,KAAK,CAAC;AACzG,MAAI,gBAAgB,WAAW,GAAG;AAChC,QAAI,YAAY,OAAO;AACrB,kBAAY,OAAO,KAAK;AAAA,QACtB,CAAC,WAAW,GAAG;AAAA,MACvB,CAAO;AAAA,IACP;AACI,QAAI,cAAc,QAAQ;AACxB,cAAQ,WAAW,KAAK,QAAQ,WAAW,KAAK,KAAK,mBAAmB,YAAY;AAAA,IAC1F;AAAA,EACA;AACE,QAAM,WAAW,SAAS,WAAW,SAAS,IAAI;AAClD,MAAI,gBAAgB,SAAS,GAAG;AAC9B,WAAO,SAAS,WAAW,iBAAiB,IAAI,EAAE,QAAQ,GAAG,eAAe,EAAE,KAAK,QAAQ;AAAA,EAC/F,OAAS;AACL,WAAO;AAAA,EACX;AACA;AAEA,MAAM,cAAc;AACpB,SAAS,QAAQ,OAAO,OAAO,OAAK,GAAG;AACrC,SAAO;AAAA,IACL;AAAA,IACA,OAAO,CAAC,CAACzF,EAAC,MAAM,KAAK,YAAYA,EAAC,CAAC;AAAA,EACpC;AACH;AACA,MAAM,OAAO,OAAO,aAAa,GAAG;AACpC,MAAM,cAAc,KAAK,IAAI;AAC7B,MAAM,oBAAoB,IAAI,OAAO,aAAa,GAAG;AACrD,SAAS,aAAaA,IAAG;AAGvB,SAAOA,GAAE,QAAQ,OAAO,MAAM,EAAE,QAAQ,mBAAmB,WAAW;AACxE;AACA,SAAS,qBAAqBA,IAAG;AAC/B,SAAOA,GAAE,QAAQ,OAAO,EAAE,EACzB,QAAQ,mBAAmB,GAAG,EAC9B,YAAa;AAChB;AACA,SAAS,MAAM,SAAS,YAAY;AAClC,MAAI,YAAY,MAAM;AACpB,WAAO;AAAA,EACX,OAAS;AACL,WAAO;AAAA,MACL,OAAO,OAAO,QAAQ,IAAI,YAAY,EAAE,KAAK,GAAG,CAAC;AAAA,MACjD,OAAO,CAAC,CAACA,EAAC,MAAM,QAAQ,UAAU,OAAK,qBAAqBA,EAAC,MAAM,qBAAqB,CAAC,CAAC,IAAI;AAAA,IAC/F;AAAA,EACL;AACA;AACA,SAAS,OAAO,OAAO,QAAQ;AAC7B,SAAO;AAAA,IACL;AAAA,IACA,OAAO,CAAC,CAAA,EAAG,GAAG,CAAC,MAAM,aAAa,GAAG,CAAC;AAAA,IACtC;AAAA,EACD;AACH;AACA,SAAS,OAAO,OAAO;AACrB,SAAO;AAAA,IACL;AAAA,IACA,OAAO,CAAC,CAACA,EAAC,MAAMA;AAAA,EACjB;AACH;AACA,SAAS,YAAY,OAAO;AAC1B,SAAO,MAAM,QAAQ,+BAA+B,MAAM;AAC5D;AAMA,SAAS,aAAa,OAAO,KAAK;AAChC,QAAM,MAAM,WAAW,GAAG,GACxB,MAAM,WAAW,KAAK,KAAK,GAC3B,QAAQ,WAAW,KAAK,KAAK,GAC7B,OAAO,WAAW,KAAK,KAAK,GAC5B,MAAM,WAAW,KAAK,KAAK,GAC3B,WAAW,WAAW,KAAK,OAAO,GAClC,aAAa,WAAW,KAAK,OAAO,GACpC,WAAW,WAAW,KAAK,OAAO,GAClC,YAAY,WAAW,KAAK,OAAO,GACnC,YAAY,WAAW,KAAK,OAAO,GACnC,YAAY,WAAW,KAAK,OAAO,GACnC,UAAU,QAAM;AAAA,IACd,OAAO,OAAO,YAAY,EAAE,GAAG,CAAC;AAAA,IAChC,OAAO,CAAC,CAACA,EAAC,MAAMA;AAAA,IAChB,SAAS;AAAA,EACf,IACI,UAAU,OAAK;AACb,QAAI,MAAM,SAAS;AACjB,aAAO,QAAQ,CAAC;AAAA,IACxB;AACM,YAAQ,EAAE,KAAG;AAAA,MAEX,KAAK;AACH,eAAO,MAAM,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,MACnC,KAAK;AACH,eAAO,MAAM,IAAI,KAAK,MAAM,GAAG,CAAC;AAAA,MAElC,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,WAAW,cAAc;AAAA,MAC1C,KAAK;AACH,eAAO,QAAQ,IAAI;AAAA,MACrB,KAAK;AACH,eAAO,QAAQ,SAAS;AAAA,MAC1B,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MAEpB,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,MAAM,IAAI,OAAO,SAAS,IAAI,GAAG,CAAC;AAAA,MAC3C,KAAK;AACH,eAAO,MAAM,IAAI,OAAO,QAAQ,IAAI,GAAG,CAAC;AAAA,MAC1C,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,MAAM,IAAI,OAAO,SAAS,KAAK,GAAG,CAAC;AAAA,MAC5C,KAAK;AACH,eAAO,MAAM,IAAI,OAAO,QAAQ,KAAK,GAAG,CAAC;AAAA,MAE3C,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MAEpB,KAAK;AACH,eAAO,QAAQ,UAAU;AAAA,MAC3B,KAAK;AACH,eAAO,QAAQ,KAAK;AAAA,MAEtB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,QAAQ,UAAU;AAAA,MAC3B,KAAK;AACH,eAAO,QAAQ,KAAK;AAAA,MACtB,KAAK;AACH,eAAO,OAAO,SAAS;AAAA,MACzB,KAAK;AACH,eAAO,OAAO,QAAQ;AAAA,MACxB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MAEpB,KAAK;AACH,eAAO,MAAM,IAAI,UAAS,GAAI,CAAC;AAAA,MAEjC,KAAK;AACH,eAAO,QAAQ,IAAI;AAAA,MACrB,KAAK;AACH,eAAO,QAAQ,WAAW,cAAc;AAAA,MAE1C,KAAK;AACH,eAAO,QAAQ,QAAQ;AAAA,MACzB,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MAEpB,KAAK;AAAA,MACL,KAAK;AACH,eAAO,QAAQ,GAAG;AAAA,MACpB,KAAK;AACH,eAAO,MAAM,IAAI,SAAS,SAAS,KAAK,GAAG,CAAC;AAAA,MAC9C,KAAK;AACH,eAAO,MAAM,IAAI,SAAS,QAAQ,KAAK,GAAG,CAAC;AAAA,MAC7C,KAAK;AACH,eAAO,MAAM,IAAI,SAAS,SAAS,IAAI,GAAG,CAAC;AAAA,MAC7C,KAAK;AACH,eAAO,MAAM,IAAI,SAAS,QAAQ,IAAI,GAAG,CAAC;AAAA,MAE5C,KAAK;AAAA,MACL,KAAK;AACH,eAAO,OAAO,IAAI,OAAO,QAAQ,SAAS,MAAM,SAAS,IAAI,MAAM,KAAK,GAAG,CAAC;AAAA,MAC9E,KAAK;AACH,eAAO,OAAO,IAAI,OAAO,QAAQ,SAAS,MAAM,KAAK,IAAI,MAAM,IAAI,GAAG,CAAC;AAAA,MAGzE,KAAK;AACH,eAAO,OAAO,oBAAoB;AAAA,MAGpC,KAAK;AACH,eAAO,OAAO,WAAW;AAAA,MAC3B;AACE,eAAO,QAAQ,CAAC;AAAA,IAC1B;AAAA,EACK;AACH,QAAM,OAAO,QAAQ,KAAK,KAAK;AAAA,IAC7B,eAAe;AAAA,EAChB;AACD,OAAK,QAAQ;AACb,SAAO;AACT;AACA,MAAM,0BAA0B;AAAA,EAC9B,MAAM;AAAA,IACJ,WAAW;AAAA,IACX,SAAS;AAAA,EACV;AAAA,EACD,OAAO;AAAA,IACL,SAAS;AAAA,IACT,WAAW;AAAA,IACX,OAAO;AAAA,IACP,MAAM;AAAA,EACP;AAAA,EACD,KAAK;AAAA,IACH,SAAS;AAAA,IACT,WAAW;AAAA,EACZ;AAAA,EACD,SAAS;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACP;AAAA,EACD,WAAW;AAAA,EACX,WAAW;AAAA,EACX,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,EACZ;AAAA,EACD,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,EACZ;AAAA,EACD,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,EACZ;AAAA,EACD,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,EACZ;AAAA,EACD,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,OAAO;AAAA,EACX;AACA;AACA,SAAS,aAAa,MAAM,YAAY,cAAc;AACpD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM;AACJ,MAAI,SAAS,WAAW;AACtB,UAAM,UAAU,QAAQ,KAAK,KAAK;AAClC,WAAO;AAAA,MACL,SAAS,CAAC;AAAA,MACV,KAAK,UAAU,MAAM;AAAA,IACtB;AAAA,EACL;AACE,QAAM,QAAQ,WAAW,IAAI;AAK7B,MAAI,aAAa;AACjB,MAAI,SAAS,QAAQ;AACnB,QAAI,WAAW,UAAU,MAAM;AAC7B,mBAAa,WAAW,SAAS,WAAW;AAAA,IAClD,WAAe,WAAW,aAAa,MAAM;AACvC,UAAI,WAAW,cAAc,SAAS,WAAW,cAAc,OAAO;AACpE,qBAAa;AAAA,MACrB,OAAa;AACL,qBAAa;AAAA,MACrB;AAAA,IACA,OAAW;AAGL,mBAAa,aAAa,SAAS,WAAW;AAAA,IACpD;AAAA,EACA;AACE,MAAI,MAAM,wBAAwB,UAAU;AAC5C,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,IAAI,KAAK;AAAA,EACnB;AACE,MAAI,KAAK;AACP,WAAO;AAAA,MACL,SAAS;AAAA,MACT;AAAA,IACD;AAAA,EACL;AACE,SAAO;AACT;AACA,SAAS,WAAW,OAAO;AACzB,QAAM,KAAK,MAAM,IAAI,OAAK,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK,EAAE;AAC3E,SAAO,CAAC,IAAI,EAAE,KAAK,KAAK;AAC1B;AACA,SAAS,MAAM,OAAO,OAAO,UAAU;AACrC,QAAM,UAAU,MAAM,MAAM,KAAK;AACjC,MAAI,SAAS;AACX,UAAM,MAAM,CAAE;AACd,QAAI,aAAa;AACjB,eAAW,KAAK,UAAU;AACxB,UAAI,eAAe,UAAU,CAAC,GAAG;AAC/B,cAAM,IAAI,SAAS,CAAC,GAClB,SAAS,EAAE,SAAS,EAAE,SAAS,IAAI;AACrC,YAAI,CAAC,EAAE,WAAW,EAAE,OAAO;AACzB,cAAI,EAAE,MAAM,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,QAAQ,MAAM,YAAY,aAAa,MAAM,CAAC;AAAA,QACtF;AACQ,sBAAc;AAAA,MACtB;AAAA,IACA;AACI,WAAO,CAAC,SAAS,GAAG;AAAA,EACxB,OAAS;AACL,WAAO,CAAC,SAAS,EAAE;AAAA,EACvB;AACA;AACA,SAAS,oBAAoB,SAAS;AACpC,QAAM,UAAU,WAAS;AACvB,YAAQ,OAAK;AAAA,MACX,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACf;AAAA,EACG;AACD,MAAI,OAAO;AACX,MAAI;AACJ,MAAI,CAAC,YAAY,QAAQ,CAAC,GAAG;AAC3B,WAAO,SAAS,OAAO,QAAQ,CAAC;AAAA,EACpC;AACE,MAAI,CAAC,YAAY,QAAQ,CAAC,GAAG;AAC3B,QAAI,CAAC,MAAM;AACT,aAAO,IAAI,gBAAgB,QAAQ,CAAC;AAAA,IAC1C;AACI,qBAAiB,QAAQ;AAAA,EAC7B;AACE,MAAI,CAAC,YAAY,QAAQ,CAAC,GAAG;AAC3B,YAAQ,KAAK,QAAQ,IAAI,KAAK,IAAI;AAAA,EACtC;AACE,MAAI,CAAC,YAAY,QAAQ,CAAC,GAAG;AAC3B,QAAI,QAAQ,IAAI,MAAM,QAAQ,MAAM,GAAG;AACrC,cAAQ,KAAK;AAAA,IACnB,WAAe,QAAQ,MAAM,MAAM,QAAQ,MAAM,GAAG;AAC9C,cAAQ,IAAI;AAAA,IAClB;AAAA,EACA;AACE,MAAI,QAAQ,MAAM,KAAK,QAAQ,GAAG;AAChC,YAAQ,IAAI,CAAC,QAAQ;AAAA,EACzB;AACE,MAAI,CAAC,YAAY,QAAQ,CAAC,GAAG;AAC3B,YAAQ,IAAI,YAAY,QAAQ,CAAC;AAAA,EACrC;AACE,QAAM,OAAO,OAAO,KAAK,OAAO,EAAE,OAAO,CAAC,GAAG,MAAM;AACjD,UAAM,IAAI,QAAQ,CAAC;AACnB,QAAI,GAAG;AACL,QAAE,CAAC,IAAI,QAAQ,CAAC;AAAA,IACtB;AACI,WAAO;AAAA,EACR,GAAE,EAAE;AACL,SAAO,CAAC,MAAM,MAAM,cAAc;AACpC;AACA,IAAI,qBAAqB;AACzB,SAAS,mBAAmB;AAC1B,MAAI,CAAC,oBAAoB;AACvB,yBAAqByF,WAAS,WAAW,aAAa;AAAA,EAC1D;AACE,SAAO;AACT;AACA,SAAS,sBAAsB,OAAO,QAAQ;AAC5C,MAAI,MAAM,SAAS;AACjB,WAAO;AAAA,EACX;AACE,QAAM,aAAa,UAAU,uBAAuB,MAAM,GAAG;AAC7D,QAAM,SAAS,mBAAmB,YAAY,MAAM;AACpD,MAAI,UAAU,QAAQ,OAAO,SAAS,MAAS,GAAG;AAChD,WAAO;AAAA,EACX;AACE,SAAO;AACT;AACA,SAAS,kBAAkB,QAAQ,QAAQ;AACzC,SAAO,MAAM,UAAU,OAAO,GAAG,OAAO,IAAI,OAAK,sBAAsB,GAAG,MAAM,CAAC,CAAC;AACpF;AAMA,MAAM,YAAY;AAAA,EAChB,YAAY,QAAQ,QAAQ;AAC1B,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,SAAS,kBAAkB,UAAU,YAAY,MAAM,GAAG,MAAM;AACrE,SAAK,QAAQ,KAAK,OAAO,IAAI,OAAK,aAAa,GAAG,MAAM,CAAC;AACzD,SAAK,oBAAoB,KAAK,MAAM,KAAK,OAAK,EAAE,aAAa;AAC7D,QAAI,CAAC,KAAK,mBAAmB;AAC3B,YAAM,CAAC,aAAa,QAAQ,IAAI,WAAW,KAAK,KAAK;AACrD,WAAK,QAAQ,OAAO,aAAa,GAAG;AACpC,WAAK,WAAW;AAAA,IACtB;AAAA,EACA;AAAA,EACE,kBAAkB,OAAO;AACvB,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,QACL;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,eAAe,KAAK;AAAA,MACrB;AAAA,IACP,OAAW;AACL,YAAM,CAAC,YAAY,OAAO,IAAI,MAAM,OAAO,KAAK,OAAO,KAAK,QAAQ,GAClE,CAAC,QAAQ,MAAM,cAAc,IAAI,UAAU,oBAAoB,OAAO,IAAI,CAAC,MAAM,MAAM,MAAS;AAClG,UAAI,eAAe,SAAS,GAAG,KAAK,eAAe,SAAS,GAAG,GAAG;AAChE,cAAM,IAAI,8BAA8B,uDAAuD;AAAA,MACvG;AACM,aAAO;AAAA,QACL;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,OAAO,KAAK;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACP;AAAA,EACA;AAAA,EACE,IAAI,UAAU;AACZ,WAAO,CAAC,KAAK;AAAA,EACjB;AAAA,EACE,IAAI,gBAAgB;AAClB,WAAO,KAAK,oBAAoB,KAAK,kBAAkB,gBAAgB;AAAA,EAC3E;AACA;AACA,SAAS,kBAAkB,QAAQ,OAAO,QAAQ;AAChD,QAAM,SAAS,IAAI,YAAY,QAAQ,MAAM;AAC7C,SAAO,OAAO,kBAAkB,KAAK;AACvC;AACA,SAAS,gBAAgB,QAAQ,OAAO,QAAQ;AAC9C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAG,kBAAkB,QAAQ,OAAO,MAAM;AAC3C,SAAO,CAAC,QAAQ,MAAM,gBAAgB,aAAa;AACrD;AACA,SAAS,mBAAmB,YAAY,QAAQ;AAC9C,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,EACX;AACE,QAAM,YAAY,UAAU,OAAO,QAAQ,UAAU;AACrD,QAAM,KAAK,UAAU,YAAY,iBAAgB,CAAE;AACnD,QAAM,QAAQ,GAAG,cAAe;AAChC,QAAM,eAAe,GAAG,gBAAiB;AACzC,SAAO,MAAM,IAAI,OAAK,aAAa,GAAG,YAAY,YAAY,CAAC;AACjE;AAEA,MAAM,UAAU;AAChB,MAAM,WAAW;AACjB,SAAS,gBAAgB,MAAM;AAC7B,SAAO,IAAI,QAAQ,oBAAoB,aAAa,KAAK,IAAI,oBAAoB;AACnF;AAMA,SAAS,uBAAuB,IAAI;AAClC,MAAI,GAAG,aAAa,MAAM;AACxB,OAAG,WAAW,gBAAgB,GAAG,CAAC;AAAA,EACtC;AACE,SAAO,GAAG;AACZ;AAKA,SAAS,4BAA4B,IAAI;AACvC,MAAI,GAAG,kBAAkB,MAAM;AAC7B,OAAG,gBAAgB,gBAAgB,GAAG,GAAG,GAAG,IAAI,sBAAqB,GAAI,GAAG,IAAI,eAAc,CAAE;AAAA,EACpG;AACE,SAAO,GAAG;AACZ;AAIA,SAAS,MAAM,MAAM,MAAM;AACzB,QAAM,UAAU;AAAA,IACd,IAAI,KAAK;AAAA,IACT,MAAM,KAAK;AAAA,IACX,GAAG,KAAK;AAAA,IACR,GAAG,KAAK;AAAA,IACR,KAAK,KAAK;AAAA,IACV,SAAS,KAAK;AAAA,EACf;AACD,SAAO,IAAIA,WAAS;AAAA,IAClB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,KAAK;AAAA,EACT,CAAG;AACH;AAIA,SAAS,UAAU,SAAS,GAAGO,KAAI;AAEjC,MAAI,WAAW,UAAU,IAAI,KAAK;AAGlC,QAAM,KAAKA,IAAG,OAAO,QAAQ;AAG7B,MAAI,MAAM,IAAI;AACZ,WAAO,CAAC,UAAU,CAAC;AAAA,EACvB;AAGE,eAAa,KAAK,KAAK,KAAK;AAG5B,QAAM,KAAKA,IAAG,OAAO,QAAQ;AAC7B,MAAI,OAAO,IAAI;AACb,WAAO,CAAC,UAAU,EAAE;AAAA,EACxB;AAGE,SAAO,CAAC,UAAU,KAAK,IAAI,IAAI,EAAE,IAAI,KAAK,KAAM,KAAK,IAAI,IAAI,EAAE,CAAC;AAClE;AAGA,SAAS,QAAQ,IAAIN,SAAQ;AAC3B,QAAMA,UAAS,KAAK;AACpB,QAAM,IAAI,IAAI,KAAK,EAAE;AACrB,SAAO;AAAA,IACL,MAAM,EAAE,eAAgB;AAAA,IACxB,OAAO,EAAE,YAAW,IAAK;AAAA,IACzB,KAAK,EAAE,WAAY;AAAA,IACnB,MAAM,EAAE,YAAa;AAAA,IACrB,QAAQ,EAAE,cAAe;AAAA,IACzB,QAAQ,EAAE,cAAe;AAAA,IACzB,aAAa,EAAE,mBAAkB;AAAA,EAClC;AACH;AAGA,SAAS,QAAQ,KAAKA,SAAQ,MAAM;AAClC,SAAO,UAAU,aAAa,GAAG,GAAGA,SAAQ,IAAI;AAClD;AAGA,SAAS,WAAW,MAAM,KAAK;AAC7B,QAAM,OAAO,KAAK,GAChB,OAAO,KAAK,EAAE,OAAO,KAAK,MAAM,IAAI,KAAK,GACzC,QAAQ,KAAK,EAAE,QAAQ,KAAK,MAAM,IAAI,MAAM,IAAI,KAAK,MAAM,IAAI,QAAQ,IAAI,GAC3E,IAAI;AAAA,IACF,GAAG,KAAK;AAAA,IACR;AAAA,IACA;AAAA,IACA,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,YAAY,MAAM,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,IAAI,KAAK,MAAM,IAAI,KAAK,IAAI;AAAA,EACtG,GACD,cAAc,SAAS,WAAW;AAAA,IAChC,OAAO,IAAI,QAAQ,KAAK,MAAM,IAAI,KAAK;AAAA,IACvC,UAAU,IAAI,WAAW,KAAK,MAAM,IAAI,QAAQ;AAAA,IAChD,QAAQ,IAAI,SAAS,KAAK,MAAM,IAAI,MAAM;AAAA,IAC1C,OAAO,IAAI,QAAQ,KAAK,MAAM,IAAI,KAAK;AAAA,IACvC,MAAM,IAAI,OAAO,KAAK,MAAM,IAAI,IAAI;AAAA,IACpC,OAAO,IAAI;AAAA,IACX,SAAS,IAAI;AAAA,IACb,SAAS,IAAI;AAAA,IACb,cAAc,IAAI;AAAA,EACxB,CAAK,EAAE,GAAG,cAAc,GACpB,UAAU,aAAa,CAAC;AAC1B,MAAI,CAAC,IAAI,CAAC,IAAI,UAAU,SAAS,MAAM,KAAK,IAAI;AAChD,MAAI,gBAAgB,GAAG;AACrB,UAAM;AAEN,QAAI,KAAK,KAAK,OAAO,EAAE;AAAA,EAC3B;AACE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACD;AACH;AAIA,SAAS,oBAAoB,QAAQ,YAAY,MAAM,QAAQ,MAAM,gBAAgB;AACnF,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACJ,IAAM;AACJ,MAAI,UAAU,OAAO,KAAK,MAAM,EAAE,WAAW,KAAK,YAAY;AAC5D,UAAM,qBAAqB,cAAc,MACvC,OAAOD,WAAS,WAAW,QAAQ;AAAA,MACjC,GAAG;AAAA,MACH,MAAM;AAAA,MACN;AAAA,IACR,CAAO;AACH,WAAO,UAAU,OAAO,KAAK,QAAQ,IAAI;AAAA,EAC7C,OAAS;AACL,WAAOA,WAAS,QAAQ,IAAI,QAAQ,cAAc,cAAc,IAAI,wBAAwB,MAAM,EAAE,CAAC;AAAA,EACzG;AACA;AAIA,SAAS,aAAa,IAAI,QAAQ,SAAS,MAAM;AAC/C,SAAO,GAAG,UAAU,UAAU,OAAO,OAAO,OAAO,OAAO,GAAG;AAAA,IAC3D;AAAA,IACA,aAAa;AAAA,EACd,CAAA,EAAE,yBAAyB,IAAI,MAAM,IAAI;AAC5C;AACA,SAAS,UAAU,GAAG,UAAU;AAC9B,QAAM,aAAa,EAAE,EAAE,OAAO,QAAQ,EAAE,EAAE,OAAO;AACjD,MAAI,IAAI;AACR,MAAI,cAAc,EAAE,EAAE,QAAQ,EAAG,MAAK;AACtC,OAAK,SAAS,EAAE,EAAE,MAAM,aAAa,IAAI,CAAC;AAC1C,MAAI,UAAU;AACZ,SAAK;AACL,SAAK,SAAS,EAAE,EAAE,KAAK;AACvB,SAAK;AACL,SAAK,SAAS,EAAE,EAAE,GAAG;AAAA,EACzB,OAAS;AACL,SAAK,SAAS,EAAE,EAAE,KAAK;AACvB,SAAK,SAAS,EAAE,EAAE,GAAG;AAAA,EACzB;AACE,SAAO;AACT;AACA,SAAS,UAAU,GAAG,UAAU,iBAAiB,sBAAsB,eAAe,cAAc;AAClG,MAAI,IAAI,SAAS,EAAE,EAAE,IAAI;AACzB,MAAI,UAAU;AACZ,SAAK;AACL,SAAK,SAAS,EAAE,EAAE,MAAM;AACxB,QAAI,EAAE,EAAE,gBAAgB,KAAK,EAAE,EAAE,WAAW,KAAK,CAAC,iBAAiB;AACjE,WAAK;AAAA,IACX;AAAA,EACA,OAAS;AACL,SAAK,SAAS,EAAE,EAAE,MAAM;AAAA,EAC5B;AACE,MAAI,EAAE,EAAE,gBAAgB,KAAK,EAAE,EAAE,WAAW,KAAK,CAAC,iBAAiB;AACjE,SAAK,SAAS,EAAE,EAAE,MAAM;AACxB,QAAI,EAAE,EAAE,gBAAgB,KAAK,CAAC,sBAAsB;AAClD,WAAK;AACL,WAAK,SAAS,EAAE,EAAE,aAAa,CAAC;AAAA,IACtC;AAAA,EACA;AACE,MAAI,eAAe;AACjB,QAAI,EAAE,iBAAiB,EAAE,WAAW,KAAK,CAAC,cAAc;AACtD,WAAK;AAAA,IACX,WAAe,EAAE,IAAI,GAAG;AAClB,WAAK;AACL,WAAK,SAAS,KAAK,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;AACnC,WAAK;AACL,WAAK,SAAS,KAAK,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;AAAA,IACzC,OAAW;AACL,WAAK;AACL,WAAK,SAAS,KAAK,MAAM,EAAE,IAAI,EAAE,CAAC;AAClC,WAAK;AACL,WAAK,SAAS,KAAK,MAAM,EAAE,IAAI,EAAE,CAAC;AAAA,IACxC;AAAA,EACA;AACE,MAAI,cAAc;AAChB,SAAK,MAAM,EAAE,KAAK,WAAW;AAAA,EACjC;AACE,SAAO;AACT;AAGA,MAAM,oBAAoB;AAAA,EACtB,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,aAAa;AACd,GACD,wBAAwB;AAAA,EACtB,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,aAAa;AACd,GACD,2BAA2B;AAAA,EACzB,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,aAAa;AACd;AAGH,MAAM,eAAe,CAAC,QAAQ,SAAS,OAAO,QAAQ,UAAU,UAAU,aAAa,GACrF,mBAAmB,CAAC,YAAY,cAAc,WAAW,QAAQ,UAAU,UAAU,aAAa,GAClG,sBAAsB,CAAC,QAAQ,WAAW,QAAQ,UAAU,UAAU,aAAa;AAGrF,SAAS,cAAc,MAAM;AAC3B,QAAM,aAAa;AAAA,IACjB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,aAAa;AAAA,IACb,UAAU;AAAA,IACV,WAAW;AAAA,IACX,SAAS;AAAA,EACb,EAAI,KAAK,aAAa;AACpB,MAAI,CAAC,WAAY,OAAM,IAAI,iBAAiB,IAAI;AAChD,SAAO;AACT;AACA,SAAS,4BAA4B,MAAM;AACzC,UAAQ,KAAK,YAAa,GAAA;AAAA,IACxB,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO,cAAc,IAAI;AAAA,EAC/B;AACA;AAqBA,SAAS,mBAAmB,MAAM;AAChC,MAAI,CAAC,qBAAqB,IAAI,GAAG;AAC/B,QAAI,iBAAiB,QAAW;AAC9B,qBAAe,SAAS,IAAK;AAAA,IACnC;AACI,yBAAqB,IAAI,IAAI,KAAK,OAAO,YAAY;AAAA,EACzD;AACE,SAAO,qBAAqB,IAAI;AAClC;AAKA,SAAS,QAAQ,KAAK,MAAM;AAC1B,QAAM,OAAO,cAAc,KAAK,MAAM,SAAS,WAAW;AAC1D,MAAI,CAAC,KAAK,SAAS;AACjB,WAAOA,WAAS,QAAQ,gBAAgB,IAAI,CAAC;AAAA,EACjD;AACE,QAAM,MAAM,OAAO,WAAW,IAAI;AAClC,MAAI,IAAI;AAGR,MAAI,CAAC,YAAY,IAAI,IAAI,GAAG;AAC1B,eAAW,KAAK,cAAc;AAC5B,UAAI,YAAY,IAAI,CAAC,CAAC,GAAG;AACvB,YAAI,CAAC,IAAI,kBAAkB,CAAC;AAAA,MACpC;AAAA,IACA;AACI,UAAM,UAAU,wBAAwB,GAAG,KAAK,mBAAmB,GAAG;AACtE,QAAI,SAAS;AACX,aAAOA,WAAS,QAAQ,OAAO;AAAA,IACrC;AACI,UAAM,eAAe,mBAAmB,IAAI;AAC5C,KAAC,IAAI,CAAC,IAAI,QAAQ,KAAK,cAAc,IAAI;AAAA,EAC7C,OAAS;AACL,SAAK,SAAS,IAAK;AAAA,EACvB;AACE,SAAO,IAAIA,WAAS;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAG;AACH;AACA,SAAS,aAAa,OAAO,KAAK,MAAM;AACtC,QAAM,QAAQ,YAAY,KAAK,KAAK,IAAI,OAAO,KAAK,OAClD,SAAS,CAAC,GAAG,SAAS;AACpB,QAAI,QAAQ,GAAG,SAAS,KAAK,YAAY,IAAI,GAAG,IAAI;AACpD,UAAM,YAAY,IAAI,IAAI,MAAM,IAAI,EAAE,aAAa,IAAI;AACvD,WAAO,UAAU,OAAO,GAAG,IAAI;AAAA,EAChC,GACD,SAAS,UAAQ;AACf,QAAI,KAAK,WAAW;AAClB,UAAI,CAAC,IAAI,QAAQ,OAAO,IAAI,GAAG;AAC7B,eAAO,IAAI,QAAQ,IAAI,EAAE,KAAK,MAAM,QAAQ,IAAI,GAAG,IAAI,EAAE,IAAI,IAAI;AAAA,MAClE,MAAM,QAAO;AAAA,IACtB,OAAa;AACL,aAAO,IAAI,KAAK,OAAO,IAAI,EAAE,IAAI,IAAI;AAAA,IAC7C;AAAA,EACK;AACH,MAAI,KAAK,MAAM;AACb,WAAO,OAAO,OAAO,KAAK,IAAI,GAAG,KAAK,IAAI;AAAA,EAC9C;AACE,aAAW,QAAQ,KAAK,OAAO;AAC7B,UAAM5E,SAAQ,OAAO,IAAI;AACzB,QAAI,KAAK,IAAIA,MAAK,KAAK,GAAG;AACxB,aAAO,OAAOA,QAAO,IAAI;AAAA,IAC/B;AAAA,EACA;AACE,SAAO,OAAO,QAAQ,MAAM,KAAK,GAAG,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,CAAC;AACvE;AACA,SAAS,SAAS,SAAS;AACzB,MAAI,OAAO,CAAE,GACX;AACF,MAAI,QAAQ,SAAS,KAAK,OAAO,QAAQ,QAAQ,SAAS,CAAC,MAAM,UAAU;AACzE,WAAO,QAAQ,QAAQ,SAAS,CAAC;AACjC,WAAO,MAAM,KAAK,OAAO,EAAE,MAAM,GAAG,QAAQ,SAAS,CAAC;AAAA,EAC1D,OAAS;AACL,WAAO,MAAM,KAAK,OAAO;AAAA,EAC7B;AACE,SAAO,CAAC,MAAM,IAAI;AACpB;AAKA,IAAI;AAOJ,IAAI,uBAAuB,CAAE;AAsB7B,IAAA,aAAA,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,EAIb,YAAY,QAAQ;AAClB,UAAM,OAAO,OAAO,QAAQ,SAAS;AACrC,QAAI,UAAU,OAAO,YAAY,OAAO,MAAM,OAAO,EAAE,IAAI,IAAI,QAAQ,eAAe,IAAI,UAAU,CAAC,KAAK,UAAU,gBAAgB,IAAI,IAAI;AAI5I,SAAK,KAAK,YAAY,OAAO,EAAE,IAAI,SAAS,QAAQ,OAAO;AAC3D,QAAI,IAAI,MACN,IAAI;AACN,QAAI,CAAC,SAAS;AACZ,YAAM,YAAY,OAAO,OAAO,OAAO,IAAI,OAAO,KAAK,MAAM,OAAO,IAAI,KAAK,OAAO,IAAI;AACxF,UAAI,WAAW;AACb,SAAC,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC;AAAA,MAC5C,OAAa;AAGL,cAAM,KAAK,SAAS,OAAO,CAAC,KAAK,CAAC,OAAO,MAAM,OAAO,IAAI,KAAK,OAAO,KAAK,EAAE;AAC7E,YAAI,QAAQ,KAAK,IAAI,EAAE;AACvB,kBAAU,OAAO,MAAM,EAAE,IAAI,IAAI,IAAI,QAAQ,eAAe,IAAI;AAChE,YAAI,UAAU,OAAO;AACrB,YAAI,UAAU,OAAO;AAAA,MAC7B;AAAA,IACA;AAKI,SAAK,QAAQ;AAIb,SAAK,MAAM,OAAO,OAAO,OAAO,OAAQ;AAIxC,SAAK,UAAU;AAIf,SAAK,WAAW;AAIhB,SAAK,gBAAgB;AAIrB,SAAK,IAAI;AAIT,SAAK,IAAI;AAIT,SAAK,kBAAkB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,OAAO,MAAM;AACX,WAAO,IAAI,SAAS,EAAE;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBE,OAAO,QAAQ;AACb,UAAM,CAAC,MAAM,IAAI,IAAI,SAAS,SAAS,GACrC,CAAC,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,WAAW,IAAI;AAC1D,WAAO,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2BE,OAAO,MAAM;AACX,UAAM,CAAC,MAAM,IAAI,IAAI,SAAS,SAAS,GACrC,CAAC,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,WAAW,IAAI;AAC1D,SAAK,OAAO,gBAAgB;AAC5B,WAAO,QAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,GAAE,IAAI;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,OAAO,WAAW,MAAM,UAAU,IAAI;AACpC,UAAM,KAAK,OAAO,IAAI,IAAI,KAAK,QAAO,IAAK;AAC3C,QAAI,OAAO,MAAM,EAAE,GAAG;AACpB,aAAO,SAAS,QAAQ,eAAe;AAAA,IAC7C;AACI,UAAM,YAAY,cAAc,QAAQ,MAAM,SAAS,WAAW;AAClE,QAAI,CAAC,UAAU,SAAS;AACtB,aAAO,SAAS,QAAQ,gBAAgB,SAAS,CAAC;AAAA,IACxD;AACI,WAAO,IAAI,SAAS;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,MACN,KAAK,OAAO,WAAW,OAAO;AAAA,IACpC,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaE,OAAO,WAAW,cAAc,UAAU,IAAI;AAC5C,QAAI,CAAC,SAAS,YAAY,GAAG;AAC3B,YAAM,IAAI,qBAAqB,yDAAyD,OAAO,YAAY,eAAe,YAAY,EAAE;AAAA,IACzI,WAAU,eAAe,WAAa,eAAe,UAAU;AAE9D,aAAO,SAAS,QAAQ,wBAAwB;AAAA,IACtD,OAAW;AACL,aAAO,IAAI,SAAS;AAAA,QAClB,IAAI;AAAA,QACJ,MAAM,cAAc,QAAQ,MAAM,SAAS,WAAW;AAAA,QACtD,KAAK,OAAO,WAAW,OAAO;AAAA,MACtC,CAAO;AAAA,IACP;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaE,OAAO,YAAY,SAAS,UAAU,IAAI;AACxC,QAAI,CAAC,SAAS,OAAO,GAAG;AACtB,YAAM,IAAI,qBAAqB,wCAAwC;AAAA,IAC7E,OAAW;AACL,aAAO,IAAI,SAAS;AAAA,QAClB,IAAI,UAAU;AAAA,QACd,MAAM,cAAc,QAAQ,MAAM,SAAS,WAAW;AAAA,QACtD,KAAK,OAAO,WAAW,OAAO;AAAA,MACtC,CAAO;AAAA,IACP;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmCE,OAAO,WAAW,KAAK,OAAO,IAAI;AAChC,UAAM,OAAO,CAAE;AACf,UAAM,YAAY,cAAc,KAAK,MAAM,SAAS,WAAW;AAC/D,QAAI,CAAC,UAAU,SAAS;AACtB,aAAO,SAAS,QAAQ,gBAAgB,SAAS,CAAC;AAAA,IACxD;AACI,UAAM,MAAM,OAAO,WAAW,IAAI;AAClC,UAAM,aAAa,gBAAgB,KAAK,2BAA2B;AACnE,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACN,IAAQ,oBAAoB,YAAY,GAAG;AACvC,UAAM,QAAQ,SAAS,IAAK,GAC1B,eAAe,CAAC,YAAY,KAAK,cAAc,IAAI,KAAK,iBAAiB,UAAU,OAAO,KAAK,GAC/F,kBAAkB,CAAC,YAAY,WAAW,OAAO,GACjD,qBAAqB,CAAC,YAAY,WAAW,IAAI,GACjD,mBAAmB,CAAC,YAAY,WAAW,KAAK,KAAK,CAAC,YAAY,WAAW,GAAG,GAChF,iBAAiB,sBAAsB,kBACvC,kBAAkB,WAAW,YAAY,WAAW;AAQtD,SAAK,kBAAkB,oBAAoB,iBAAiB;AAC1D,YAAM,IAAI,8BAA8B,qEAAqE;AAAA,IACnH;AACI,QAAI,oBAAoB,iBAAiB;AACvC,YAAM,IAAI,8BAA8B,wCAAwC;AAAA,IACtF;AACI,UAAM,cAAc,mBAAmB,WAAW,WAAW,CAAC;AAG9D,QAAI,OACF,eACA,SAAS,QAAQ,OAAO,YAAY;AACtC,QAAI,aAAa;AACf,cAAQ;AACR,sBAAgB;AAChB,eAAS,gBAAgB,QAAQ,oBAAoB,WAAW;AAAA,IACjE,WAAU,iBAAiB;AAC1B,cAAQ;AACR,sBAAgB;AAChB,eAAS,mBAAmB,MAAM;AAAA,IACxC,OAAW;AACL,cAAQ;AACR,sBAAgB;AAAA,IACtB;AAGI,QAAI,aAAa;AACjB,eAAW,KAAK,OAAO;AACrB,YAAM,IAAI,WAAW,CAAC;AACtB,UAAI,CAAC,YAAY,CAAC,GAAG;AACnB,qBAAa;AAAA,MACd,WAAU,YAAY;AACrB,mBAAW,CAAC,IAAI,cAAc,CAAC;AAAA,MACvC,OAAa;AACL,mBAAW,CAAC,IAAI,OAAO,CAAC;AAAA,MAChC;AAAA,IACA;AAGI,UAAM,qBAAqB,cAAc,mBAAmB,YAAY,oBAAoB,WAAW,IAAI,kBAAkB,sBAAsB,UAAU,IAAI,wBAAwB,UAAU,GACjM,UAAU,sBAAsB,mBAAmB,UAAU;AAC/D,QAAI,SAAS;AACX,aAAO,SAAS,QAAQ,OAAO;AAAA,IACrC;AAGI,UAAM,YAAY,cAAc,gBAAgB,YAAY,oBAAoB,WAAW,IAAI,kBAAkB,mBAAmB,UAAU,IAAI,YAChJ,CAAC,SAAS,WAAW,IAAI,QAAQ,WAAW,cAAc,SAAS,GACnE,OAAO,IAAI,SAAS;AAAA,MAClB,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,GAAG;AAAA,MACH;AAAA,IACR,CAAO;AAGH,QAAI,WAAW,WAAW,kBAAkB,IAAI,YAAY,KAAK,SAAS;AACxE,aAAO,SAAS,QAAQ,sBAAsB,uCAAuC,WAAW,OAAO,kBAAkB,KAAK,MAAK,CAAE,EAAE;AAAA,IAC7I;AACI,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO,SAAS,QAAQ,KAAK,OAAO;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBE,OAAO,QAAQ,MAAM,OAAO,IAAI;AAC9B,UAAM,CAAC,MAAM,UAAU,IAAI,aAAa,IAAI;AAC5C,WAAO,oBAAoB,MAAM,YAAY,MAAM,YAAY,IAAI;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBE,OAAO,YAAY,MAAM,OAAO,IAAI;AAClC,UAAM,CAAC,MAAM,UAAU,IAAI,iBAAiB,IAAI;AAChD,WAAO,oBAAoB,MAAM,YAAY,MAAM,YAAY,IAAI;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBE,OAAO,SAAS,MAAM,OAAO,IAAI;AAC/B,UAAM,CAAC,MAAM,UAAU,IAAI,cAAc,IAAI;AAC7C,WAAO,oBAAoB,MAAM,YAAY,MAAM,QAAQ,IAAI;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,OAAO,WAAW,MAAM,KAAK,OAAO,CAAA,GAAI;AACtC,QAAI,YAAY,IAAI,KAAK,YAAY,GAAG,GAAG;AACzC,YAAM,IAAI,qBAAqB,kDAAkD;AAAA,IACvF;AACI,UAAM;AAAA,MACF,SAAS;AAAA,MACT,kBAAkB;AAAA,IAC1B,IAAU,MACJ,cAAc,OAAO,SAAS;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACrB,CAAO,GACD,CAAC,MAAM,YAAY,gBAAgB,OAAO,IAAI,gBAAgB,aAAa,MAAM,GAAG;AACtF,QAAI,SAAS;AACX,aAAO,SAAS,QAAQ,OAAO;AAAA,IACrC,OAAW;AACL,aAAO,oBAAoB,MAAM,YAAY,MAAM,UAAU,GAAG,IAAI,MAAM,cAAc;AAAA,IAC9F;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAKE,OAAO,WAAW,MAAM,KAAK,OAAO,CAAA,GAAI;AACtC,WAAO,SAAS,WAAW,MAAM,KAAK,IAAI;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBE,OAAO,QAAQ,MAAM,OAAO,IAAI;AAC9B,UAAM,CAAC,MAAM,UAAU,IAAI,SAAS,IAAI;AACxC,WAAO,oBAAoB,MAAM,YAAY,MAAM,OAAO,IAAI;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,QAAQ,QAAQ,cAAc,MAAM;AACzC,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,qBAAqB,kDAAkD;AAAA,IACvF;AACI,UAAM,UAAU,kBAAkB,UAAU,SAAS,IAAI,QAAQ,QAAQ,WAAW;AACpF,QAAI,SAAS,gBAAgB;AAC3B,YAAM,IAAI,qBAAqB,OAAO;AAAA,IAC5C,OAAW;AACL,aAAO,IAAI,SAAS;AAAA,QAClB;AAAA,MACR,CAAO;AAAA,IACP;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,WAAW,GAAG;AACnB,WAAO,KAAK,EAAE,mBAAmB;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,OAAO,mBAAmB,YAAY,aAAa,IAAI;AACrD,UAAM,YAAY,mBAAmB,YAAY,OAAO,WAAW,UAAU,CAAC;AAC9E,WAAO,CAAC,YAAY,OAAO,UAAU,IAAI,OAAK,IAAI,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,OAAO,aAAa,KAAK,aAAa,IAAI;AACxC,UAAM,WAAW,kBAAkB,UAAU,YAAY,GAAG,GAAG,OAAO,WAAW,UAAU,CAAC;AAC5F,WAAO,SAAS,IAAI,OAAK,EAAE,GAAG,EAAE,KAAK,EAAE;AAAA,EAC3C;AAAA,EACE,OAAO,aAAa;AAClB,mBAAe;AACf,2BAAuB,CAAE;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,IAAI,MAAM;AACR,WAAO,KAAK,IAAI;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,UAAU;AACZ,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,gBAAgB;AAClB,WAAO,KAAK,UAAU,KAAK,QAAQ,SAAS;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,qBAAqB;AACvB,WAAO,KAAK,UAAU,KAAK,QAAQ,cAAc;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,IAAI,SAAS;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,kBAAkB;AACpB,WAAO,KAAK,UAAU,KAAK,IAAI,kBAAkB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,iBAAiB;AACnB,WAAO,KAAK,UAAU,KAAK,IAAI,iBAAiB;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,WAAW;AACb,WAAO,KAAK,UAAU,KAAK,KAAK,OAAO;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,OAAO;AACT,WAAO,KAAK,UAAU,KAAK,EAAE,OAAO;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,KAAK,KAAK,KAAK,EAAE,QAAQ,CAAC,IAAI;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,EAAE,QAAQ;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,MAAM;AACR,WAAO,KAAK,UAAU,KAAK,EAAE,MAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,OAAO;AACT,WAAO,KAAK,UAAU,KAAK,EAAE,OAAO;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,EAAE,SAAS;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,KAAK,EAAE,SAAS;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,cAAc;AAChB,WAAO,KAAK,UAAU,KAAK,EAAE,cAAc;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,WAAW;AACb,WAAO,KAAK,UAAU,uBAAuB,IAAI,EAAE,WAAW;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,aAAa;AACf,WAAO,KAAK,UAAU,uBAAuB,IAAI,EAAE,aAAa;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,uBAAuB,IAAI,EAAE,UAAU;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,YAAY;AACd,WAAO,KAAK,WAAW,KAAK,IAAI,iBAAiB,SAAS,KAAK,OAAO;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,eAAe;AACjB,WAAO,KAAK,UAAU,4BAA4B,IAAI,EAAE,UAAU;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,kBAAkB;AACpB,WAAO,KAAK,UAAU,4BAA4B,IAAI,EAAE,aAAa;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,gBAAgB;AAClB,WAAO,KAAK,UAAU,4BAA4B,IAAI,EAAE,WAAW;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,UAAU;AACZ,WAAO,KAAK,UAAU,mBAAmB,KAAK,CAAC,EAAE,UAAU;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,aAAa;AACf,WAAO,KAAK,UAAU,KAAK,OAAO,SAAS;AAAA,MACzC,QAAQ,KAAK;AAAA,IACd,CAAA,EAAE,KAAK,QAAQ,CAAC,IAAI;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,YAAY;AACd,WAAO,KAAK,UAAU,KAAK,OAAO,QAAQ;AAAA,MACxC,QAAQ,KAAK;AAAA,IACd,CAAA,EAAE,KAAK,QAAQ,CAAC,IAAI;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,eAAe;AACjB,WAAO,KAAK,UAAU,KAAK,SAAS,SAAS;AAAA,MAC3C,QAAQ,KAAK;AAAA,IACd,CAAA,EAAE,KAAK,UAAU,CAAC,IAAI;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,cAAc;AAChB,WAAO,KAAK,UAAU,KAAK,SAAS,QAAQ;AAAA,MAC1C,QAAQ,KAAK;AAAA,IACd,CAAA,EAAE,KAAK,UAAU,CAAC,IAAI;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,CAAC,KAAK,IAAI;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,kBAAkB;AACpB,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,KAAK,WAAW,KAAK,IAAI;AAAA,QACnC,QAAQ;AAAA,QACR,QAAQ,KAAK;AAAA,MACrB,CAAO;AAAA,IACP,OAAW;AACL,aAAO;AAAA,IACb;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,IAAI,iBAAiB;AACnB,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,KAAK,WAAW,KAAK,IAAI;AAAA,QACnC,QAAQ;AAAA,QACR,QAAQ,KAAK;AAAA,MACrB,CAAO;AAAA,IACP,OAAW;AACL,aAAO;AAAA,IACb;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,gBAAgB;AAClB,WAAO,KAAK,UAAU,KAAK,KAAK,cAAc;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,UAAU;AACZ,QAAI,KAAK,eAAe;AACtB,aAAO;AAAA,IACb,OAAW;AACL,aAAO,KAAK,SAAS,KAAK,IAAI;AAAA,QAC5B,OAAO;AAAA,QACP,KAAK;AAAA,MACN,CAAA,EAAE,UAAU,KAAK,SAAS,KAAK,IAAI;AAAA,QAClC,OAAO;AAAA,MACR,CAAA,EAAE;AAAA,IACT;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,qBAAqB;AACnB,QAAI,CAAC,KAAK,WAAW,KAAK,eAAe;AACvC,aAAO,CAAC,IAAI;AAAA,IAClB;AACI,UAAM,QAAQ;AACd,UAAM,WAAW;AACjB,UAAM,UAAU,aAAa,KAAK,CAAC;AACnC,UAAM,WAAW,KAAK,KAAK,OAAO,UAAU,KAAK;AACjD,UAAM,SAAS,KAAK,KAAK,OAAO,UAAU,KAAK;AAC/C,UAAM,KAAK,KAAK,KAAK,OAAO,UAAU,WAAW,QAAQ;AACzD,UAAM,KAAK,KAAK,KAAK,OAAO,UAAU,SAAS,QAAQ;AACvD,QAAI,OAAO,IAAI;AACb,aAAO,CAAC,IAAI;AAAA,IAClB;AACI,UAAM,MAAM,UAAU,KAAK;AAC3B,UAAM,MAAM,UAAU,KAAK;AAC3B,UAAM,KAAK,QAAQ,KAAK,EAAE;AAC1B,UAAM,KAAK,QAAQ,KAAK,EAAE;AAC1B,QAAI,GAAG,SAAS,GAAG,QAAQ,GAAG,WAAW,GAAG,UAAU,GAAG,WAAW,GAAG,UAAU,GAAG,gBAAgB,GAAG,aAAa;AAClH,aAAO,CAAC,MAAM,MAAM;AAAA,QAClB,IAAI;AAAA,MACZ,CAAO,GAAG,MAAM,MAAM;AAAA,QACd,IAAI;AAAA,MACZ,CAAO,CAAC;AAAA,IACR;AACI,WAAO,CAAC,IAAI;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,eAAe;AACjB,WAAO,WAAW,KAAK,IAAI;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,cAAc;AAChB,WAAO,YAAY,KAAK,MAAM,KAAK,KAAK;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,aAAa;AACf,WAAO,KAAK,UAAU,WAAW,KAAK,IAAI,IAAI;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,IAAI,kBAAkB;AACpB,WAAO,KAAK,UAAU,gBAAgB,KAAK,QAAQ,IAAI;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,IAAI,uBAAuB;AACzB,WAAO,KAAK,UAAU,gBAAgB,KAAK,eAAe,KAAK,IAAI,sBAAuB,GAAE,KAAK,IAAI,eAAc,CAAE,IAAI;AAAA,EAC7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,sBAAsB,OAAO,IAAI;AAC/B,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACD,IAAG,UAAU,OAAO,KAAK,IAAI,MAAM,IAAI,GAAG,IAAI,EAAE,gBAAgB,IAAI;AACrE,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,gBAAgB;AAAA,IACjB;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,MAAM6E,UAAS,GAAG,OAAO,CAAA,GAAI;AAC3B,WAAO,KAAK,QAAQ,gBAAgB,SAASA,OAAM,GAAG,IAAI;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,UAAU;AACR,WAAO,KAAK,QAAQ,SAAS,WAAW;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,QAAQ,MAAM;AAAA,IACZ,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,EACpB,IAAG,IAAI;AACN,WAAO,cAAc,MAAM,SAAS,WAAW;AAC/C,QAAI,KAAK,OAAO,KAAK,IAAI,GAAG;AAC1B,aAAO;AAAA,IACb,WAAe,CAAC,KAAK,SAAS;AACxB,aAAO,SAAS,QAAQ,gBAAgB,IAAI,CAAC;AAAA,IACnD,OAAW;AACL,UAAI,QAAQ,KAAK;AACjB,UAAI,iBAAiB,kBAAkB;AACrC,cAAM,cAAc,KAAK,OAAO,KAAK,EAAE;AACvC,cAAM,QAAQ,KAAK,SAAU;AAC7B,SAAC,KAAK,IAAI,QAAQ,OAAO,aAAa,IAAI;AAAA,MAClD;AACM,aAAO,MAAM,MAAM;AAAA,QACjB,IAAI;AAAA,QACJ;AAAA,MACR,CAAO;AAAA,IACP;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAG,IAAI;AACN,UAAM,MAAM,KAAK,IAAI,MAAM;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,IACN,CAAK;AACD,WAAO,MAAM,MAAM;AAAA,MACjB;AAAA,IACN,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,UAAU,QAAQ;AAChB,WAAO,KAAK,YAAY;AAAA,MACtB;AAAA,IACN,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeE,IAAI,QAAQ;AACV,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,aAAa,gBAAgB,QAAQ,2BAA2B;AACtE,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACD,IAAG,oBAAoB,YAAY,KAAK,GAAG;AAC5C,UAAM,mBAAmB,CAAC,YAAY,WAAW,QAAQ,KAAK,CAAC,YAAY,WAAW,UAAU,KAAK,CAAC,YAAY,WAAW,OAAO,GAClI,kBAAkB,CAAC,YAAY,WAAW,OAAO,GACjD,qBAAqB,CAAC,YAAY,WAAW,IAAI,GACjD,mBAAmB,CAAC,YAAY,WAAW,KAAK,KAAK,CAAC,YAAY,WAAW,GAAG,GAChF,iBAAiB,sBAAsB,kBACvC,kBAAkB,WAAW,YAAY,WAAW;AACtD,SAAK,kBAAkB,oBAAoB,iBAAiB;AAC1D,YAAM,IAAI,8BAA8B,qEAAqE;AAAA,IACnH;AACI,QAAI,oBAAoB,iBAAiB;AACvC,YAAM,IAAI,8BAA8B,wCAAwC;AAAA,IACtF;AACI,QAAI;AACJ,QAAI,kBAAkB;AACpB,cAAQ,gBAAgB;AAAA,QACtB,GAAG,gBAAgB,KAAK,GAAG,oBAAoB,WAAW;AAAA,QAC1D,GAAG;AAAA,MACX,GAAS,oBAAoB,WAAW;AAAA,IACnC,WAAU,CAAC,YAAY,WAAW,OAAO,GAAG;AAC3C,cAAQ,mBAAmB;AAAA,QACzB,GAAG,mBAAmB,KAAK,CAAC;AAAA,QAC5B,GAAG;AAAA,MACX,CAAO;AAAA,IACP,OAAW;AACL,cAAQ;AAAA,QACN,GAAG,KAAK,SAAU;AAAA,QAClB,GAAG;AAAA,MACJ;AAID,UAAI,YAAY,WAAW,GAAG,GAAG;AAC/B,cAAM,MAAM,KAAK,IAAI,YAAY,MAAM,MAAM,MAAM,KAAK,GAAG,MAAM,GAAG;AAAA,MAC5E;AAAA,IACA;AACI,UAAM,CAAC,IAAI,CAAC,IAAI,QAAQ,OAAO,KAAK,GAAG,KAAK,IAAI;AAChD,WAAO,MAAM,MAAM;AAAA,MACjB;AAAA,MACA;AAAA,IACN,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeE,KAAK,UAAU;AACb,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,MAAM,SAAS,iBAAiB,QAAQ;AAC9C,WAAO,MAAM,MAAM,WAAW,MAAM,GAAG,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,MAAM,UAAU;AACd,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,MAAM,SAAS,iBAAiB,QAAQ,EAAE,OAAQ;AACxD,WAAO,MAAM,MAAM,WAAW,MAAM,GAAG,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,QAAQ,MAAM;AAAA,IACZ,iBAAiB;AAAA,EAClB,IAAG,IAAI;AACN,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,IAAI,CAAE,GACV,iBAAiB,SAAS,cAAc,IAAI;AAC9C,YAAQ,gBAAc;AAAA,MACpB,KAAK;AACH,UAAE,QAAQ;AAAA,MAEZ,KAAK;AAAA,MACL,KAAK;AACH,UAAE,MAAM;AAAA,MAEV,KAAK;AAAA,MACL,KAAK;AACH,UAAE,OAAO;AAAA,MAEX,KAAK;AACH,UAAE,SAAS;AAAA,MAEb,KAAK;AACH,UAAE,SAAS;AAAA,MAEb,KAAK;AACH,UAAE,cAAc;AAChB;AAAA,IAER;AAEI,QAAI,mBAAmB,SAAS;AAC9B,UAAI,gBAAgB;AAClB,cAAM,cAAc,KAAK,IAAI,eAAgB;AAC7C,cAAM;AAAA,UACJ;AAAA,QACV,IAAY;AACJ,YAAI,UAAU,aAAa;AACzB,YAAE,aAAa,KAAK,aAAa;AAAA,QAC3C;AACQ,UAAE,UAAU;AAAA,MACpB,OAAa;AACL,UAAE,UAAU;AAAA,MACpB;AAAA,IACA;AACI,QAAI,mBAAmB,YAAY;AACjC,YAAM,IAAI,KAAK,KAAK,KAAK,QAAQ,CAAC;AAClC,QAAE,SAAS,IAAI,KAAK,IAAI;AAAA,IAC9B;AACI,WAAO,KAAK,IAAI,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,MAAM,MAAM,MAAM;AAChB,WAAO,KAAK,UAAU,KAAK,KAAK;AAAA,MAC9B,CAAC,IAAI,GAAG;AAAA,IACd,CAAK,EAAE,QAAQ,MAAM,IAAI,EAAE,MAAM,CAAC,IAAI;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,SAAS,KAAK,OAAO,IAAI;AACvB,WAAO,KAAK,UAAU,UAAU,OAAO,KAAK,IAAI,cAAc,IAAI,CAAC,EAAE,yBAAyB,MAAM,GAAG,IAAI;AAAA,EAC/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBE,eAAe,aAAa,YAAY,OAAO,CAAA,GAAI;AACjD,WAAO,KAAK,UAAU,UAAU,OAAO,KAAK,IAAI,MAAM,IAAI,GAAG,UAAU,EAAE,eAAe,IAAI,IAAI;AAAA,EACpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeE,cAAc,OAAO,IAAI;AACvB,WAAO,KAAK,UAAU,UAAU,OAAO,KAAK,IAAI,MAAM,IAAI,GAAG,IAAI,EAAE,oBAAoB,IAAI,IAAI,CAAE;AAAA,EACrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBE,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,uBAAuB;AAAA,IACvB,gBAAgB;AAAA,IAChB,eAAe;AAAA,EAChB,IAAG,IAAI;AACN,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,IACb;AACI,UAAM,MAAM,WAAW;AACvB,QAAI,IAAI,UAAU,MAAM,GAAG;AAC3B,SAAK;AACL,SAAK,UAAU,MAAM,KAAK,iBAAiB,sBAAsB,eAAe,YAAY;AAC5F,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,UAAU;AAAA,IACR,SAAS;AAAA,EACV,IAAG,IAAI;AACN,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,IACb;AACI,WAAO,UAAU,MAAM,WAAW,UAAU;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,gBAAgB;AACd,WAAO,aAAa,MAAM,cAAc;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBE,UAAU;AAAA,IACR,uBAAuB;AAAA,IACvB,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,SAAS;AAAA,EACV,IAAG,IAAI;AACN,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,IACb;AACI,QAAI,IAAI,gBAAgB,MAAM;AAC9B,WAAO,IAAI,UAAU,MAAM,WAAW,YAAY,iBAAiB,sBAAsB,eAAe,YAAY;AAAA,EACxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,YAAY;AACV,WAAO,aAAa,MAAM,iCAAiC,KAAK;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,SAAS;AACP,WAAO,aAAa,KAAK,MAAK,GAAI,iCAAiC;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,YAAY;AACV,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,IACb;AACI,WAAO,UAAU,MAAM,IAAI;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,UAAU;AAAA,IACR,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,qBAAqB;AAAA,EACtB,IAAG,IAAI;AACN,QAAI,MAAM;AACV,QAAI,eAAe,eAAe;AAChC,UAAI,oBAAoB;AACtB,eAAO;AAAA,MACf;AACM,UAAI,aAAa;AACf,eAAO;AAAA,MACR,WAAU,eAAe;AACxB,eAAO;AAAA,MACf;AAAA,IACA;AACI,WAAO,aAAa,MAAM,KAAK,IAAI;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,MAAM,OAAO,IAAI;AACf,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO;AAAA,IACb;AACI,WAAO,GAAG,KAAK,UAAW,CAAA,IAAI,KAAK,UAAU,IAAI,CAAC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW;AACT,WAAO,KAAK,UAAU,KAAK,MAAO,IAAG;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,CAAC,OAAO,IAAI,4BAA4B,CAAC,IAAI;AAC3C,QAAI,KAAK,SAAS;AAChB,aAAO,kBAAkB,KAAK,MAAK,CAAE,WAAW,KAAK,KAAK,IAAI,aAAa,KAAK,MAAM;AAAA,IAC5F,OAAW;AACL,aAAO,+BAA+B,KAAK,aAAa;AAAA,IAC9D;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,UAAU;AACR,WAAO,KAAK,SAAU;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW;AACT,WAAO,KAAK,UAAU,KAAK,KAAK;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,YAAY;AACV,WAAO,KAAK,UAAU,KAAK,KAAK,MAAO;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,gBAAgB;AACd,WAAO,KAAK,UAAU,KAAK,MAAM,KAAK,KAAK,GAAI,IAAI;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,SAAS;AACP,WAAO,KAAK,MAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,SAAS;AACP,WAAO,KAAK,SAAU;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,SAAS,OAAO,IAAI;AAClB,QAAI,CAAC,KAAK,QAAS,QAAO,CAAE;AAC5B,UAAM,OAAO;AAAA,MACX,GAAG,KAAK;AAAA,IACT;AACD,QAAI,KAAK,eAAe;AACtB,WAAK,iBAAiB,KAAK;AAC3B,WAAK,kBAAkB,KAAK,IAAI;AAChC,WAAK,SAAS,KAAK,IAAI;AAAA,IAC7B;AACI,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW;AACT,WAAO,IAAI,KAAK,KAAK,UAAU,KAAK,KAAK,GAAG;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBE,KAAK,eAAe,OAAO,gBAAgB,OAAO,CAAA,GAAI;AACpD,QAAI,CAAC,KAAK,WAAW,CAAC,cAAc,SAAS;AAC3C,aAAO,SAAS,QAAQ,wCAAwC;AAAA,IACtE;AACI,UAAM,UAAU;AAAA,MACd,QAAQ,KAAK;AAAA,MACb,iBAAiB,KAAK;AAAA,MACtB,GAAG;AAAA,IACJ;AACD,UAAM,QAAQ,WAAW,IAAI,EAAE,IAAI,SAAS,aAAa,GACvD,eAAe,cAAc,YAAY,KAAK,QAAS,GACvD,UAAU,eAAe,OAAO,eAChC,QAAQ,eAAe,gBAAgB,MACvC,SAAS,KAAK,SAAS,OAAO,OAAO,OAAO;AAC9C,WAAO,eAAe,OAAO,OAAM,IAAK;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,QAAQ,OAAO,gBAAgB,OAAO,CAAA,GAAI;AACxC,WAAO,KAAK,KAAK,SAAS,IAAK,GAAE,MAAM,IAAI;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,MAAM,eAAe;AACnB,WAAO,KAAK,UAAU,SAAS,cAAc,MAAM,aAAa,IAAI;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaE,QAAQ,eAAe,MAAM,MAAM;AACjC,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,UAAU,cAAc,QAAS;AACvC,UAAM,iBAAiB,KAAK,QAAQ,cAAc,MAAM;AAAA,MACtD,eAAe;AAAA,IACrB,CAAK;AACD,WAAO,eAAe,QAAQ,MAAM,IAAI,KAAK,WAAW,WAAW,eAAe,MAAM,MAAM,IAAI;AAAA,EACtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASE,OAAO,OAAO;AACZ,WAAO,KAAK,WAAW,MAAM,WAAW,KAAK,QAAO,MAAO,MAAM,QAAS,KAAI,KAAK,KAAK,OAAO,MAAM,IAAI,KAAK,KAAK,IAAI,OAAO,MAAM,GAAG;AAAA,EAC3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBE,WAAW,UAAU,IAAI;AACvB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAM,OAAO,QAAQ,QAAQ,SAAS,WAAW,CAAA,GAAI;AAAA,MACjD,MAAM,KAAK;AAAA,IACnB,CAAO,GACDO,WAAU,QAAQ,UAAU,OAAO,OAAO,CAAC,QAAQ,UAAU,QAAQ,UAAU;AACjF,QAAI,QAAQ,CAAC,SAAS,UAAU,QAAQ,SAAS,WAAW,SAAS;AACrE,QAAI,OAAO,QAAQ;AACnB,QAAI,MAAM,QAAQ,QAAQ,IAAI,GAAG;AAC/B,cAAQ,QAAQ;AAChB,aAAO;AAAA,IACb;AACI,WAAO,aAAa,MAAM,KAAK,KAAKA,QAAO,GAAG;AAAA,MAC5C,GAAG;AAAA,MACH,SAAS;AAAA,MACT;AAAA,MACA;AAAA,IACN,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeE,mBAAmB,UAAU,IAAI;AAC/B,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,WAAO,aAAa,QAAQ,QAAQ,SAAS,WAAW,CAAA,GAAI;AAAA,MAC1D,MAAM,KAAK;AAAA,IACZ,CAAA,GAAG,MAAM;AAAA,MACR,GAAG;AAAA,MACH,SAAS;AAAA,MACT,OAAO,CAAC,SAAS,UAAU,MAAM;AAAA,MACjC,WAAW;AAAA,IACjB,CAAK;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,OAAO,WAAW;AACvB,QAAI,CAAC,UAAU,MAAM,SAAS,UAAU,GAAG;AACzC,YAAM,IAAI,qBAAqB,yCAAyC;AAAA,IAC9E;AACI,WAAO,OAAO,WAAW,OAAK,EAAE,QAAS,GAAE,KAAK,GAAG;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOE,OAAO,OAAO,WAAW;AACvB,QAAI,CAAC,UAAU,MAAM,SAAS,UAAU,GAAG;AACzC,YAAM,IAAI,qBAAqB,yCAAyC;AAAA,IAC9E;AACI,WAAO,OAAO,WAAW,OAAK,EAAE,QAAS,GAAE,KAAK,GAAG;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWE,OAAO,kBAAkB,MAAM,KAAK,UAAU,CAAA,GAAI;AAChD,UAAM;AAAA,MACF,SAAS;AAAA,MACT,kBAAkB;AAAA,IAC1B,IAAU,SACJ,cAAc,OAAO,SAAS;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACrB,CAAO;AACH,WAAO,kBAAkB,aAAa,MAAM,GAAG;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAKE,OAAO,kBAAkB,MAAM,KAAK,UAAU,CAAA,GAAI;AAChD,WAAO,SAAS,kBAAkB,MAAM,KAAK,OAAO;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcE,OAAO,kBAAkB,KAAK,UAAU,IAAI;AAC1C,UAAM;AAAA,MACF,SAAS;AAAA,MACT,kBAAkB;AAAA,IAC1B,IAAU,SACJ,cAAc,OAAO,SAAS;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACrB,CAAO;AACH,WAAO,IAAI,YAAY,aAAa,GAAG;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYE,OAAO,iBAAiB,MAAM,cAAc,OAAO,CAAA,GAAI;AACrD,QAAI,YAAY,IAAI,KAAK,YAAY,YAAY,GAAG;AAClD,YAAM,IAAI,qBAAqB,+DAA+D;AAAA,IACpG;AACI,UAAM;AAAA,MACF,SAAS;AAAA,MACT,kBAAkB;AAAA,IAC1B,IAAU,MACJ,cAAc,OAAO,SAAS;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACrB,CAAO;AACH,QAAI,CAAC,YAAY,OAAO,aAAa,MAAM,GAAG;AAC5C,YAAM,IAAI,qBAAqB,4CAA4C,WAAW,2CAAgD,aAAa,MAAM,EAAE;AAAA,IACjK;AACI,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN,IAAQ,aAAa,kBAAkB,IAAI;AACvC,QAAI,eAAe;AACjB,aAAO,SAAS,QAAQ,aAAa;AAAA,IAC3C,OAAW;AACL,aAAO,oBAAoB,QAAQ,MAAM,MAAM,UAAU,aAAa,MAAM,IAAI,MAAM,cAAc;AAAA,IAC1G;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQE,WAAW,aAAa;AACtB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,WAAW;AACpB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,wBAAwB;AACjC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,YAAY;AACrB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,YAAY;AACrB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,cAAc;AACvB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,oBAAoB;AAC7B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,yBAAyB;AAClC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,wBAAwB;AACjC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,iBAAiB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,uBAAuB;AAChC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,4BAA4B;AACrC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,2BAA2B;AACpC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,iBAAiB;AAC1B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,8BAA8B;AACvC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,eAAe;AACxB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,4BAA4B;AACrC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,4BAA4B;AACrC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,gBAAgB;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,6BAA6B;AACtC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,gBAAgB;AACzB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,WAAW,6BAA6B;AACtC,WAAO;AAAA,EACX;AACA;AAKA,SAAS,iBAAiB,aAAa;AACrC,MAAIR,WAAS,WAAW,WAAW,GAAG;AACpC,WAAO;AAAA,EACX,WAAa,eAAe,YAAY,WAAW,SAAS,YAAY,QAAO,CAAE,GAAG;AAChF,WAAOA,WAAS,WAAW,WAAW;AAAA,EACvC,WAAU,eAAe,OAAO,gBAAgB,UAAU;AACzD,WAAOA,WAAS,WAAW,WAAW;AAAA,EAC1C,OAAS;AACL,UAAM,IAAI,qBAAqB,8BAA8B,WAAW,aAAa,OAAO,WAAW,EAAE;AAAA,EAC7G;AACA;AAEA,MAAM,UAAU;AAEA,MAAA,WAAGA;AACH,MAAA,WAAG;AACI,MAAA,kBAAG;AACV,MAAA,WAAG;AACP,MAAA,OAAG;AACC,MAAA,WAAG;AACA,MAAA,cAAG;AACN,MAAA,WAAG;AACD,MAAA,aAAG;AACN,MAAA,UAAG;AACN,MAAA,OAAG;;;;ACl+Of,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACjD,MAAA,MAAG;AACF,MAAA,OAAG;AACF,MAAA,QAAG;AACS,MAAA,oBAAG;AACd,MAAA,SAAG;AACjB,SAAS,IAAI,QAAQ,GAAG;AACpB,SAAO,UAAU,OAAO,SAAY,EAAE,MAAM;AAChD;AACA,SAAS,KAAK,GAAG,GAAG,GAAG;AACnB,SAAO,KAAK,QAAQ,KAAK,OAAO,SAAY,EAAE,GAAG,CAAC;AACtD;AACA,SAAS,MAAM,MAAM,GAAG;AACpB,aAAW,KAAK,MAAM;AAClB,QAAI,KAAK,MAAM;AACX,YAAM,IAAI,EAAE,CAAC;AACb,UAAI,KAAK;AACL,eAAO;AAAA,IACvB;AAAA,EACA;AACI;AACJ;AACA,SAAS,kBAAkB,MAAM;AAC7B,aAAW,KAAK,MAAM;AAClB,UAAM,SAAS,EAAG;AAClB,QAAI,UAAU;AACV,aAAO;AAAA,EACnB;AACI;AACJ;AAIA,SAAS,OAAO,GAAG;AACf,SAAO,KAAK,OAAO,SAAY;AACnC;;;;;;;;;ACnCA,SAAO,eAAeS,UAAS,cAAc,EAAE,OAAO,MAAM;AAC5CA,WAAA,WAAG;AACnB,QAAM,UAAUpG;AAChB,QAAMqG,cAAa7F,gBAAqB;AACxC,QAAMC,YAAWC;AACjB,QAAM,gBAAgBW,mBAAwB;AAC9C,QAAM,cAAcO,iBAAsB;AAI1C,MAAA,cAAAN,MAAA,MAAe;AAAA,IAyBX,YAAY,MAAM,QAAQ,QAAQ,aAAa,UAAU,UAAU,cAAc;AAzBrF;AACI;AACA;AACA;AACA;AACA;AACA;AAgBA;AACA;AACA;AAEI,WAAK,OAAO;AACZ,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,cAAc;AACnB,WAAK,WAAW;AAChB,WAAK,eAAe;AACpB,WAAK,QAAW,GAAA,YAAY,aAAa,EAAE,SAAQ,CAAE;AAAA;IAzBzD,OAAO,SAAS,MAAMuE,cAAa;AAC/B,YAAM3F,MAAI,GAAIO,UAAS,KAAK,IAAI,EAAE,KAAM;AACxC,UAAIP,GAAE,WAAW;AACb;AACJ,YAAM,aAAa,cAAc,eAAe,OAAU,GAAA,cAAc,aAAa,EAAE,aAAA2F,aAAW,CAAE,CAAC;AACrG,UAAI,UAAU,MAAM;AAChB,eAAO,KAAK,aAAa,OAAO,IAAI,MAAM,OAAO,YAAY,aAAgB,YAAY,aAAa,EAAE,MAAM,OAAO,GAAG,KAAI,CAAE,GAAG,OAAO,cAAc,OAAO,iBAAiB;AAAA;AAElL;AAAA;IAEJ,OAAO,aAAa,IAAI,UAAU,MAAM,cAAc,mBAAmB;AACrE,aAAO,EAAC,GAAIQ,YAAW,eAAe,EAAE,IAClC,SACA,IAAI/E,IAAS,GAAG,MAAM,GAAG,QAAQ,GAAG,QAAQ,oBAAoB,SAAY,GAAG,aAAa,UAAU,MAAM,YAAY;AAAA;IAclI,aAAa;AACT,aAAQ,mBAAK,QAAL,mBAAK,KAAQ,QAAQ,SAAS,WAAW;AAAA,QAC7C,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,aAAa,KAAK;AAAA,MAC9B,GAAW;AAAA,QACC,MAAM,KAAK;AAAA,MACvB,CAAS;AAAA;;;;IAKL,IAAI,SAAS;AACT,aAAO,KAAK;AAAA;IAEhB,IAAI,UAAU;AACV,aAAO,KAAK,QAAQ;AAAA;IAQxB,WAAW;AACP,iBAAYb,UAAS,MAAM,KAAK,MAAM,KAAK,QAAQ,KAAK,MAAM,EAAE,KAAK,GAAG,IACpE,sBAAK,gCAAL,aACA,sBAAK,mCAAL;AAAA;IAER,cAAc;AACV,aAAO,KAAK,SAAU;AAAA;IAE1B,eAAe;AACX,aAAO,KAAK,SAAU;AAAA;IAE1B,QAAQ,MAAM,MAAM;AAChB,YAAM,SAAS,cAAc,SAAS;AAAA,QAClC;AAAA,QACA,KAAK,KAAK,WAAY;AAAA,QACtB,YAAY,KAAK;AAAA,QACjB;AAAA,MACZ,CAAS;AACD,aAAOa,IAAS,aAAa,IAAI,KAAK,UAAU,KAAK,MAAM,KAAK,cAAc,KAAK,eAAe,IAAI;AAAA;IAE1G,SAAS;AACL,aAAO;AAAA,QACH,OAAO;AAAA,QACP,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,aAAa,KAAK;AAAA,QAClB,UAAU,KAAK;AAAA,QACf,MAAM,KAAK;AAAA,QACX,cAAc,KAAK;AAAA,MACtB;AAAA;IAEL,OAAO,SAAS,MAAM;AAClB,aAAO,IAAIA,IAAS,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,aAAa,KAAK,UAAU,KAAK,MAAM,KAAK,YAAY;AAAA;KAtE1H,qBACA,oBAvBJ,qCAqDI,YAAO,WAAG;AACN,WAAO,KAAK,eAAe,OAAO,KAAK,OAAM,GAAIb,UAAS,MAAM,KAAK,WAAW;AAAA,KAEpF,eAAU,WAAG;AACT,WAAQ,mBAAK,OAAL,mBAAK,KAAO,GAAI,YAAY,mBAAmB,KAAK,IAAI;AAAA,KAzDxEa;AA+FgB8E,WAAA,WAAGE;;;;;;;;ACzGnB,WAAO,eAAc/F,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,IAAAA,SAAA,yBAAiCA,8BAA6BA,SAAwB,gBAAAA,SAAA,YAAoBA,SAAiC,yBAAA;AAC3I,IAAAA,SAAA,QAAgB;AAChB,IAAAA,SAAA,cAAsB;AACtB,IAAAA,SAAA,gBAAwBgG;AACxB,IAAAhG,SAAA,oBAA4B;AAC5B,IAAAA,SAAA,uBAA+B;AAC/B,IAAAA,SAAA,0BAAkC;AAClC,IAAAA,SAAA,cAAsB;AACtB,IAAAA,SAAA,gBAAwB;AACxB,IAAAA,SAAA,0BAAkC;AAClC,IAAAA,SAAA,gCAAwC;AACxC,IAAAA,SAAA,+BAAuC;AACvC,IAAAA,SAAA,2BAAmC;AACnC,IAAAA,SAAA,+BAAuC;AACvC,IAAAA,SAAA,kBAA0B;AAC1B,IAAAA,SAAA,cAAsB;AACtB,UAAM,UAAUP;AAChB,UAAMiD,WAAUzC;AAChB,UAAMkF,iBAAgBhF;AACtB,UAAM,uBAAuBW;AAC7B,UAAM,2BAA2BO;AACjC,UAAM4E,cAAa3E,gBAAqB;AACxC,UAAM4E,kBAAiB3E,oBAAyB;AAChD,UAAMsE,cAAarE,gBAAqB;AACxC,UAAM2E,UAAS1E;AACf,UAAM,UAAUC;AAChB,UAAMuC,YAAWtC;AACjB,UAAMyE,UAASvD;AACf,UAAM3C,YAAW6C;AAIjB,UAAM,uBAAuB;AAAA;AAAA,MAEzaAAS,gBAAgBsC,SAAQ;AAC7B,YAAM,CAAC,GAAG,CAAC,IAAIA,QAAO,MAAM,GAAG,EAAE,IAAI,MAAM;AAG3C,YAAM,OAAO,IAAI,IAAI,KAAK;AAC1B,aAAO,IAAI,KAAK,OAAO;AAAA;AAE3B,UAAM,yBAAyBc,QAAO,MAAM,MAAM,IAAI,IAAI,qBAAqB,IAAI,eAAe,CAAC,CAAC;AAIpG,IAAAnG,SAAiC,yBAAA;AAKjC,IAAAA,SAAoB,YAAA,QAAQ,KAAK,cAAcA,SAAQ,sBAAsB;AAI7E,IAAAA,SAAA,gBAAwBA,SAAQ,UAAU;AAC1C,UAAM,QAAQ;AAAA,MACV,QAAQ,gBAAgB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEH;AACD,aAAS,MAAM,MAAM;AACjB,YAAM,IAAI;AACV,aAAQ,QAAQ,SAAS,MAAM,SAAS,CAAC,KAAK,MAAM,SAAS,EAAE,YAAY,EAAE,KAAK;AAAA;AAEtF,aAAS,YAAY,MAAM;AACvB,aAAQ,QAAQ,QAAQ,KAAK,WAAW,KAAK,IAAI,KAAK,OAAO,KAAK,IAAK,CAAA,CAAC,IAAI,KAAK;AAAA;AAOrF,IAAAA,SAAA,qBAA6B;AAI7B,UAAM,eAAe;AAGrB,UAAM,gBAAgB;AAKtB,aAASgG,eAAc,OAAO;AAE1B,UAAI;AAGA,aAAK,GAAG9F,UAAS,OAAO,KAAK;AACzB,iBAAO;AACX,YAAI,iBAAiB,QAAQ,MAAM;AAC/B,iBAAO,YAAY,KAAK,IAAI,QAAQ;AAAA;AAIxC,YAAI,MAAM,KAAK;AACX,iBAAO,QAAQ,gBAAgB;AACnC,YAAI,IAAI;AACR,YAAI,OAAO,MAAM,UAAU;AACvB,cAAI,EAAE,QAAQ,2BAA2B,KAAK;AAG9C,eAAK,GAAGA,UAAS,OAAO,CAAC,KAAM,CAAC,aAAa,KAAK,CAAC,KAAK,CAAC,cAAc,KAAK,CAAC,GAAI;AAC7E;AAAA;;AAGR,cAAM,SAAS,QAAQ,KAAK,cAAc,CAAC;AAC3C,eAAO,YAAY,MAAM,KAAK,OAAO,SAASF,SAAQ,gBAChD,SACA;AAAA,cAEJ;AACF;AAAA;;AAQR,aAAS,kBAAkB,MAAM,IAAI;;AACjC,eAAOe,MAAAiF,eAAc,IAAI,MAAlB,gBAAAjF,IAAqB,aAAa,MAAM,KAAK,IAAG,GAAI,aAAY;AAAA;AAE3E,aAAS,qBAAqB,iBAAiB;AAC3C,aAAQ,mBAAmB,YACnBkD,UAAS,UAAU,eAAe,KACtC,oBAAoBjE,SAAQ,0BAC5B,mBAAoB,EAAC,IAAI,eAAe;AAAA;AAKhD,aAAS,wBAAwB,eAAe;AAC5C,UAAI,CAAC,qBAAqB,aAAa,GAAG;AACtC,eAAO;AAAA;AAEX,UAAI,kBAAkB;AAClB,eAAO;AACX,YAAM,OAAO,gBAAgB,IAAI,MAAM;AACvC,YAAM,aAAa,KAAK,IAAI,aAAa;AACzC,YAAM,QAAQ,KAAK,MAAM,aAAa,EAAE;AACxC,YAAM,UAAU,KAAK,IAAI,aAAa,EAAE;AAExC,aAAO,MAAM,IAAI,KAAK,SAAS,YAAY,IAAI,KAAK,KAAI,GAAIE,UAAS,MAAM,OAAO,CAAC;AAAA;AAEvF,aAAS,eAAemC,IAAG;AACvB,cAAO,GAAI4B,UAAS,UAAU5B,EAAC,KAAK,qBAAqBA,KAAI,EAAE,IACzD,wBAAwBA,KAAI,EAAE,IAC9B;AAAA;AAKV,UAAM,OAAO;AACb,aAAS,uBAAuB,YAAY;AACxC,cAAW,GAAA4B,UAAS,UAAU,UAAU,KAC9B,GAAA,QAAQ,KAAK,eAAe,UAAU,GAAG,CAAC0B,SAAQ;AAAA,QACpD,IAAAA;AAAA,QACA,KAAK;AAAA,MACjB,EAAU,IACA,MAAM,QAAQ,UAAU,IACpB,uBAAuB,WAAW,CAAC,CAAC,IACpC;AAAA;AAUd,aAAS,YAAY,OAAO,MAAM;AAC9B,UAAI,SAAS,QACT,OAAO,UAAU,aACjB,iBAAiBR,eAAc,eAC/B,iBAAiBc,YAAW,UAAU;AACtC;AAAA;AAEJ,UAAI,MAAM,QAAQ,KAAK,GAAG;AAEtB,eAAO,YAAY,MAAM,KAAK,CAAC,OAAO,MAAM,IAAI,CAAC;AAAA;AAErD,UAAI,iBAAiBC,gBAAe,gBAAgB,iBAAiBL,YAAW,UAAU;AACtF,eAAO,MAAM,QAAQ,OACf,SACA,EAAE,IAAI,MAAM,MAAM,KAAK,MAAM,YAAY,OAAO,QAAS;AAAA;AAEnE,cAAQ5B,UAAS,UAAU,KAAK,GAAG;AAC/B,eAAO,uBAAuB,KAAK;AAAA;AAEvC,UAAI,OAAO,UAAU,aAAgB,GAAA/D,UAAS,OAAO,KAAK,GAAG;AAGzD;AAAA;AAEJ;AAEI,cAAM,IAAI8F,eAAc,KAAK;AAC7B,YAAI,KAAK,MAAM;AACX,iBAAO,EAAE,IAAI,EAAE,MAAM,KAAK,gBAAiB;AAAA;;AAGnD,UAAI,MAAM,MAAM,KAAM;AAItB,WAAI,6BAAM,cAAa;AAAA;AAAA,MAGnB,CAAC,oBAAoB,KAAK,GAAG,GAAG;AAChC,cAAM,IAAI,QAAQ,kBAAkB,EAAE;AAAA;AAE1C;AACI,aAAQ,GAAA9F,UAAS,OAAO,GAAG;AACvB;AACJ,cAAM,IAAI8F,eAAc,GAAG;AAC3B,YAAI,KAAK,MAAM;AACX,iBAAO,EAAE,IAAI,EAAE,MAAM,KAAK,gBAAiB;AAAA;;AAGnD,YAAMP,SAAQ,KAAK,KAAK,GAAG;AAC3B,YAAM,iBAAiBA,UAAA,gBAAAA,OAAO;AAC9B,UAAIA,UAAS,QAAQ,kBAAkB,MAAM;AACzC,cAAM,YAAY,IAAI,MAAM,GAAGA,OAAM,KAAK;AAC1C,YAAI,eAAe,MAAM;AACrB,iBAAO;AAAA,YACH,IAAI;AAAA,YACJ,KAAK;AAAA,YACL;AAAA,UACH;AACL,cAAM,iBAAiB,eAAe,SAAS,MAAM,KAAK,MACrD,SAAS,eAAe,SAAS,GAAG,IAAI,KACrC,SAAS,eAAe,WAAW,GAAG;AAC9C,cAAME,MAAK,wBAAwB,aAAa;AAChD,YAAIA,OAAM,MAAM;AACZ,iBAAO,EAAE,IAAAA,KAAI,KAAK,2BAA2B,UAAW;AAAA;;AAGhE;AAAA;AAEJ,IAAA3F,SAAiC,yBAAA;AAAA,MAC7B;AAAA,MACA;AAAA;AAAA,MAEA;AAAA;AAAA,MAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA;AAAA;AAAA;AAAA,IAGH;AACD,aAAS,cAAc,GAAG,SAAS;AAC/B,YAAM,OAAOgG,eAAc,CAAC;AAC5B,UAAI,QAAQ,QAAQ,SAAS,KAAK;AAC9B;AACJ,YAAM,QAAQ,KAAK,OAAO,KAAK,IAAK,CAAA;AACpC,iBAAW/B,UAAS,UAAU,KAAK,IAAI,QAAQ,gBAAgB,SAAS,QAAQ,OAAO,IAAI;AAAA;AAE/F,aAAS,wBAAwB,GAAG,MAAM;AACtC,YAAM,YAAW,6BAAM,oCACnB,yBAAyB;AAC7B,iBAAW,WAAWjE,SAAQ,wBAAwB;AAClD,cAAMqF,UAAS,YAAY,EAAE,OAAO,CAAC;AACrC,YAAIA,WAAU;AACV;AAEJ,cAAM,UAAU,SAAS,GAAGA,QAAO,EAAE;AACrC,YAAI,WAAW,MAAM;AACjB,gBAAM,eAAe,cAAcA,QAAO,IAAI,OAAO;AACrD,cAAI,gBAAgB;AAChB,mBAAO;AAAA,cACH,IAAI,aAAa;AAAA,cACjB,KAAK,UAAU;AAAA,YAClB;AAAA;AAGT,eAAO,EAAE,IAAIA,QAAO,IAAI,KAAK,QAAS;AAAA;AAE1C;AAAA;AAEJ,aAAS,8BAA8B,GAAG,MAAM;AAC5C,WAAI,6BAAM,iCAAgC,MAAM;AAC5C,mBAAW,WAAW,KAAK,kCAAkC,CAAA,GAAI;AAC7D,cAAI,EAAE,OAAO,KAAK,MAAM;AACpB,kBAAMA,UAAS,YAAY,EAAE,OAAO,CAAC;AAIrC,gBAAIA,WAAU,QAAQ,CAAC,MAAMA,QAAO,EAAE,GAAG;AACrC,qBAAO,EAAE,IAAIA,QAAO,IAAI,KAAK,QAAS;AAAA;;;;AAKtD;AAAA;AAEJ,aAAS,6BAA6B,GAAG,MAAM;AAC3C,WAAI,6BAAM,gCAA+B;AACrC;AACJ,YAAM,KAAKa,gBAAe,aAAa,KAAK,EAAE,SAAS;AACvD,UAAI,MAAM;AACN;AACJ,iBAAW,WAAW,KAAK,kCAAkC,CAAA,GAAI;AAC7D,cAAM,KAAKA,gBAAe,aAAa,KAAK,EAAE,OAAO,CAAC;AACtD,YAAI,MAAM;AACN;AACJ,YAAI,GAAG,QAAQ,MAAM;AACjB,iBAAO,EAAE,IAAI,GAAG,MAAM,KAAK,QAAS;AAAA;AAExC,cAAM,eAAe,KAAK,OAAO,GAAG,eAAe,KAAK,IAAI,GAAG,eAAc,KAAM,EAAE;AACrF,cAAM,mBAAmB,yBAAyB,YAAY;AAC9D,cAAMP,MAAK,wBAAwB,gBAAgB;AACnD,YAAIA,OAAM,MAAM;AACZ,iBAAO,EAAE,IAAAA,KAAI,KAAK,oBAAoB,UAAU,iBAAkB;AAAA;;AAG1E;AAAA;AAMJ,UAAM,sBAAsB,qBAAqB,IAAI,eAAe;AACpE,aAAS,yBAAyB,cAAc;AAC5C,YAAM,WAAU,GAAIjD,SAAQ,SAAS,qBAAqB,CAAC,OAAO,KAAK,IAAI,KAAK,YAAY,CAAC;AAE7F,aAAO,KAAK,IAAI,UAAU,YAAY,IAAI,KAAK,UAAU;AAAA;AAK7D,aAAS,YAAY,GAAG;AACpB,aAAO,KAAK,QAAS,OAAO,MAAM,gBAAgBxC,UAAS,OAAO,CAAC,IAAK,SAAY;AAAA;AAExF,aAAS,6BAA6B,GAAG;AACrC,YAAM,aAAa;AAAA,QACf,IAAG,GAAIkG,QAAO,MAAM,GAAG,eAAe,eAAe,eAAe;AAAA,QACpE,mBAAsB,GAAA,QAAQ;AAAA,UAAM,YAAY,EAAE,YAAY;AAAA;AAAA,UAC9D,YAAY,EAAE,YAAY;AAAA;AAAA,UAC1B,CAAC,GAAG,MAAM,IAAI,MAAM;AAAA,QAAC;AAAA,MACxB;AAED,YAAM,UAAU,QAAQ,OAAO;AAAA,QAC3B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACH,GAAE,CAAC,YAAY;;AACZ,cAAM,IAAI,WAAW,OAAO;AAC5B,cAAM,MAAM,aAAaF,gBAAe,eAAe,IAAIA,gBAAe,aAAa,eAAe,CAAC;AACvG,cAAMvG,KAAI,OAAO,SAAS,IAAI,QAAQ,QAAQ,MAAM,IAAI,IAAI,MACtDoB,MAAA,IAAI,QAAQ,OAAO,EAAE,eAAe,KAAM,CAAA,MAA1C,gBAAAA,IAA6C,mBAC7C;AACN,eAAOpB,MAAK,OACN;AAAA,UACE;AAAA,UACA,GAAAA;AAAA,YAEF;AAAA,MACd,CAAK;AACD,UAAI,OAAO;AACP;AAGJ,YAAM,MAAK,GAAI,QAAQ,OAAO,qBAAqB,oBAAoB,CAAC,YAAY;;AAChF,cAAM,MAAMuG,gBAAe,aAAa,eAAe,EAAE,OAAO,CAAC;AACjE,cAAMvG,KAAI,OAAO,QAAQ,IAAI,QAAQ,QAC/BoB,MAAA,IAAI,QAAQ,OAAO,EAAE,eAAe,KAAM,CAAA,MAA1C,gBAAAA,IAA6C,mBAC7C;AACN,eAAOpB,MAAK,OACN;AAAA,UACE;AAAA,UACA,GAAAA;AAAA,YAEF;AAAA,MACd,CAAK;AACD,UAAI,MAAM;AACN;AACJ,YAAM,cAAc,GAAG,IAAI,IAAI;AAC/B,YAAM,gBAAgB,yBAAyB,cAAc,EAAE;AAC/D,cAAO,GAAI,QAAQ,KAAK,wBAAwB,aAAa,GAAG,CAACgG,SAAQ;AAAA,QACrE,IAAAA;AAAA,QACA,KAAK,kBAAkB,GAAG,OAAO,QAAQ,IAAI,OAAO;AAAA,QACtD;AAAA;AAEN,aAAS,gBAAgB,GAAG,GAAG;AAC3B,YAAM,KAAKK,eAAc,CAAC;AAC1B,YAAM,KAAKA,eAAc,CAAC;AAC1B,aAAQ,MAAM,QACV,MAAM,SACL,GAAG,OAAO,EAAE,KAAK,GAAG,OAAO,KAAK,IAAK,CAAA,MAAM,GAAG,OAAO,KAAK,IAAK,CAAA;AAAA;AAExE,aAAS,YAAY,OAAO,IAAI;;AAC5B,YAAM,WAASjF,MAAAiF,eAAc,KAAK,IAAI,MAAvB,gBAAAjF,IAA0B,WACrC,KAAAiF,eAAc,KAAK,QAAQ,MAA3B,mBAA8B,SAC9B,wBAAwB,KAAK,eAAe;AAChD,cAAW,GAAA9F,UAAS,OAAO,MAAM,KAAK,WAAWF,SAAQ,gBAAgB,SAAY;AAAA;;;;;;;;ACrdzF,SAAO,eAAe,aAAS,cAAc,EAAE,OAAO,MAAM;AACzC,cAAA,cAAG;AACD,cAAA,gBAAG;AACT,cAAA,UAAG;AAClB,QAAM,UAAUP;AAChB,QAAMS,YAAWD;AACjB,QAAM,cAAcE,iBAAsB;AAC1C,QAAM,WAAW;AAAA;AAAA;AAAA,IAGb,EAAE,KAAK,cAAc,mBAAmB,MAAO;AAAA,IAC/C,EAAE,KAAK,YAAY,mBAAmB,KAAM;AAAA,IAC5C,EAAE,KAAK,SAAS,mBAAmB,KAAM;AAAA,EAC5C;AACD,YAAU,YAAY,MAAM;AACxB,UAAM,gBAAmB,GAAAD,UAAS,UAAU,KAAK,WAAW;AAC5D,eAAW,UAAU,KAAK,kBAAkB,CAAC,EAAE,GAAG;AAC9C,iBAAW,WAAW,UAAU;AAC5B,cAAM;AAAA,UACF,KAAK,SAAS,QAAQ;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,mBAAmB,QAAQ;AAAA,UAC3B;AAAA,QACH;AAAA;;;AAIb,WAAS,cAAc,MAAM,MAAM;AAC/B,UAAMP,MAAI,GAAIO,UAAS,KAAK,IAAI,EAAE,KAAM;AACxC,QAAIP,GAAE,WAAW;AACb;AACJ,UAAM,iBAAgB,GAAI,YAAY,aAAaA,EAAC;AACpD,UAAM,SAAQ,+CAAe,cAAaA;AAC1C,eAAW,MAAM,MAAM;AACnB,YAAM,KAAK,QAAQ,SAAS,WAAW,OAAO,GAAG,KAAK;AAAA,QAClD,SAAS;AAAA,QACT,OAAM,+CAAe,OAAM,GAAG,QAAQ,YAAY;AAAA,MAC9D,CAAS;AACD,UAAI,MAAM,QAAQ,CAAC,GAAG;AAClB;AACJ,YAAM,aAAY,+CAAe,OAAM,SAAS,GAAG,QAAQ,QAAQ,GAAG,SAAS,YAAY;AAC3F,UAAI,gBAAe,+CAAe,OAAM,QAAQ,YAAY,QAAQ,GAAG;AACvE,UAAI,gBAAgB,MAAM;AAItB,cAAM,MAAM,QAAQ,SAAS,WAAW,OAAO,GAAG,KAAK,EAAE,SAAS,MAAM;AACxE,uBAAe,GAAG,SAAS,IAAI;AAAA;AAEnC,aAAO;AAAA,QACH;AAAA,QACA,KAAK,GAAG;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA,mBAAmB,GAAG,qBAAqB;AAAA,MAC9C;AAAA;AAEL;AAAA;AAEJ,WAAS,QAAQ,MAAM;AAKnB,WAAO,KAAK,IAAI,QAAQ,KAAK,MAAM;AAAA,MAC/B,eAAe,CAAC,KAAK;AAAA,MACrB,GAAG,KAAK;AAAA,IAChB,CAAK;AAAA;;;;;;;;ACpEL,SAAO,eAAeuG,cAAS,cAAc,EAAE,OAAO,MAAM;AACxCA,eAAA,eAAG;AACvB,QAAM,UAAUzG;AAChB,QAAMqG,cAAa7F,gBAAqB;AACxC,QAAM,UAAUE;AAChB,QAAMX,YAAWsB;AACjB,QAAMZ,YAAWmB;AACjB,QAAM,gBAAgBC,mBAAwB;AAC9C,QAAM,cAAcC,iBAAsB;AAI1C,MAAA,kBAAAR,MAAA,MAAmB;AAAA,IA0If,YAAY,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,aAAa,iBAAiB,UAAU,UAAU,cAAc;AAzIpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6HA;AACA;AAEI,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,MAAM;AACX,WAAK,OAAO;AACZ,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,cAAc;AACnB,WAAK,kBAAkB;AACvB,WAAK,WAAW;AAChB,WAAK,WAAW;AAChB,WAAK,eAAe;AACpB,WAAK,WAAW,YAAY,aAAa,EAAE,UAAU,iBAAiB;AAAA;IA1I1E,OAAO,KAAK,WAAWuE,cAAa;AAChC,aAAO,qBAAqBvE,MACtB,aACI,GAAAb,UAAS,OAAO,SAAS,IACzB,SACA,KAAK,eAAe,WAAWoF,YAAW,KACxC,KAAK,QAAQ,WAAWA,YAAW,KACnC,KAAK,cAAc,WAAWA,YAAW;AAAA;IAEzD,OAAO,QAAQ,KAAKA,cAAa;AAC7B,WAAQ,GAAApF,UAAS,OAAO,GAAG,KAAK,QAAQ,IAAI,MAAM,OAAO;AACrD,eAAO;AAGX,aAAO,sBAAK,uCAAL,WAAmB,MAAS,GAAA,cAAc,aAAa;AAAA,QAC1D,gBAAgB,CAAC,cAAc,YAAY,QAAQ;AAAA,QACnD,aAAAoF;AAAA,OACH;AAAA;;;;;;;;;;;IAYL,OAAO,SAAS,MAAMA,cAAa;AAC/B,WAAQ,GAAApF,UAAS,OAAO,IAAI;AACxB,eAAO;AACX;AAAA;AAAA,QAEA,KAAK,eAAe,MAAMoF,YAAW,KACjC,KAAK,cAAc,MAAMA,YAAW;AAAA;AAAA;;;;;;;;;;;;IAuB5C,OAAO,eAAe,MAAMA,cAAa;AACrC,WAAQ,GAAApF,UAAS,OAAO,IAAI;AACxB,eAAO;AACX,aAAQ,sBAAK,uCAAL,WAAmB,OAAM,GAAI,cAAc,aAAa,EAAE,gBAAgB,CAAC,YAAY,QAAQ,GAAG,aAAAoF,aAAa,CAAA;AAAA;AAAA,MAGnH,KAAK,QAAQ,MAAMA,YAAW;AAAA;IAetC,OAAO,cAAc,MAAMA,cAAa;AACpC,cAAW,GAAApF,UAAS,OAAO,IAAI,IACzB,SACA,sBAAK,uCAAL,WAAmB,MAAM,sBAAK,2CAAL,WAAuBoF;AAAA;IAE1D,OAAO,aAAa,IAAI,MAAM;;AAC1B,UAAI,MAAM,QAAQ,CAAC,GAAG,WAAW,GAAG,SAAS,KAAK,GAAG,SAAS,GAAG;AAC7D,eAAO;AAAA;AAEX,aAAO,IAAIvE,IAAa,GAAG,MAAM,GAAG,OAAO,GAAG,KAAK,GAAG,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,gBAAgB,KAAK,UAAS,6BAAM,qBACnH,SACA,GAAG,aAAa,GAAG,WAAW,YAAY,yBAAyB,SAAY,GAAG,QAAQ,6BAAM,UAAU,GAAG,YAAY,UAAQA,MAAA,GAAG,SAAH,gBAAAA,IAAS,UAAS,YAAY,UAAU,OACzK,SACA,GAAG,UAAU,6BAAM,YAAY;AAAA;;;;;;;;;;;;;IAczC,OAAO,WAAW,QAAQ,UAAU,IAAI;AACpC,UAAI,QAAQ,QAAQ,QAChB,CAAC,YAAY,eAAe,YAAY,SAAS,EAAE,SAAS,QAAQ,IAAI,GAAG;AAC3E,eAAO,QAAQ;AAAA;AAEnB,UAAI,KAAK,QAAQ,SAAS,WAAW,QAAQ;AAAA,QACzC,OAAOvB,UAAS,MAAM,SAAS,UAAU;AAAA,MACrD,CAAS;AACD,UAAI,QAAQ,QAAQ,MAAM;AACtB,aAAK,GAAG,QAAQ,YAAY,WAAW,EAAE,eAAe,MAAM;AAAA;AAIlE,aAAO,KAAK,aAAa,IAAI,EAAE,UAAU,QAAQ,UAAU;AAAA;IAE/D,OAAO,IAAI,OAAO,IAAI;AAClB,aAAO,KAAK,WAAW,KAAK,IAAG,GAAI,IAAI;AAAA;IAkB3C,IAAI,SAAS;AACT,aAAO,KAAK;AAAA;IAEhB,IAAI,UAAU;AACV,aAAO,KAAK,QAAQ;AAAA;IAExB,IAAI,oBAAoB;AACpB,aAAO,KAAK,eAAe;AAAA;IAE/B,QAAQ,MAAM,MAAM;AAChB,YAAM,SAAS,cAAc,SAAS;AAAA,QAClC;AAAA,QACA,KAAK,KAAK,WAAY;AAAA,QACtB,YAAY,KAAK;AAAA,QACjB;AAAA,MACZ,CAAS;AACD,aAAOuB,IAAa,aAAa,IAAI;AAAA,QACjC,UAAU,KAAK;AAAA,QACf,mBAAmB,KAAK,eAAe;AAAA,QACvC,eAAc,6BAAM,iBAAgB;AAAA,MAChD,CAAS;AAAA;;;;;IAML,WAAW,cAAc;AACrB,aAAQ,mBAAK,QAAL,mBAAK,KAAQ,QAAQ,SAAS,WAAW;AAAA,QAC7C,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,KAAK,KAAK;AAAA,QACV,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,aAAa,KAAK;AAAA,MAC9B,GAAW;AAAA,QACC,MAAM,gBAAgB,KAAK;AAAA,MACvC,CAAS;AAAA;IAEL,eAAe,cAAc;AACzB,aAAO,KAAK,WAAW,YAAY,EAAE,cAAe;AAAA;IAExD,SAAS;AACL,aAAO,KAAK,WAAY,EAAC,SAAU;AAAA;IAEvC,YAAY,UAAU,IAAI;AACtB,cAAO,GAAI,QAAQ,QAAQ,KAAK,WAAU,EAAG,MAAM;AAAA,QAC/C,sBAAsB,QAAQ,wBAAwB,KAAK,eAAe;AAAA,QAC1E,eAAe,KAAK,WAAW,QAAQ,kBAAkB;AAAA,OAC5D,CAAC;AAAA;IAEN,eAAe;AACX,cAAW,GAAA+E,YAAW,gBAAgB,KAAK,WAAU,GAAI;AAAA,QACrD,eAAe,KAAK;AAAA,QACpB,qBAAqB,KAAK,eAAe;AAAA,MACrD,CAAS;AAAA;IAEL,WAAW;AACP,aAAO,KAAK,YAAa;AAAA;;;;IAK7B,WAAW;AACP,aAAO,KAAK,WAAY,EAAC,SAAU;AAAA;IAEvC,IAAI,UAAU;AACV,aAAO,KAAK,WAAU,EAAG;AAAA;IAE7B,SAAS;AACL,aAAO;AAAA,QACH,OAAO;AAAA,QACP,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,KAAK,KAAK;AAAA,QACV,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,aAAa,KAAK;AAAA,QAClB,iBAAiB,KAAK;AAAA,QACtB,UAAU,KAAK;AAAA,QACf,UAAU,KAAK;AAAA,QACf,cAAc,KAAK;AAAA,MACtB;AAAA;;;;IAKL,OAAO,SAAS,MAAM;AAClB,aAAO,IAAI/E,IAAa,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,aAAa,KAAK,iBAAiB,KAAK,UAAU,KAAK,UAAU,KAAK,YAAY;AAAA;IAEzL,eAAe,QAAQ,aAAa,KAAK+E,YAAW,UAAU;;AAC1D,YAAM,aAAa,OAAO;AAC1B,UAAI,cAAc,QAAQ,CAAC,OAAO;AAC9B;AACJ,eAAQ/E,MAAA,KAAK,QAAQ,YAAY,EAAE,eAAe,MAAK,CAAE,MAAjD,gBAAAA,IAAoD,QAAQ,QAAQ,kBACxE,UAAK,QAAQ,YAAY,EAAE,eAAe,KAAI,CAAE,MAAhD,mBAAmD,QAAQ,QAAQ;AAAA;IAE3E,QAAQ,QAAQ,aAAa,KAAK+E,YAAW,UAAU;AACnD,YAAM,KAAK,KAAK,SAAU;AAC1B,YAAM,WAAW,OAAO,SAAU;AAClC,aAAO,KAAK,IAAI,KAAK,QAAQ,KAAK,aAAa,OAAO;AAAA;IAE1D,KAAK,UAAU;AACX,UAAI,KAAK,KAAK,WAAU,EAAG,KAAK,QAAQ;AACxC,UAAI,CAAC,KAAK,SAAS;AACf,aAAK,GAAG,QAAQ,YAAY,WAAW,EAAE,eAAe,MAAM;AAAA;AAElE,aAAO/E,IAAa,aAAa,IAAI,IAAI;AAAA;KApQjD,sCAiDW,kBAAa,SAAC,MAAM,MAAM;AAC7B,UAAM,UAAa,GAAA,cAAc,eAAe,MAAM,IAAI;AAC1D,WAAO,UAAU,OACX,SACAA,IAAa,aAAa,OAAO,IAAI;AAAA,MACnC,UAAU;AAAA,MACV,mBAAmB,OAAO;AAAA,MAC1B,cAAc,OAAO;AAAA,IACrC,CAAa;AAAA,KAqBD,sBAAiB,WAACuE,cAAa;AAEnC,UAAM,UAAU;AAAA,MACZ;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,IACH;AACD,UAAM,QAAO,GAAIpF,UAAS,UAAUoF,YAAW,IAAIA,eAAc,YAAY;AAC7E,eAAW,OAAO,SAAS;AACvB,YAAM,EAAE,KAAU,MAAM,cAAc,KAAM;AAAA;KAgDpD,qBAxIJ,aAAAvE,KAAA,uBAAAA;AAuQoBmF,eAAA,eAAGG;;;;;;;;ACnRvB,WAAO,eAAcrG,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,IAAAA,SAAA,QAAgBA,SAAiB,SAAAA,SAAA,WAAmBA,SAAmB,WAAA;AACvE,IAAAA,SAAA,gBAAwB;AACxB,IAAAA,SAAA,eAAuB;AACvB,IAAAA,SAAA,iBAAyB;AACzB,IAAAA,SAAA,eAAuB;AACvB,IAAAA,SAAA,MAAc;AACd,UAAM,UAAUP;AAChB,UAAMwG,cAAahG,gBAAqB;AACxC,UAAMiG,kBAAiB/F,oBAAyB;AAChD,UAAM0F,cAAa/E,gBAAqB;AACxC,aAAS,cAAc,IAAI;AACvB,aAAO,MAAM,QAAQ,GAAG;AAAA;AAE5B,IAAAd,SAAA,WAAmB;AACnB,IAAAA,SAAA,WAAmB,KAAKA,SAAQ;AAChC,IAAAA,SAAA,SAAiB,KAAKA,SAAQ;AAC9B,IAAAA,SAAA,QAAgB,KAAKA,SAAQ;AAC7B,aAAS,aAAa,GAAG;AACrB,aAAQ,aAAakG,gBAAe,gBAChC,aAAaD,YAAW,YACxB,aAAaJ,YAAW,YACxB,QAAQ,SAAS,WAAW,CAAC;AAAA;AAErC,aAAS,eAAe,GAAG,MAAM;AAC7B,aAAO,EAAE,SAAS,uBACb,6BAAM,yBAAwB,OAAO,OAAO,QAC5C,6BAAM,mBAAkB,QAAQ,KAAK,KAAK;AAAA;AAEnD,aAAS,aAAa,GAAG;;AACrB,UAAI,QAAQ,SAAS,WAAW,CAAC,GAAG;AAChC,eAAO,eAAe,CAAC;AAAA,aAEtB;AACD,gBAAO9E,MAAA,uBAAG,iBAAH,gBAAAA,IAAA;AAAA;;AAGf,aAAS,IAAI,GAAG,MAAM;AAClB,aAAO,EAAE,SAAS,eAAc,6BAAM,yBAAwB,OAAO,SAAS,GAAG;AAAA;;;;;;;;ACtCrF,SAAO,eAAekF,UAAS,cAAc,EAAE,OAAO,MAAM;AAC5CA,WAAA,WAAG;AACnB,QAAM,UAAUxG;AAChB,QAAMqG,cAAa7F,gBAAqB;AACxC,QAAM,UAAUE;AAChB,QAAMD,YAAWY;AACjB,QAAM,eAAe;AACrB,QAAM,cAAc;AAIpB,MAAA,aAAA,MAAMwF,UAAS;AAAA,IAwDX,YAAY,MACZ,OACA,KACA,UAAU;AA1DV;AACA;AACA;AACA;AAwDI,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,MAAM;AACX,WAAK,WAAW;AAAA;IA1DpB,OAAO,KAAK,WAAW;AACnB;AAAA;AAAA,QAEA,KAAK,eAAe,SAAS,KACzB,KAAK,QAAQ,SAAS,KACtB,KAAK,cAAc,SAAS;AAAA;AAAA;IAEpC,OAAO,QAAQ,MAAM;AACjB,aAAO,aAAa,MAAS,GAAApG,UAAS,KAAK,IAAI,EAAE,KAAM,CAAA,IACjD,KAAK,aAAa,QAAQ,SAAS,QAAQ,IAAI,GAAG,IAAI,IACtD;AAAA;IAEV,OAAO,aAAa,MAAM,MAAM;AAC5B,WAAQ,GAAAA,UAAS,OAAO,IAAI;AACxB;AACJ,cAAO,GAAIA,UAAS,KAAK,IAAI,EAAE,KAAM;AACrC,iBAAW,OAAO,MAAM;AACpB,cAAM,KAAK,QAAQ,SAAS,WAAW,MAAM,GAAG;AAChD,gBAAQ4F,YAAW,eAAe,EAAE,GAAG;AACnC,iBAAO,KAAK,aAAa,IAAI,IAAI;AAAA;;AAGzC;AAAA;;;;;IAMJ,OAAO,eAAe,MAAM;AACxB,aAAO,aAAa,MAAS,GAAA5F,UAAS,KAAK,IAAI,EAAE,KAAM,CAAA,IACjD,KAAK,aAAa,MAAM,CAAC,WAAW,WAAW,OAAO,CAAC,IACvD;AAAA;IAEV,OAAO,cAAc,MAAM;AAGvB,aAAO,YAAY,MAAS,GAAAA,UAAS,KAAK,IAAI,EAAE,KAAM,CAAA,IAChD,KAAK,aAAa,MAAM,CAAC,WAAW,UAAU,CAAC,IAC/C;AAAA;IAEV,OAAO,SAAS,MAAM;AAClB,cAAO,GAAI,QAAQ,mBAAmB;AAAA,QAClC,MAAM,KAAK,eAAe,IAAI;AAAA,QAC9B,MAAM,KAAK,cAAc,IAAI;AAAA,MACzC,CAAS;AAAA;IAEL,OAAO,aAAa,IAAI,UAAU;AAC9B,cAAW,GAAA4F,YAAW,eAAe,EAAE,IACjC,IAAIQ,UAAS,GAAG,MAAM,GAAG,OAAO,GAAG,KAAK,QAAQ,IAChD;AAAA;IAWV,SAAS;AACL,aAAO,IAAI,KAAK,KAAK,MAAM,KAAK,QAAQ,GAAG,KAAK,GAAG;AAAA;;;;;;IAOvD,SAAS,UAAU,KAAKR,YAAW,QAAQ;AACvC,aAAO,KAAK,SAAS,QAAS,IAAG;AAAA;IAErC,cAAc;AACV,aAAO,KAAK,SAAS,GAAG;AAAA;IAE5B,eAAe;AACX,aAAO,KAAK,SAAS,GAAG;AAAA;IAE5B,SAAS,MAAM,KAAK;AAChB,aAAO,GAAG,KAAK,IAAI,GAAG,GAAG,IAAG,GAAI5F,UAAS,MAAM,KAAK,OAAO,KAAK,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA;IAElF,SAAS;AACL,aAAO;AAAA,QACH,OAAO;AAAA,QACP,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,KAAK,KAAK;AAAA,QACV,UAAU,KAAK;AAAA,MAClB;AAAA;IAEL,OAAO,SAAS,MAAM;AAClB,aAAO,IAAIoG,UAAS,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,QAAQ;AAAA;;AAG1DL,WAAA,WAAGK;;;;;AC7GnB,OAAO,eAAe,kBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACpC,iBAAA,mBAAG;AACG,iBAAA,yBAAG;AACV,iBAAA,kBAAG;AAC1B,MAAMrC,aAAWxE;AACjB,MAAM,WAAWQ;AAEjB,MAAM,uBAAuB;AAC7B,MAAM,wBAAwB;AAC9B,MAAM,6BAA6B,MAAM;AAAA,EACrC,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACpB;AACA;AAOA,SAAS,iBAAiB,OAAO;AAC7B,MAAI,EAAC,+BAAO,SAAQ;AAChB,UAAM,IAAI,qBAAqB,8BAA8B;AAAA,EACrE;AACI,MAAI;AACJ,MAAI;AACJ,aAAW,SAAS,kBAAkB,KAAK,GAAG;AAC1C,QAAI,CAAC,MAAM,WAAW;AAClB,YAAM,IAAI,qBAAqB,4CAA4C;AAAA,IACvF;AACQ,QAAI,MAAM,cAAc,OAAO,MAAM,cAAc,KAAK;AACpD,UAAI,aAAa,QAAW;AACxB,cAAM,IAAI,qBAAqB,gCAAgC;AAAA,MAC/E;AACY,iBAAW,iBAAiB,KAAK;AAAA,IAC7C,OACa;AACD,UAAI,cAAc,QAAW;AACzB,cAAM,IAAI,qBAAqB,iCAAiC;AAAA,MAChF;AACY,kBAAY,iBAAiB,KAAK;AAAA,IAC9C;AAAA,EACA;AACI,QAAM,UAAU,CAAE;AAClB,MAAI,aAAa;AACb,YAAQ,KAAK,UAAU;AAC3B,MAAI,cAAc;AACd,YAAQ,KAAK,WAAW;AAC5B,MAAI,aAAa,UAAa,cAAc,QAAW;AACnD,UAAM,IAAI,qBAAqB,WAAW,QAAQ,KAAK,OAAO,CAAC,EAAE;AAAA,EACzE,OACS;AACD,WAAO,EAAE,UAAU,UAAW;AAAA,EACtC;AACA;AAMA,SAAS,kBAAkB,OAAO;AAC9B,MAAI,EAAC,+BAAO,SAAQ;AAChB,UAAM,IAAI,qBAAqB,8BAA8B;AAAA,EACrE;AACI,QAAM,SAAS,CAAE;AACjB,MAAI,YAAY;AAChB,KAAG;AACC,UAAM,QAAQ,gBAAgB,SAAS;AACvC,gBAAY,MAAM,aAAa;AAC/B,WAAO,MAAS,GAAA,SAAS,MAAM,OAAO,WAAW,CAAC;AAAA,EAC1D,SAAa,UAAU,SAAS;AAC5B,SAAO;AACX;AAOA,SAAS,uBAAuB,OAAO;AACnC,MAAI,EAAC,+BAAO,SAAQ;AAChB,UAAM,IAAI,qBAAqB,8BAA8B;AAAA,EACrE;AACI,QAAM,QAAQ,gBAAgB,KAAK;AACnC,MAAI,MAAM,WAAW,KAAK;AACtB,UAAM,IAAI,qBAAqB,iCAAiC;AAAA,EACxE;AACI,MAAI,CAAC,MAAM,WAAW;AAClB,UAAM,IAAI,qBAAqB,mBAAmB;AAAA,EAC1D;AACI,SAAO,EAAE,SAAS,iBAAiB,KAAK,GAAG,WAAW,MAAM,UAAW;AAC3E;AAOA,SAAS,gBAAgB,OAAO;AAC5B,MAAI,EAAC,+BAAO,SAAQ;AAChB,UAAM,IAAI,qBAAqB,8BAA8B;AAAA,EACrE;AACI,QAAM,aAAa;AACnB,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,eAAe,MAAM,UAAW;AACtC,MAAIwF;AACJ,MAAI;AACJ,MAAKA,SAAQ,aAAa,MAAM,UAAU,GAAI;AAC1C,aAAS;AAAA,EACjB,WACcA,SAAQ,aAAa,MAAM,SAAS,GAAI;AAC9C,aAAS;AAAA,EACjB,WACcA,SAAQ,aAAa,MAAM,QAAQ,GAAI;AAC7C,aAAS;AAAA,EACjB,OACS;AACD,UAAM,IAAI,qBAAqB;AAAA;AAAA;AAAA;AAAA,+CAIqB;AAAA,EAC5D;AACI,MAAI,CAACA,OAAM,QAAQ;AACf,UAAM,IAAI,qBAAqB,uCAAuC;AAAA,EAC9E;AACI,QAAM,EAAE,SAAS,YAAY,SAAS,YAAY,SAAS,YAAY,WAAW,cAAc,UAAY,IAAGA,OAAM;AACrH,QAAM,YAAY,6CAAc;AAChC,QAAM,UAAU,WAAW,UAAU;AACrC,MAAI;AACJ,MAAI;AACJ,MAAI,WAAW,OAAO;AAClB,cAAU,SAAS,YAAY,EAAE;AACjC,cAAU,WAAW,UAAU;AAC/B,QAAI,WAAW,IAAI;AACf,YAAM,IAAI,qBAAqB,kCAAkC;AAAA,IAC7E;AACQ,QAAI,WAAW,IAAI;AACf,YAAM,IAAI,qBAAqB,yCAAyC;AAAA,IACpF;AAAA,EACA,WACa,WAAW,MAAM;AACtB,cAAU,WAAW,UAAU;AAC/B,QAAI,WAAW,IAAI;AACf,YAAM,IAAI,qBAAqB,yCAAyC;AAAA,IACpF;AAAA,EACA;AACI,QAAM,aAAa,cAAc,OAAO,cAAc,MAChD,uBACA;AACN,MAAI,KAAK,IAAI,OAAO,IAAI,YAAY;AAChC,UAAM,IAAI,qBAAqB,4BAA4B,UAAU,QAAQ,UAAU,QAAQ,SAAS,YAAY;AAAA,EAC5H;AACI,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,uCAAW;AAAA,EACzB;AACL;AACA,SAAS,iBAAiB,OAAO;AAC7B,MAAI,UAAU,MAAM;AACpB,cAAY,MAAM,WAAW,KAAK;AAClC,cAAY,MAAM,WAAW,KAAK;AAClC,MAAI,MAAM,cAAc,OAAO,MAAM,cAAc,KAAK;AACpD,cAAU,CAAC,KAAK,IAAI,OAAO;AAAA,EACnC;AACI,QAAM,aAAa,MAAM,cAAc,OAAO,MAAM,cAAc,MAC5D,uBACA;AACN,QAAM,OAAO,MAAM,cAAc,OAAO,MAAM,cAAc,MACtD,aACA;AACN,MAAI,KAAK,IAAI,OAAO,IAAI,YAAY;AAChC,UAAM,IAAI,qBAAqB,4BAA4B,UAAU,QAAQ,UAAU,QAAQ,IAAI,EAAE;AAAA,EAC7G;AAEI,aAAWxB,WAAS,sBAAsB,SAAS,CAAC;AACxD;ACtLA,OAAO,eAAe,KAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACpC,IAAA,mBAAG;AAC3B,MAAM,qBAAqBxE;AAC3B,MAAM,WAAWQ;AACjB,MAAM,SAASE;AACf,MAAM,WAAWW;AACjB,MAAM,mBAAmB;AACzB,SAAS,cAAc,UAAU;AAC7B,OAAQ,GAAA,SAAS,OAAO,QAAQ;AAC5B;AACJ,QAAM,CAAC,KAAK,GAAG,KAAI,GAAI,SAAS,KAAK,QAAQ,EAAE,MAAM,OAAO,EAAE,IAAI,SAAS,OAAO;AAClF,SAAO,OAAO,QAAQ,OAAO,OAAO,CAAC,KAAK,GAAG,IAAI;AACrD;AACA,SAAS,kBAAkB,QAAQ,UAAU;AACzC,MAAI,EAAE,OAAO,IAAG,IAAK;AACrB,QAAM,EAAE,UAAU,eAAc,IAAK;AACrC,QAAM,EAAE,qBAAqB,qBAAqB,IAAK,IAAG;AAC1D,MAAI,YAAY;AAChB,SACI,2BAAK,OAAO,cAAc,MAAM,GAAG,QAC9B,QAAQ,IAAI,sBAAsB;AAE3C,MAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AACvB,gBAAY;AACZ,aAAS,KAAK,cAAc,cAAc,KAAK,KAAK,kBAAkB;AACtE,WAAO,EAAE,OAAO,KAAK,UAAW;AAAA,EACxC;AAEI,MAAI,QAAQ,qBAAqB;AAC7B,YAAQ,CAAC,KAAK,IAAI,KAAK;AAAA,EAC/B;AAEI,MAAI,YAAY,QACZ,KAAK,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,kBAAkB;AACnE,QAAI,KAAK,KAAK,QAAQ,MAAM,KAAK,KAAK,KAAK,GAAG;AAC1C,cAAQ,CAAC;AACT,eAAS,KAAK,gBAAgB,cAAc,oCAAoC;AAAA,IAC5F;AAEQ,UAAMyF,eAAc,WAAW,IAAI,sBAAsB;AACzD,QAAI,QAAQA,cAAa;AACrB,YAAMA;AACN,eAAS,KAAK,gBAAgB,cAAc,UAAUA,YAAW,+BAA+B;AAAA,IAC5G;AAAA,EACA;AAEI,QAAM,cAAc,QAAQ,IAAI,sBAAsB;AACtD,MAAI,OAAO,QAAQ,QAAQ,aAAa;AACpC,aAAS,KAAK,gBAAgB,cAAc,UAAU,GAAG,2BAA2B;AAAA,EAC5F;AACI,QAAM;AACN,SAAO,EAAE,OAAO,KAAK,UAAW;AACpC;AACA,SAAS,iBAAiB,MAAM,MAAM;AAClC,MAAI,SAAS;AACb,QAAM,WAAW,CAAE;AACnB,QAAM,UAAa,GAAA,OAAO,MAAM,MAAM,eAAe,kBAAkB,gBAAgB,iBAAiB;AACxG,OAAQ,GAAA,SAAS,gBAAgB,KAAK,WAAW,GAAG;AAChD,QAAI;AACA,YAAM,OAAO,GAAG,mBAAmB,kBAAkB,KAAK,WAAW;AACrE,UAAI,KAAK,yBAAyB,QAC9B,IAAI,aAAa,KACjB,IAAI,cAAc,GAAG;AACrB,iBAAS,KAAK,4CAA4C;AAAA,MAC1E,OACiB;AACD,iBAAS;AACT,eAAO,cAAc,IAAI;AACzB,eAAO,eAAe,IAAI;AAC1B,eAAO,iBAAiB,IAAI,WAAW,IAAI,MAAM;AACjD,eAAO,kBAAkB,IAAI,YAAY,IAAI,MAAM;AAAA,MACnE;AAAA,IACA,SACe,GAAG;AACN,eAAS,KAAK,gCAAgC,CAAC;AAAA,IAC3D;AAAA,EACA;AAEI,MAAI,CAAC,cAAc,SAAS,gBAAgB,KAAK,WAAW,MAAS,GAAA,SAAS,gBAAgB,KAAK,YAAY,GAAG;AAC9G,QAAI;AACA,YAAM,OAAO,GAAG,mBAAmB,iBAAiB,KAAK,WAAW;AACpE,YAAM,OAAO,GAAG,mBAAmB,iBAAiB,KAAK,YAAY;AACrE,UAAI,KAAK,yBAAyB,QAC9B,IAAI,YAAY,KAChB,IAAI,YAAY,GAAG;AACnB,iBAAS,KAAK,yDAAyD;AACvE,eAAO,EAAE,SAAS,MAAM,SAAU;AAAA,MAClD,OACiB;AACD,eAAO,cAAc,IAAI;AACzB,eAAO,eAAe,IAAI;AAC1B,eAAO,iBAAiB,IAAI;AAC5B,eAAO,kBAAkB,IAAI;AAAA,MAC7C;AAAA,IACA,SACe,GAAG;AACN,eAAS,KAAK,gDAAgD,CAAC;AAAA,IAC3E;AAAA,EACA;AAEI,MAAI,EAAK,GAAA,SAAS,UAAU,OAAO,WAAW,KAAK,EAAC,GAAI,SAAS,UAAU,OAAO,YAAY,GAAG;AAC7F,WAAO,CAAE;AAAA,EACjB;AAEI,MAAI,KAAK,yBAAyB,QAC9B,OAAO,gBAAgB,KACvB,OAAO,iBAAiB,GAAG;AAC3B,aAAS,KAAK,4CAA4C;AAC1D,WAAO,EAAE,SAAS,MAAM,SAAU;AAAA,EAC1C;AAEI,QAAM,CAAC,QAAQ,MAAM,IAAI,cAAc,KAAK,mBAAmB,KAAK;AAAA,IAChE;AAAA,IACA;AAAA,EACH;AACD,MAAI,YAAY;AAEhB,OAAQ,GAAA,SAAS,UAAU,OAAO,WAAW,GAAG;AAC5C,UAAM,iBAAiB,kBAAkB;AAAA,MACrC,OAAO,OAAO;AAAA,MACd,KAAK,OAAO;AAAA,MACZ,UAAU;AAAA,MACV,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,KAAK;AAAA,MACL,gBAAgB;AAAA,IACnB,GAAE,QAAQ;AACX,WAAO,cAAc,eAAe;AACpC,WAAO,iBAAiB,eAAe;AACvC,gBAAY,aAAa,eAAe;AAAA,EAChD;AAEI,OAAQ,GAAA,SAAS,UAAU,OAAO,YAAY,GAAG;AAC7C,UAAM,kBAAkB,kBAAkB;AAAA,MACtC,OAAO,OAAO;AAAA,MACd,KAAK,OAAO;AAAA,MACZ,UAAU;AAAA,MACV,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,KAAK;AAAA,MACL,gBAAgB;AAAA,IACnB,GAAE,QAAQ;AACX,WAAO,eAAe,gBAAgB;AACtC,WAAO,kBAAkB,gBAAgB;AACzC,gBAAY,aAAa,gBAAgB;AAAA,EACjD;AACI,SAAO,YACD,EAAE,SAAS,MAAM,SAAQ,IACzB,EAAE,QAAQ,SAAS,OAAO,SAAU;AAC9C;;ACrJA,OAAO,eAAe,aAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACzC,YAAA,cAAG;AAIH,YAAA,cAAG;AAAA;;ACLtB,MAAI9D,mBAAmB1C,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,QAAM;AAAA;AAE/D,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA;AAEf,MAAImE,sBAAsBnE,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,WAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AAAA,EACtE,IAAK,SAAS,GAAG,GAAG;AAChB,MAAE,SAAS,IAAI;AAAA,EACnB;AACA,MAAIoE,gBAAgBpE,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,QAAI,OAAO,IAAI,WAAY,QAAO;AAClC,QAAI,SAAS,CAAE;AACf,QAAI,OAAO;AAAM,eAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG,CAAA0C,iBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvI,IAAAyB,oBAAmB,QAAQ,GAAG;AAC9B,WAAO;AAAA,EACV;AACD,SAAO,eAAclE,UAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,EAAAA,SAAA,WAAmBA,SAAiC,yBAAAA,SAAA,uBAA+B;AACnF,EAAAA,SAAA,UAAkB;AAClB,QAAMwG,mBAAkB/G;AACxB,QAAMkF,SAAQR,cAAalE,YAAoB;AAC/C,QAAMyC,WAAUvC;AAChB,QAAMgF,iBAAgBrE;AACtB,QAAM,YAAYO;AAClB,QAAM,2BAA2BC;AACjC,QAAMmF,uBAAsBlF;AAC5B,QAAM0E,cAAazE,gBAAqB;AACxC,QAAM0E,kBAAiBzE,oBAAyB;AAChD,QAAMoE,cAAanE,gBAAqB;AACxC,QAAM,oBAAoBC;AAC1B,QAAMyC,kBAAiBvB;AACvB,QAAM4B,yBAAwB1B;AAC9B,QAAM,QAAQC;AACd,QAAMmD,UAASjD;AACf,QAAMe,YAAWb;AACjB,QAAM,gBAAgBC;AACtB,QAAM+C,UAASM;AACf,QAAMxG,YAAWyG;AACjB,QAAM,cAAcC,iBAAsB;AAK1C,QAAM,kBAAkB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACH;AACD,EAAA5G,SAA+B,uBAAA;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACH;AACD,QAAM,UAAU,CAAC,SAAS,QAAQ,WAAW;AAC7C,WAAS,QAAQL,IAAG;AAChB,WAAOA,MAAK,SAAa,GAAAO,UAAS,UAAUP,EAAC,KAAK,QAAQ,SAASA,GAAE,KAAM,CAAA;AAAA;AAE/E,EAAAK,SAAiC,yBAAA;AAAA,IAC7B,IAAG,GAAIoG,QAAO,MAAM,yBAAyB,wBAAwB,GAAGpG,SAAQ,oBAAoB;AAAA,EACvG;AACD,QAAM,oBAAoB;AAC1B,QAAM,YAAN,MAAM,kBAAiBoE,gBAAe,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAa/C,YAAY,YAAY,MAAM,SAAS;AACnC,YAAM,MAAM,OAAO;AAd3B;AACI;AACA;AACA;AACA;AACA,+BAAO,CAAE;AACT,wCAAgB,CAAE;AAClB,gCAAQ,CAAE;AAmHV,+CAA0B,GAAA+B,QAAO,MAAM,OAAU,GAAA,MAAM,kBAAkB,mBAAK,gBAAe,KAAK,OAAO,CAAC;AAC1G,yCAAgB,GAAIA,QAAO,MAAM,MAAA;;AAAM,iBAAApF,MAAA,mBAAK,qBAAL,+BAAAA,IAA4B,YAAW;AAAA,OAAK;AACnF,uCAAkB,GAAAoF,QAAO,MAAM,MAAM;;AAAA,kCAAK,eAAL,aAAuB,CAAA,MAAKpF,MAAA,mBAAK,qBAAL,+BAAAA,IAA4B,WAAU,CAAA;AAAA,OAAE;AACzG,mDAA0B,GAAIoF,QAAO,MAAM,MAAM;;AAC7C,cAAM,MAAM,mBAAK,qBAAL;AACZ,cAAM,OAAMpF,MAAA,2BAAK,WAAL,gBAAAA,IAAa;AACzB,cAAM,OAAM,gCAAK,WAAL,mBAAa;AACzB,YAAI,OAAO,QAAQ,IAAI,YAAY,QAAQ,OAAO,QAAQ,OAAO;AAC7D;AAEJ,cAAM4E,OAAK,GAAI,YAAY,eAAe,mBAAK,eAAc,mBAAmB;AAChF,YAAIA,OAAM,MAAM;AACZ,iBAAO;AAAA,YACH,IAAIA,IAAG;AAAA,YACP,KAAK;AAAA,UACR;AAAA;AAEL,YAAI;AACA,gBAAMkB,SAAQ,KAAK,QAAQ,MAAM,KAAK,GAAG;AACzC,gBAAM,QAAQ,GAAG,YAAY,eAAeA,MAAK;AACjD,cAAI,QAAQ,MAAM;AACd,mBAAO;AAAA,cACH,IAAI,KAAK;AAAA,cACT,KAAK;AAAA,YACR;AAAA;iBAGF,OAAO;AACV,eAAK,SAAS,KAAK,wDAAwD,KAAK;AAAA;AAEpF;AAAA,MACR,CAAK;AACD,+BAAU,GAAAV,QAAO,MAAM,MAAM;;AAAA,gBAAApF,MAAA,mBAAK,kBAAL,+BAAAA,IAAyB;AAAA,OAAE;AACxD,4CAAmB,GAAIoF,QAAO,MAAM,MAAM;AACtC,YAAI,SAAS,KAAK,QAAQ,gCAAgC;AACtD,gBAAM,UAAU,mBAAK,yBAAL;AAChB,cAAI,WAAW,MAAM;AACjB,mBAAO;AAAA;;AAGf,gBAAQ,GAAI,YAAY,yBAAyB,mBAAK,gBAAe,KAAK,OAAO,KAC7E,mBAAK,yBAAL,eACI,GAAA,YAAY,+BAA+B,mBAAK,gBAAe,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA,SAK9E,sBAAK,sCAAL,aACK;AAAA,UACE,IAAI;AAAA,UACJ,KAAK;AAAA;;UAGL;AAAA;AAAA,SAER,GAAI,YAAY,8BAA8B,mBAAK,cAAa;AAAA,SAE5D,GAAA,YAAY,8BAA8B,mBAAK,gBAAe,KAAK,OAAO;AAAA,MAC1F,CAAK;AArKG,WAAK,aAAa;AAClB,WAAK,OAAO;AACZ,WAAK,UAAU;AAEf,WAAK,UAAU,KAAK,KAAK,SAAS,IAAI;AACtC,yBAAK,OAAQ,EAAE,YAAY,WAAY;AACvC,yBAAK,OAAM,SAAS,KAAK;AAAA;IAE7B,OAAO,IAAI,UAAU,SAAS;AAC1B,YAAM,WAAW,kBAAkB,yBAAyB;AAAA,QACxD,GAAGnG,SAAQ;AAAA,QACX,GAAG;AAAA,MACf,CAAS;AACD,YAAM,aAAa2E,OAAM,QAAQ,QAAQ;AACzC,YAAM,OAAO,CAAC,GAAGF,uBAAsB,yBAAyB,SAAS,IAAG,GAAI/B,SAAQ,KAAK,KAAK,QAAQ,CAAC;AAE3G,WAAK,KAAK,QAAQ,cAAiB,GAAAuB,UAAS,UAAU,KAAK,MAAM,IAAI,KAAK,SAAS,IAAI;AACvF,UAAI,KAAK,QAAQ;AACb,aAAK,KAAK,QAAQ,KAAK;AAAA;AAE3B,UAAI,KAAK,iBAAiB,QAAQ,KAAK,kBAAkB,OAAO;AAE5D,aAAK,KAAK,QAAQ,2BAA2B;AAC7C,aAAK,KAAK,QAAQ,mBAAmB,KAAK,aAAa;AAAA;AAE3D,UAAI,SAAS,KAAK,aAAa;AAC3B,aAAK,KAAK,QAAQ,aAAa;AAAA;AAInC,WAAK,KAAK,GAAG,KAAK,YAAY,IAAI,CAAC,OAAO,MAAM,KAAK,GAAG,CAAC;AAGzD,WAAK,KAAK,QAAQ,UAAU;AAC5B,aAAO,IAAI,UAAS,YAAY,MAAM,IAAI;AAAA;IAE9C,WAAW;AACP,aAAO,aAAa,KAAK,aAAa;AAAA;;IAG1C,MAAM,MAAM,KAAK;AACb,UAAI;AACA,2BAAK,MAAO,KAAK,MAAM,IAAI,EAAE,CAAC;AAAA,eAE3B,WAAW;AAEd,SAAA,GAAIuC,iBAAgB,UAAU,KAAK,qCAAqC;AAAA,UACpE;AAAA,UACA;AAAA,UACA;AAAA,QAChB,CAAa;AACD,cAAM,OAAO;AAAA;AAGjB,YAAM,aAAa7B,OAAM,QAAQ,mBAAK,MAAK,UAAU;AAErD,UAAI,eAAe,KAAK,YAAY;AAEhC,cAAM,IAAI,MAAM,4CAA4C,mBAAK,MAAK,UAAU,aAAa,KAAK,UAAU,EAAE;AAAA;AAElH,aAAO,sBAAK,mCAAL;AAAA;;AAtEX;AACA;AACA;AAPJ;AA6EI,eAAQ,WAAG;;AACP,WAAO,QAAO5D,MAAA,mBAAK,mBAAL,gBAAAA,IAAoB,QAAQ,EAAE,WAAW,QAAQ;AAAA;AAEnE,oBAAa,WAAG;AACZ,WAAO,sBAAK,iCAAL,cAAmB,KAAK,QAAQ;AAAA;AAE3C,eAAQ,SAAC,GAAG;AACR,WAAO,KAAK,UAAU,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI;AAAA;AAEjD,iBAAU,WAAG;AACT,QAAI,KAAK,SAAS;AACd,yBAAK,eAAgB,CAAE;AACvB,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,mBAAK,KAAI,GAAG;AAClD,cAAM,IAAI,sBAAK,iCAAL,WAAc;AACxB,2BAAK,eAAc,CAAC,IAAI;AAAA;WAG3B;AACD,yBAAK,eAAgB,mBAAK;AAAA;AAG9B,UAAM,OAAO,mBAAK;AAGlB,uBAAK,qBAAL;AACA,UAAM,QAAQ,mBAAK,kBAAL;AACd,QAAI,OAAO;AACP,WAAK,KAAK,MAAM;AAChB,WAAK,WAAW,MAAM;AAAA;AAE1B,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,mBAAK,KAAI,GAAG;AAClD,YAAM,IAAI,sBAAK,iCAAL,WAAc;AACxB,YAAM,IAAI,sBAAK,kCAAL,WAAe,GAAG;AAE5B,UAAI,KAAK;AACL,aAAK,GAAG,IAAI;AAAA;AAKpB,UAAM,EAAE,QAAQ,SAAU,KAAO,GAAA0F,qBAAoB,mBAAmB,MAAM,IAAI;AAClF,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,WAAO;AAAA;AAEX;AACA;AACA;AACA;AA6BA;AACA;AA0BA,gBAAS,SAAC,SAAS,OAAO;AACtB,QAAI,QAAQ,KAAK;AACb,aAAO;AACX,QAAI;AACA,UAAI,gBAAgB,QAAQ,OAAO,KAAK,GAAG;AACvC,eAAO;AAAA;AAEX,UAAI,QAAQ,WAAW,KAAK,KAAK,QAAQ,WAAW,aAAa,GAAG;AAEhE,YAAI,mBAAK,eAAL;AACA,iBAAO;AAEX,cAAM,SAAS,mBAAK,aAAL,WAAmB,OAAO;AACzC,YAAI,UAAU;AACV,iBAAO;AAAA;AAGf,UAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,eAAO,MAAM,IAAI,CAAC,OAAO,sBAAK,kCAAL,WAAe,SAAS,GAAG;AAAA;AAExD,UAAI,OAAO,UAAU,UAAU;AAC3B,cAAM,SAAS,CAAE;AACjB,mBAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,KAAK,GAAG;AACxC,iBAAO,CAAC,IAAI,sBAAK,kCAAL,WAAe,UAAU,MAAM,GAAG;AAAA;AAElD,eAAO;AAAA;AAEX,UAAI,OAAO,UAAU,UAAU;AAC3B,cAAM,IAAItB,eAAc,YAAY,aAAa,KAAK;AACtD,YAAI,KAAK;AACL,iBAAO;AACX,YAAI,SAAS,KAAK,OAAO,GAAG;AACxB,gBAAM2B,MAAK,GAAG,UAAU,WAAW,KAAK;AACxC,cAAIA,MAAK;AACL,mBAAOA;AAAA;AAEf,YAAI,kBAAkB,KAAK,OAAO;AAAA;AAAA,QAG9B,CAAC,cAAc,YAAY,KAAK,KAAK,GAAG;AAIxC,gBAAMnB,MAAK,aAAa,OAAO,KAAK,sBAAK,sCAAL,aAC9B,QACA,KAAK,QAAQ,oBACT,mBAAK,KAAL,aACA;AAEV,gBAAM,kBAAkB,eAAe,KAAK,OAAO;AACnD,gBAAM,kBAAkB,QAAQ,KAAK,OAAO;AAC5C,gBAAM,kBAAkB,QAAQ,KAAK,OAAO;AAC5C,gBAAM,UAAU,mBAAmB,mBAAmB,kBAChDO,gBAAe,aAAa,KAAK,OAAOP,GAAE,IAC1C,YACD,mBAAmB,kBACdE,YAAW,SAAS,SAAS,OAAOF,GAAE,IACtC,YACL,mBAAmB,kBACdM,YAAW,SAAS,KAAK,KAAK,IAC9B,WACN;AACJ,gBAAM,YAAY,mBAAK,KAAL;AAClB,cAAI,KAAK,QAAQ,qBACb,UAAU,QACV,aAAa,QACb,kBAAkBC,gBAAe,gBACjC,sBAAK,sCAAL,cACA,CAAC,aAAa,OAAO,KACrB,SAAS,OAAO,cAAc;AAC9B,mBAAO,OAAO,QAAQ,SAAS;AAAA;AAEnC,iBAAO;AAAA;;AAIf,aAAO;AAAA,aAEJ,GAAG;AACN,WAAK,SAAS,KAAK,mBAAmB,OAAO,eAAe,KAAK,UAAU,KAAK,CAAC,KAAK,CAAC,EAAE;AACzF,aAAO;AAAA;;AArQnB,MAAMa,YAAN;AAyQA,EAAA/G,SAAA,WAAmB+G;AACnB,WAAS,aAAa,SAAS;AAC3B,WAAO,QAAQ,SAAS,KAAK,KAAK,QAAQ,WAAW,KAAK;AAAA;;;AC/V9D,IAAI,kBAAmBhH,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,MAAM;AAAA,EACnE;AACI,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAI,qBAAsBA,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,GAAG;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAI,eAAgBA,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAE;AACf,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG,iBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvI,qBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAeiH,sBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAClCA,qBAAA,qBAAG;AAC7B,MAAM,QAAQ,aAAavH,YAAoB;AAC/C,MAAM,UAAUQ;AAChB,MAAM,iBAAiBE;AACvB,MAAM,wBAAwBW;AAC9B,MAAM,2BAA2B,eAAe,aAAa;AAAA,EACzD,YAAY,MAAM,SAAS;AACvB,UAAM,MAAM,OAAO;AAAA,EAC3B;AAAA,EACI,OAAO,IAAI,QAAQ,SAAS,MAAM;AAE9B,UAAM,WAAW,QAAQ,SAAS;AAAA,MAC9B,GAAG,sBAAsB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,uBAAuB,OAAO;AAAA,MACnC;AAAA,MACA,MAAM,QAAQ,OAAO;AAAA,MACrB,MAAM,QAAQ,MAAM;AAAA,IAChC,CAAS;AACD,WAAO,IAAI,mBAAmB,MAAM,IAAI;AAAA,EAChD;AAAA,EACI,MAAM,MAAM,OAAO;AACf,QAAI,SAAS,MAAM;AACf,YAAM,MAAM,OAAO,KAAK;AAExB,UAAI,IAAI,MAAM,YAAY,KAAK,QAAQ,CAAC,IAAI,MAAM,cAAc,GAAG;AAC/D,cAAM;AAAA,MACtB;AAAA,IACA;AACQ,QAAI,QAAQ,KAAK,MAAM,0BAA0B,GAAG;AAChD,YAAO,SACH,IAAI,MAAM,KAAK,KAAM,EAAC,MAAM,IAAI,EAAE,CAAC,KAAK,iCAAiC;AAAA,IACzF;AAAA,EACA;AACA;AAC0BkG,qBAAA,qBAAG;;;;;;AChE5B,GAAC,SAAS,MAAM;AAGhB,QAAI,cAA4ChH;AAGhD,QAAI,aACH6E,QAAO,WAAW,eAAeA;AAIlC,QAAI,aAAa,OAAOoC,kBAAU,YAAYA;AAC9C,QAAI,WAAW,WAAW,cAAc,WAAW,WAAW,YAAY;AACzE,aAAO;AAAA;AAMR,QAAI,qBAAqB;AAIzB,QAAI,sBAAsB;AAI1B,QAAI,oBAAoB;AAExB,QAAI,sBAAsB;AAC1B,QAAI,YAAY,EAAC,KAAO,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,OAAM,KAAS,kBAAiB,KAAS,WAAU,KAAS,aAAY,KAAS,QAAO,KAAS,UAAS,KAAK,OAAM,MAAK,WAAU,KAAS,UAAS,KAAS,eAAc,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAO,QAAO,MAAe,cAAa,KAAS,SAAQ,KAAI,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAI,SAAQ,KAAI,QAAO,KAAS,SAAQ,KAAI,SAAQ,KAAS,UAAS,KAAI,QAAO,KAAO,SAAQ,KAAI,SAAQ,KAAO,UAAS,KAAI,UAAS,KAAS,QAAO,KAAS,QAAO,KAAO,UAAS,KAAK,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAI,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAI,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAO,QAAO,KAAO,QAAO,KAAI,UAAS,KAAI,OAAM,KAAI,OAAM,aAAY,MAAK,KAAI,OAAM,KAAI,OAAM,KAAI,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAI,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAI,OAAM,KAAO,QAAO,KAAS,SAAQ,KAAS,OAAM,KAAO,OAAM,KAAS,QAAO,KAAS,SAAQ,KAAO,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAO,OAAM,KAAO,QAAO,KAAO,OAAM,KAAS,UAAS,KAAS,MAAK,KAAS,MAAK,KAAS,OAAM,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,cAAa,KAAS,YAAW,KAAS,OAAM,KAAS,cAAa,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,OAAM,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,WAAU,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,MAAe,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,OAAM,KAAS,MAAK,KAAS,SAAQ,KAAS,MAAK,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,UAAS,KAAS,OAAM,KAAI,QAAO,KAAO,MAAK,KAAO,OAAM,KAAO,SAAQ,KAAI,MAAK,KAAS,OAAM,MAAU,QAAO,KAAI,UAAS,KAAS,MAAK,MAAU,OAAM,KAAS,SAAQ,KAAI,MAAK,KAAS,OAAM,MAAU,QAAO,KAAO,OAAM,KAAI,QAAO,KAAO,UAAS,KAAS,SAAQ,KAAS,MAAK,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,MAAK,KAAS,OAAM,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,WAAU,KAAS,SAAQ,KAAS,YAAW,KAAS,YAAW,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,OAAM,KAAS,QAAO,MAAe,SAAQ,KAAS,QAAO,MAAe,QAAO,KAAS,MAAK,MAAe,OAAM,KAAS,OAAM,KAAS,MAAK,KAAS,QAAO,MAAe,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,MAAK,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,MAAe,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,aAAY,MAAe,QAAO,KAAS,QAAO,MAAe,SAAQ,KAAS,SAAQ,MAAe,UAAS,KAAS,SAAQ,MAAe,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,MAAe,WAAU,KAAS,MAAK,KAAS,OAAM,MAAe,QAAO,KAAS,MAAK,KAAS,OAAM,MAAe,QAAO,KAAS,MAAK,MAAe,OAAM,KAAS,MAAK,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,OAAM,MAAe,QAAO,KAAS,MAAK,MAAe,QAAO,MAAe,OAAM,KAAS,MAAK,MAAe,QAAO,MAAe,OAAM,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,MAAK,KAAS,QAAO,KAAS,MAAK,KAAS,QAAO,KAAS,MAAK,KAAS,OAAM,KAAS,MAAK,KAAS,OAAM,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,MAAe,oBAAmB,KAAS,OAAM,KAAS,QAAO,MAAe,SAAQ,KAAS,OAAM,KAAS,QAAO,MAAe,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,MAAe,UAAS,KAAS,SAAQ,MAAe,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,MAAe,mBAAkB,KAAS,SAAQ,MAAe,qBAAoB,KAAS,UAAS,KAAS,WAAU,KAAS,UAAS,KAAS,WAAU,KAAS,SAAQ,MAAe,UAAS,KAAS,SAAQ,MAAe,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,MAAe,WAAU,KAAS,SAAQ,KAAS,UAAS,MAAe,WAAU,KAAS,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,MAAK,MAAe,OAAM,KAAS,MAAK,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,OAAM,MAAe,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,WAAU,MAAe,YAAW,KAAS,WAAU,KAAS,WAAU,KAAS,SAAQ,MAAe,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,YAAW,KAAS,YAAW,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,YAAW,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,YAAW,KAAS,mBAAkB,KAAS,oBAAmB,KAAS,aAAY,KAAS,cAAa,KAAS,YAAW,KAAS,YAAW,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,KAAS,QAAO,KAAS,wBAAuB,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,oBAAmB,KAAS,qBAAoB,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,qBAAoB,KAAS,YAAW,KAAS,WAAU,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,YAAW,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,YAAW,KAAS,cAAa,KAAS,gBAAe,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,MAAe,UAAS,KAAS,WAAU,KAAS,QAAO,KAAS,QAAO,KAAS,WAAU,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,WAAU,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,mBAAkB,KAAS,qBAAoB,KAAS,uBAAsB,KAAS,oBAAmB,KAAS,iBAAgB,KAAS,kBAAiB,KAAS,oBAAmB,KAAS,sBAAqB,KAAS,qBAAoB,KAAS,sBAAqB,KAAS,mBAAkB,KAAS,qBAAoB,KAAS,iBAAgB,KAAS,kBAAiB,KAAS,oBAAmB,KAAS,sBAAqB,KAAS,qBAAoB,KAAS,sBAAqB,KAAS,mBAAkB,KAAS,qBAAoB,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,gBAAe,KAAS,SAAQ,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,UAAS,KAAS,YAAW,KAAS,QAAO,KAAS,SAAQ,KAAS,WAAU,KAAS,WAAU,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,YAAW,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,YAAW,KAAS,YAAW,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,WAAU,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,WAAU,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,YAAW,KAAS,mBAAkB,MAAe,sBAAqB,KAAS,oBAAmB,MAAe,uBAAsB,KAAS,UAAS,KAAS,YAAW,KAAS,WAAU,KAAS,UAAS,KAAS,YAAW,KAAS,YAAW,KAAS,QAAO,KAAS,eAAc,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,YAAW,KAAS,YAAW,KAAS,SAAQ,KAAS,YAAW,KAAS,YAAW,KAAS,WAAU,KAAS,YAAW,KAAS,WAAU,KAAS,YAAW,KAAS,WAAU,KAAS,YAAW,KAAS,WAAU,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,UAAS,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,YAAW,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,YAAW,KAAS,UAAS,KAAS,QAAO,KAAS,WAAU,KAAS,YAAW,KAAS,WAAU,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,YAAW,KAAS,YAAW,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,WAAU,KAAS,OAAM,KAAS,MAAK,KAAS,UAAS,KAAS,QAAO,KAAS,WAAU,KAAS,YAAW,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,WAAU,MAAe,YAAW,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,MAAe,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,WAAU,KAAS,SAAQ,KAAS,SAAQ,KAAS,WAAU,KAAS,WAAU,KAAS,OAAM,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,YAAW,KAAS,YAAW,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,MAAK,KAAS,MAAK,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,YAAW,MAAe,qBAAoB,KAAS,kBAAiB,MAAe,2BAA0B,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,MAAe,SAAQ,KAAS,QAAO,MAAe,SAAQ,KAAS,SAAQ,KAAS,OAAM,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,MAAK,KAAS,MAAK,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,WAAU,KAAS,QAAO,MAAe,SAAQ,KAAS,QAAO,MAAe,SAAQ,KAAS,UAAS,KAAS,UAAS,MAAe,UAAS,KAAS,SAAQ,MAAe,UAAS,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,WAAU,KAAS,WAAU,KAAS,SAAQ,KAAS,WAAU,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,MAAe,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAO,UAAS,KAAO,QAAO,KAAI,UAAS,KAAO,SAAQ,KAAO,OAAM,KAAS,QAAO,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAO,QAAO,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAO,SAAQ,KAAO,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,MAAe,OAAM,KAAS,MAAK,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,MAAK,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,OAAM,KAAO,OAAM,KAAS,MAAK,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAO,QAAO,KAAO,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,MAAK,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,MAAe,OAAM,KAAS,WAAU,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,MAAK,MAAe,QAAO,KAAS,QAAO,KAAS,MAAK,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,MAAe,QAAO,MAAe,OAAM,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,QAAO,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,KAAS,MAAK,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,MAAK,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAO,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,QAAO,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,MAAK,KAAO,SAAQ,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,WAAU,KAAS,WAAU,KAAS,MAAK,KAAS,OAAM,KAAS,MAAK,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,WAAU,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OA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","x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}